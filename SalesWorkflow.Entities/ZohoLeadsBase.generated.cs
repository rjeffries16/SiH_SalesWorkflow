
/*
	File generated by NetTiers templates [www.nettiers.net]
	Generated on : Thursday, May 12, 2016
	Important: Do not modify this file. Edit the file ZohoLeads.cs instead.
*/

#region using directives
using System;
using System.ComponentModel;
using System.Collections;
using System.Xml.Serialization;
using System.Runtime.Serialization;

using SalesWorkflow.Entities.Validation;
#endregion

namespace SalesWorkflow.Entities
{
	///<summary>
	/// An object representation of the 'ZohoLeads' table. [No description found the database]	
	///</summary>
	[Serializable]
	[DataObject, CLSCompliant(true)]
	public abstract partial class ZohoLeadsBase : EntityBase, IZohoLeads, IEntityId<ZohoLeadsKey>, System.IComparable, System.ICloneable, ICloneableEx, IEditableObject, IComponent, INotifyPropertyChanged
	{		
		#region Variable Declarations
		
		/// <summary>
		///  Hold the inner data of the entity.
		/// </summary>
		private ZohoLeadsEntityData entityData;
		
		/// <summary>
		/// 	Hold the original data of the entity, as loaded from the repository.
		/// </summary>
		private ZohoLeadsEntityData _originalData;
		
		/// <summary>
		/// 	Hold a backup of the inner data of the entity.
		/// </summary>
		private ZohoLeadsEntityData backupData; 
		
		/// <summary>
		/// 	Key used if Tracking is Enabled for the <see cref="EntityLocator" />.
		/// </summary>
		private string entityTrackingKey;
		
		/// <summary>
		/// 	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
		/// </summary>
		/// <remark>Mostly used for databinding</remark>
		[NonSerialized]
		private TList<ZohoLeads> parentCollection;
		
		private bool inTxn = false;
		
		/// <summary>
		/// Occurs when a value is being changed for the specified column.
		/// </summary>
		[field:NonSerialized]
		public event ZohoLeadsEventHandler ColumnChanging;		
		
		/// <summary>
		/// Occurs after a value has been changed for the specified column.
		/// </summary>
		[field:NonSerialized]
		public event ZohoLeadsEventHandler ColumnChanged;
		
		#endregion Variable Declarations
		
		#region Constructors
		///<summary>
		/// Creates a new <see cref="ZohoLeadsBase"/> instance.
		///</summary>
		public ZohoLeadsBase()
		{
			this.entityData = new ZohoLeadsEntityData();
			this.backupData = null;
		}		
		
		///<summary>
		/// Creates a new <see cref="ZohoLeadsBase"/> instance.
		///</summary>
		///<param name="_activitiesInvolved"></param>
		///<param name="_callsInvolved"></param>
		///<param name="_company"></param>
		///<param name="_converted"></param>
		///<param name="_createdBy"></param>
		///<param name="_createdTime"></param>
		///<param name="_email"></param>
		///<param name="_emailOptOut"></param>
		///<param name="_eventsInvolved"></param>
		///<param name="_featuresOfInterest"></param>
		///<param name="_firstName"></param>
		///<param name="_safeNameFirstTimeCallerNewLead"></param>
		///<param name="_ifNoLongerInterested"></param>
		///<param name="_industry"></param>
		///<param name="_lastActivityTime"></param>
		///<param name="_lastName"></param>
		///<param name="_lastVisitedTime"></param>
		///<param name="_leadOwnerId"></param>
		///<param name="_leadOwner"></param>
		///<param name="_leadSource"></param>
		///<param name="_leadStatus"></param>
		///<param name="_leadid"></param>
		///<param name="_mobile"></param>
		///<param name="_modifiedBy"></param>
		///<param name="_modifiedTime"></param>
		///<param name="_phone"></param>
		///<param name="_rating"></param>
		///<param name="_secondaryEmail"></param>
		///<param name="_state"></param>
		///<param name="_submissionTime"></param>
		///<param name="_submittedOn"></param>
		///<param name="_tasksInvolved"></param>
		///<param name="_timeZone"></param>
		///<param name="_url"></param>
		///<param name="_website"></param>
		///<param name="_worries"></param>
		///<param name="_wday811"></param>
		///<param name="_wday112"></param>
		///<param name="_wday25"></param>
		///<param name="_wday58"></param>
		///<param name="_sat811"></param>
		///<param name="_sat112"></param>
		///<param name="_sat25"></param>
		///<param name="_sat58"></param>
		///<param name="_sun811"></param>
		///<param name="_sun112"></param>
		///<param name="_sun25"></param>
		///<param name="_sun58"></param>
		public ZohoLeadsBase(System.Boolean _activitiesInvolved, System.Boolean _callsInvolved, 
			System.String _company, System.Boolean _converted, System.String _createdBy, System.DateTime? _createdTime, 
			System.String _email, System.Boolean _emailOptOut, System.Boolean _eventsInvolved, System.String _featuresOfInterest, 
			System.String _firstName, System.Boolean _safeNameFirstTimeCallerNewLead, System.String _ifNoLongerInterested, 
			System.String _industry, System.DateTime? _lastActivityTime, System.String _lastName, System.String _lastVisitedTime, 
			System.String _leadOwnerId, System.String _leadOwner, System.String _leadSource, System.String _leadStatus, 
			System.String _leadid, System.String _mobile, System.String _modifiedBy, System.DateTime? _modifiedTime, 
			System.String _phone, System.String _rating, System.String _secondaryEmail, System.String _state, 
			System.String _submissionTime, System.DateTime? _submittedOn, System.Boolean _tasksInvolved, System.String _timeZone, 
			System.String _url, System.String _website, System.String _worries, System.Int32? _wday811, 
			System.Int32? _wday112, System.Int32? _wday25, System.Int32? _wday58, System.Int32? _sat811, 
			System.Int32? _sat112, System.Int32? _sat25, System.Int32? _sat58, System.Int32? _sun811, 
			System.Int32? _sun112, System.Int32? _sun25, System.Int32? _sun58)
		{
			this.entityData = new ZohoLeadsEntityData();
			this.backupData = null;

			this.ActivitiesInvolved = _activitiesInvolved;
			this.CallsInvolved = _callsInvolved;
			this.Company = _company;
			this.Converted = _converted;
			this.CreatedBy = _createdBy;
			this.CreatedTime = _createdTime;
			this.Email = _email;
			this.EmailOptOut = _emailOptOut;
			this.EventsInvolved = _eventsInvolved;
			this.FeaturesOfInterest = _featuresOfInterest;
			this.FirstName = _firstName;
			this.SafeNameFirstTimeCallerNewLead = _safeNameFirstTimeCallerNewLead;
			this.IfNoLongerInterested = _ifNoLongerInterested;
			this.Industry = _industry;
			this.LastActivityTime = _lastActivityTime;
			this.LastName = _lastName;
			this.LastVisitedTime = _lastVisitedTime;
			this.LeadOwnerId = _leadOwnerId;
			this.LeadOwner = _leadOwner;
			this.LeadSource = _leadSource;
			this.LeadStatus = _leadStatus;
			this.Leadid = _leadid;
			this.Mobile = _mobile;
			this.ModifiedBy = _modifiedBy;
			this.ModifiedTime = _modifiedTime;
			this.Phone = _phone;
			this.Rating = _rating;
			this.SecondaryEmail = _secondaryEmail;
			this.State = _state;
			this.SubmissionTime = _submissionTime;
			this.SubmittedOn = _submittedOn;
			this.TasksInvolved = _tasksInvolved;
			this.TimeZone = _timeZone;
			this.Url = _url;
			this.Website = _website;
			this.Worries = _worries;
			this.Wday811 = _wday811;
			this.Wday112 = _wday112;
			this.Wday25 = _wday25;
			this.Wday58 = _wday58;
			this.Sat811 = _sat811;
			this.Sat112 = _sat112;
			this.Sat25 = _sat25;
			this.Sat58 = _sat58;
			this.Sun811 = _sun811;
			this.Sun112 = _sun112;
			this.Sun25 = _sun25;
			this.Sun58 = _sun58;
		}
		
		///<summary>
		/// A simple factory method to create a new <see cref="ZohoLeads"/> instance.
		///</summary>
		///<param name="_activitiesInvolved"></param>
		///<param name="_callsInvolved"></param>
		///<param name="_company"></param>
		///<param name="_converted"></param>
		///<param name="_createdBy"></param>
		///<param name="_createdTime"></param>
		///<param name="_email"></param>
		///<param name="_emailOptOut"></param>
		///<param name="_eventsInvolved"></param>
		///<param name="_featuresOfInterest"></param>
		///<param name="_firstName"></param>
		///<param name="_safeNameFirstTimeCallerNewLead"></param>
		///<param name="_ifNoLongerInterested"></param>
		///<param name="_industry"></param>
		///<param name="_lastActivityTime"></param>
		///<param name="_lastName"></param>
		///<param name="_lastVisitedTime"></param>
		///<param name="_leadOwnerId"></param>
		///<param name="_leadOwner"></param>
		///<param name="_leadSource"></param>
		///<param name="_leadStatus"></param>
		///<param name="_leadid"></param>
		///<param name="_mobile"></param>
		///<param name="_modifiedBy"></param>
		///<param name="_modifiedTime"></param>
		///<param name="_phone"></param>
		///<param name="_rating"></param>
		///<param name="_secondaryEmail"></param>
		///<param name="_state"></param>
		///<param name="_submissionTime"></param>
		///<param name="_submittedOn"></param>
		///<param name="_tasksInvolved"></param>
		///<param name="_timeZone"></param>
		///<param name="_url"></param>
		///<param name="_website"></param>
		///<param name="_worries"></param>
		///<param name="_wday811"></param>
		///<param name="_wday112"></param>
		///<param name="_wday25"></param>
		///<param name="_wday58"></param>
		///<param name="_sat811"></param>
		///<param name="_sat112"></param>
		///<param name="_sat25"></param>
		///<param name="_sat58"></param>
		///<param name="_sun811"></param>
		///<param name="_sun112"></param>
		///<param name="_sun25"></param>
		///<param name="_sun58"></param>
		public static ZohoLeads CreateZohoLeads(System.Boolean _activitiesInvolved, System.Boolean _callsInvolved, 
			System.String _company, System.Boolean _converted, System.String _createdBy, System.DateTime? _createdTime, 
			System.String _email, System.Boolean _emailOptOut, System.Boolean _eventsInvolved, System.String _featuresOfInterest, 
			System.String _firstName, System.Boolean _safeNameFirstTimeCallerNewLead, System.String _ifNoLongerInterested, 
			System.String _industry, System.DateTime? _lastActivityTime, System.String _lastName, System.String _lastVisitedTime, 
			System.String _leadOwnerId, System.String _leadOwner, System.String _leadSource, System.String _leadStatus, 
			System.String _leadid, System.String _mobile, System.String _modifiedBy, System.DateTime? _modifiedTime, 
			System.String _phone, System.String _rating, System.String _secondaryEmail, System.String _state, 
			System.String _submissionTime, System.DateTime? _submittedOn, System.Boolean _tasksInvolved, System.String _timeZone, 
			System.String _url, System.String _website, System.String _worries, System.Int32? _wday811, 
			System.Int32? _wday112, System.Int32? _wday25, System.Int32? _wday58, System.Int32? _sat811, 
			System.Int32? _sat112, System.Int32? _sat25, System.Int32? _sat58, System.Int32? _sun811, 
			System.Int32? _sun112, System.Int32? _sun25, System.Int32? _sun58)
		{
			ZohoLeads newZohoLeads = new ZohoLeads();
			newZohoLeads.ActivitiesInvolved = _activitiesInvolved;
			newZohoLeads.CallsInvolved = _callsInvolved;
			newZohoLeads.Company = _company;
			newZohoLeads.Converted = _converted;
			newZohoLeads.CreatedBy = _createdBy;
			newZohoLeads.CreatedTime = _createdTime;
			newZohoLeads.Email = _email;
			newZohoLeads.EmailOptOut = _emailOptOut;
			newZohoLeads.EventsInvolved = _eventsInvolved;
			newZohoLeads.FeaturesOfInterest = _featuresOfInterest;
			newZohoLeads.FirstName = _firstName;
			newZohoLeads.SafeNameFirstTimeCallerNewLead = _safeNameFirstTimeCallerNewLead;
			newZohoLeads.IfNoLongerInterested = _ifNoLongerInterested;
			newZohoLeads.Industry = _industry;
			newZohoLeads.LastActivityTime = _lastActivityTime;
			newZohoLeads.LastName = _lastName;
			newZohoLeads.LastVisitedTime = _lastVisitedTime;
			newZohoLeads.LeadOwnerId = _leadOwnerId;
			newZohoLeads.LeadOwner = _leadOwner;
			newZohoLeads.LeadSource = _leadSource;
			newZohoLeads.LeadStatus = _leadStatus;
			newZohoLeads.Leadid = _leadid;
			newZohoLeads.Mobile = _mobile;
			newZohoLeads.ModifiedBy = _modifiedBy;
			newZohoLeads.ModifiedTime = _modifiedTime;
			newZohoLeads.Phone = _phone;
			newZohoLeads.Rating = _rating;
			newZohoLeads.SecondaryEmail = _secondaryEmail;
			newZohoLeads.State = _state;
			newZohoLeads.SubmissionTime = _submissionTime;
			newZohoLeads.SubmittedOn = _submittedOn;
			newZohoLeads.TasksInvolved = _tasksInvolved;
			newZohoLeads.TimeZone = _timeZone;
			newZohoLeads.Url = _url;
			newZohoLeads.Website = _website;
			newZohoLeads.Worries = _worries;
			newZohoLeads.Wday811 = _wday811;
			newZohoLeads.Wday112 = _wday112;
			newZohoLeads.Wday25 = _wday25;
			newZohoLeads.Wday58 = _wday58;
			newZohoLeads.Sat811 = _sat811;
			newZohoLeads.Sat112 = _sat112;
			newZohoLeads.Sat25 = _sat25;
			newZohoLeads.Sat58 = _sat58;
			newZohoLeads.Sun811 = _sun811;
			newZohoLeads.Sun112 = _sun112;
			newZohoLeads.Sun25 = _sun25;
			newZohoLeads.Sun58 = _sun58;
			return newZohoLeads;
		}
				
		#endregion Constructors
			
		#region Properties	
		
		#region Data Properties		
		/// <summary>
		/// 	Gets or sets the ActivitiesInvolved property. 
		///		
		/// </summary>
		/// <value>This type is bit.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		
		




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.Boolean ActivitiesInvolved
		{
			get
			{
				return this.entityData.ActivitiesInvolved; 
			}
			
			set
			{
				if (this.entityData.ActivitiesInvolved == value)
					return;
				
                OnPropertyChanging("ActivitiesInvolved");                    
				OnColumnChanging(ZohoLeadsColumn.ActivitiesInvolved, this.entityData.ActivitiesInvolved);
				this.entityData.ActivitiesInvolved = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(ZohoLeadsColumn.ActivitiesInvolved, this.entityData.ActivitiesInvolved);
				OnPropertyChanged("ActivitiesInvolved");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the CallsInvolved property. 
		///		
		/// </summary>
		/// <value>This type is bit.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		
		




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.Boolean CallsInvolved
		{
			get
			{
				return this.entityData.CallsInvolved; 
			}
			
			set
			{
				if (this.entityData.CallsInvolved == value)
					return;
				
                OnPropertyChanging("CallsInvolved");                    
				OnColumnChanging(ZohoLeadsColumn.CallsInvolved, this.entityData.CallsInvolved);
				this.entityData.CallsInvolved = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(ZohoLeadsColumn.CallsInvolved, this.entityData.CallsInvolved);
				OnPropertyChanged("CallsInvolved");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the Company property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 255)]
		public virtual System.String Company
		{
			get
			{
				return this.entityData.Company; 
			}
			
			set
			{
				if (this.entityData.Company == value)
					return;
				
                OnPropertyChanging("Company");                    
				OnColumnChanging(ZohoLeadsColumn.Company, this.entityData.Company);
				this.entityData.Company = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(ZohoLeadsColumn.Company, this.entityData.Company);
				OnPropertyChanged("Company");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the Converted property. 
		///		
		/// </summary>
		/// <value>This type is bit.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		
		




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.Boolean Converted
		{
			get
			{
				return this.entityData.Converted; 
			}
			
			set
			{
				if (this.entityData.Converted == value)
					return;
				
                OnPropertyChanging("Converted");                    
				OnColumnChanging(ZohoLeadsColumn.Converted, this.entityData.Converted);
				this.entityData.Converted = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(ZohoLeadsColumn.Converted, this.entityData.Converted);
				OnPropertyChanged("Converted");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the CreatedBy property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 255)]
		public virtual System.String CreatedBy
		{
			get
			{
				return this.entityData.CreatedBy; 
			}
			
			set
			{
				if (this.entityData.CreatedBy == value)
					return;
				
                OnPropertyChanging("CreatedBy");                    
				OnColumnChanging(ZohoLeadsColumn.CreatedBy, this.entityData.CreatedBy);
				this.entityData.CreatedBy = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(ZohoLeadsColumn.CreatedBy, this.entityData.CreatedBy);
				OnPropertyChanged("CreatedBy");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the CreatedTime property. 
		///		
		/// </summary>
		/// <value>This type is datetime.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.DateTime? CreatedTime
		{
			get
			{
				return this.entityData.CreatedTime; 
			}
			
			set
			{
				if (this.entityData.CreatedTime == value)
					return;
				
                OnPropertyChanging("CreatedTime");                    
				OnColumnChanging(ZohoLeadsColumn.CreatedTime, this.entityData.CreatedTime);
				this.entityData.CreatedTime = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(ZohoLeadsColumn.CreatedTime, this.entityData.CreatedTime);
				OnPropertyChanged("CreatedTime");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the Email property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 255)]
		public virtual System.String Email
		{
			get
			{
				return this.entityData.Email; 
			}
			
			set
			{
				if (this.entityData.Email == value)
					return;
				
                OnPropertyChanging("Email");                    
				OnColumnChanging(ZohoLeadsColumn.Email, this.entityData.Email);
				this.entityData.Email = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(ZohoLeadsColumn.Email, this.entityData.Email);
				OnPropertyChanged("Email");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the EmailOptOut property. 
		///		
		/// </summary>
		/// <value>This type is bit.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		
		




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.Boolean EmailOptOut
		{
			get
			{
				return this.entityData.EmailOptOut; 
			}
			
			set
			{
				if (this.entityData.EmailOptOut == value)
					return;
				
                OnPropertyChanging("EmailOptOut");                    
				OnColumnChanging(ZohoLeadsColumn.EmailOptOut, this.entityData.EmailOptOut);
				this.entityData.EmailOptOut = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(ZohoLeadsColumn.EmailOptOut, this.entityData.EmailOptOut);
				OnPropertyChanged("EmailOptOut");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the EventsInvolved property. 
		///		
		/// </summary>
		/// <value>This type is bit.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		
		




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.Boolean EventsInvolved
		{
			get
			{
				return this.entityData.EventsInvolved; 
			}
			
			set
			{
				if (this.entityData.EventsInvolved == value)
					return;
				
                OnPropertyChanging("EventsInvolved");                    
				OnColumnChanging(ZohoLeadsColumn.EventsInvolved, this.entityData.EventsInvolved);
				this.entityData.EventsInvolved = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(ZohoLeadsColumn.EventsInvolved, this.entityData.EventsInvolved);
				OnPropertyChanged("EventsInvolved");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the FeaturesOfInterest property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 255)]
		public virtual System.String FeaturesOfInterest
		{
			get
			{
				return this.entityData.FeaturesOfInterest; 
			}
			
			set
			{
				if (this.entityData.FeaturesOfInterest == value)
					return;
				
                OnPropertyChanging("FeaturesOfInterest");                    
				OnColumnChanging(ZohoLeadsColumn.FeaturesOfInterest, this.entityData.FeaturesOfInterest);
				this.entityData.FeaturesOfInterest = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(ZohoLeadsColumn.FeaturesOfInterest, this.entityData.FeaturesOfInterest);
				OnPropertyChanged("FeaturesOfInterest");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the FirstName property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 255)]
		public virtual System.String FirstName
		{
			get
			{
				return this.entityData.FirstName; 
			}
			
			set
			{
				if (this.entityData.FirstName == value)
					return;
				
                OnPropertyChanging("FirstName");                    
				OnColumnChanging(ZohoLeadsColumn.FirstName, this.entityData.FirstName);
				this.entityData.FirstName = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(ZohoLeadsColumn.FirstName, this.entityData.FirstName);
				OnPropertyChanged("FirstName");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the SafeNameFirstTimeCallerNewLead property. 
		///		
		/// </summary>
		/// <value>This type is bit.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		
		




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.Boolean SafeNameFirstTimeCallerNewLead
		{
			get
			{
				return this.entityData.SafeNameFirstTimeCallerNewLead; 
			}
			
			set
			{
				if (this.entityData.SafeNameFirstTimeCallerNewLead == value)
					return;
				
                OnPropertyChanging("SafeNameFirstTimeCallerNewLead");                    
				OnColumnChanging(ZohoLeadsColumn.SafeNameFirstTimeCallerNewLead, this.entityData.SafeNameFirstTimeCallerNewLead);
				this.entityData.SafeNameFirstTimeCallerNewLead = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(ZohoLeadsColumn.SafeNameFirstTimeCallerNewLead, this.entityData.SafeNameFirstTimeCallerNewLead);
				OnPropertyChanged("SafeNameFirstTimeCallerNewLead");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the IfNoLongerInterested property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 255)]
		public virtual System.String IfNoLongerInterested
		{
			get
			{
				return this.entityData.IfNoLongerInterested; 
			}
			
			set
			{
				if (this.entityData.IfNoLongerInterested == value)
					return;
				
                OnPropertyChanging("IfNoLongerInterested");                    
				OnColumnChanging(ZohoLeadsColumn.IfNoLongerInterested, this.entityData.IfNoLongerInterested);
				this.entityData.IfNoLongerInterested = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(ZohoLeadsColumn.IfNoLongerInterested, this.entityData.IfNoLongerInterested);
				OnPropertyChanged("IfNoLongerInterested");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the Industry property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 255)]
		public virtual System.String Industry
		{
			get
			{
				return this.entityData.Industry; 
			}
			
			set
			{
				if (this.entityData.Industry == value)
					return;
				
                OnPropertyChanging("Industry");                    
				OnColumnChanging(ZohoLeadsColumn.Industry, this.entityData.Industry);
				this.entityData.Industry = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(ZohoLeadsColumn.Industry, this.entityData.Industry);
				OnPropertyChanged("Industry");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the LastActivityTime property. 
		///		
		/// </summary>
		/// <value>This type is datetime.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.DateTime? LastActivityTime
		{
			get
			{
				return this.entityData.LastActivityTime; 
			}
			
			set
			{
				if (this.entityData.LastActivityTime == value)
					return;
				
                OnPropertyChanging("LastActivityTime");                    
				OnColumnChanging(ZohoLeadsColumn.LastActivityTime, this.entityData.LastActivityTime);
				this.entityData.LastActivityTime = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(ZohoLeadsColumn.LastActivityTime, this.entityData.LastActivityTime);
				OnPropertyChanged("LastActivityTime");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the LastName property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 255)]
		public virtual System.String LastName
		{
			get
			{
				return this.entityData.LastName; 
			}
			
			set
			{
				if (this.entityData.LastName == value)
					return;
				
                OnPropertyChanging("LastName");                    
				OnColumnChanging(ZohoLeadsColumn.LastName, this.entityData.LastName);
				this.entityData.LastName = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(ZohoLeadsColumn.LastName, this.entityData.LastName);
				OnPropertyChanged("LastName");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the LastVisitedTime property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 255)]
		public virtual System.String LastVisitedTime
		{
			get
			{
				return this.entityData.LastVisitedTime; 
			}
			
			set
			{
				if (this.entityData.LastVisitedTime == value)
					return;
				
                OnPropertyChanging("LastVisitedTime");                    
				OnColumnChanging(ZohoLeadsColumn.LastVisitedTime, this.entityData.LastVisitedTime);
				this.entityData.LastVisitedTime = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(ZohoLeadsColumn.LastVisitedTime, this.entityData.LastVisitedTime);
				OnPropertyChanged("LastVisitedTime");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the LeadOwnerId property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 255)]
		public virtual System.String LeadOwnerId
		{
			get
			{
				return this.entityData.LeadOwnerId; 
			}
			
			set
			{
				if (this.entityData.LeadOwnerId == value)
					return;
				
                OnPropertyChanging("LeadOwnerId");                    
				OnColumnChanging(ZohoLeadsColumn.LeadOwnerId, this.entityData.LeadOwnerId);
				this.entityData.LeadOwnerId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(ZohoLeadsColumn.LeadOwnerId, this.entityData.LeadOwnerId);
				OnPropertyChanged("LeadOwnerId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the LeadOwner property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 255)]
		public virtual System.String LeadOwner
		{
			get
			{
				return this.entityData.LeadOwner; 
			}
			
			set
			{
				if (this.entityData.LeadOwner == value)
					return;
				
                OnPropertyChanging("LeadOwner");                    
				OnColumnChanging(ZohoLeadsColumn.LeadOwner, this.entityData.LeadOwner);
				this.entityData.LeadOwner = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(ZohoLeadsColumn.LeadOwner, this.entityData.LeadOwner);
				OnPropertyChanged("LeadOwner");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the LeadSource property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 255)]
		public virtual System.String LeadSource
		{
			get
			{
				return this.entityData.LeadSource; 
			}
			
			set
			{
				if (this.entityData.LeadSource == value)
					return;
				
                OnPropertyChanging("LeadSource");                    
				OnColumnChanging(ZohoLeadsColumn.LeadSource, this.entityData.LeadSource);
				this.entityData.LeadSource = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(ZohoLeadsColumn.LeadSource, this.entityData.LeadSource);
				OnPropertyChanged("LeadSource");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the LeadStatus property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 255)]
		public virtual System.String LeadStatus
		{
			get
			{
				return this.entityData.LeadStatus; 
			}
			
			set
			{
				if (this.entityData.LeadStatus == value)
					return;
				
                OnPropertyChanging("LeadStatus");                    
				OnColumnChanging(ZohoLeadsColumn.LeadStatus, this.entityData.LeadStatus);
				this.entityData.LeadStatus = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(ZohoLeadsColumn.LeadStatus, this.entityData.LeadStatus);
				OnPropertyChanged("LeadStatus");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the Leadid property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 255)]
		public virtual System.String Leadid
		{
			get
			{
				return this.entityData.Leadid; 
			}
			
			set
			{
				if (this.entityData.Leadid == value)
					return;
				
                OnPropertyChanging("Leadid");                    
				OnColumnChanging(ZohoLeadsColumn.Leadid, this.entityData.Leadid);
				this.entityData.Leadid = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(ZohoLeadsColumn.Leadid, this.entityData.Leadid);
				OnPropertyChanged("Leadid");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the Mobile property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 255)]
		public virtual System.String Mobile
		{
			get
			{
				return this.entityData.Mobile; 
			}
			
			set
			{
				if (this.entityData.Mobile == value)
					return;
				
                OnPropertyChanging("Mobile");                    
				OnColumnChanging(ZohoLeadsColumn.Mobile, this.entityData.Mobile);
				this.entityData.Mobile = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(ZohoLeadsColumn.Mobile, this.entityData.Mobile);
				OnPropertyChanged("Mobile");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the ModifiedBy property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 255)]
		public virtual System.String ModifiedBy
		{
			get
			{
				return this.entityData.ModifiedBy; 
			}
			
			set
			{
				if (this.entityData.ModifiedBy == value)
					return;
				
                OnPropertyChanging("ModifiedBy");                    
				OnColumnChanging(ZohoLeadsColumn.ModifiedBy, this.entityData.ModifiedBy);
				this.entityData.ModifiedBy = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(ZohoLeadsColumn.ModifiedBy, this.entityData.ModifiedBy);
				OnPropertyChanged("ModifiedBy");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the ModifiedTime property. 
		///		
		/// </summary>
		/// <value>This type is datetime.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.DateTime? ModifiedTime
		{
			get
			{
				return this.entityData.ModifiedTime; 
			}
			
			set
			{
				if (this.entityData.ModifiedTime == value)
					return;
				
                OnPropertyChanging("ModifiedTime");                    
				OnColumnChanging(ZohoLeadsColumn.ModifiedTime, this.entityData.ModifiedTime);
				this.entityData.ModifiedTime = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(ZohoLeadsColumn.ModifiedTime, this.entityData.ModifiedTime);
				OnPropertyChanged("ModifiedTime");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the Phone property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 255)]
		public virtual System.String Phone
		{
			get
			{
				return this.entityData.Phone; 
			}
			
			set
			{
				if (this.entityData.Phone == value)
					return;
				
                OnPropertyChanging("Phone");                    
				OnColumnChanging(ZohoLeadsColumn.Phone, this.entityData.Phone);
				this.entityData.Phone = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(ZohoLeadsColumn.Phone, this.entityData.Phone);
				OnPropertyChanged("Phone");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the Rating property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 255)]
		public virtual System.String Rating
		{
			get
			{
				return this.entityData.Rating; 
			}
			
			set
			{
				if (this.entityData.Rating == value)
					return;
				
                OnPropertyChanging("Rating");                    
				OnColumnChanging(ZohoLeadsColumn.Rating, this.entityData.Rating);
				this.entityData.Rating = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(ZohoLeadsColumn.Rating, this.entityData.Rating);
				OnPropertyChanged("Rating");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the SecondaryEmail property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 255)]
		public virtual System.String SecondaryEmail
		{
			get
			{
				return this.entityData.SecondaryEmail; 
			}
			
			set
			{
				if (this.entityData.SecondaryEmail == value)
					return;
				
                OnPropertyChanging("SecondaryEmail");                    
				OnColumnChanging(ZohoLeadsColumn.SecondaryEmail, this.entityData.SecondaryEmail);
				this.entityData.SecondaryEmail = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(ZohoLeadsColumn.SecondaryEmail, this.entityData.SecondaryEmail);
				OnPropertyChanged("SecondaryEmail");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the State property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 255)]
		public virtual System.String State
		{
			get
			{
				return this.entityData.State; 
			}
			
			set
			{
				if (this.entityData.State == value)
					return;
				
                OnPropertyChanging("State");                    
				OnColumnChanging(ZohoLeadsColumn.State, this.entityData.State);
				this.entityData.State = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(ZohoLeadsColumn.State, this.entityData.State);
				OnPropertyChanged("State");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the SubmissionTime property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 255)]
		public virtual System.String SubmissionTime
		{
			get
			{
				return this.entityData.SubmissionTime; 
			}
			
			set
			{
				if (this.entityData.SubmissionTime == value)
					return;
				
                OnPropertyChanging("SubmissionTime");                    
				OnColumnChanging(ZohoLeadsColumn.SubmissionTime, this.entityData.SubmissionTime);
				this.entityData.SubmissionTime = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(ZohoLeadsColumn.SubmissionTime, this.entityData.SubmissionTime);
				OnPropertyChanged("SubmissionTime");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the SubmittedOn property. 
		///		
		/// </summary>
		/// <value>This type is datetime.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.DateTime? SubmittedOn
		{
			get
			{
				return this.entityData.SubmittedOn; 
			}
			
			set
			{
				if (this.entityData.SubmittedOn == value)
					return;
				
                OnPropertyChanging("SubmittedOn");                    
				OnColumnChanging(ZohoLeadsColumn.SubmittedOn, this.entityData.SubmittedOn);
				this.entityData.SubmittedOn = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(ZohoLeadsColumn.SubmittedOn, this.entityData.SubmittedOn);
				OnPropertyChanged("SubmittedOn");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the TasksInvolved property. 
		///		
		/// </summary>
		/// <value>This type is bit.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		
		




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.Boolean TasksInvolved
		{
			get
			{
				return this.entityData.TasksInvolved; 
			}
			
			set
			{
				if (this.entityData.TasksInvolved == value)
					return;
				
                OnPropertyChanging("TasksInvolved");                    
				OnColumnChanging(ZohoLeadsColumn.TasksInvolved, this.entityData.TasksInvolved);
				this.entityData.TasksInvolved = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(ZohoLeadsColumn.TasksInvolved, this.entityData.TasksInvolved);
				OnPropertyChanged("TasksInvolved");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the TimeZone property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 255)]
		public virtual System.String TimeZone
		{
			get
			{
				return this.entityData.TimeZone; 
			}
			
			set
			{
				if (this.entityData.TimeZone == value)
					return;
				
                OnPropertyChanging("TimeZone");                    
				OnColumnChanging(ZohoLeadsColumn.TimeZone, this.entityData.TimeZone);
				this.entityData.TimeZone = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(ZohoLeadsColumn.TimeZone, this.entityData.TimeZone);
				OnPropertyChanged("TimeZone");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the Url property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 255)]
		public virtual System.String Url
		{
			get
			{
				return this.entityData.Url; 
			}
			
			set
			{
				if (this.entityData.Url == value)
					return;
				
                OnPropertyChanging("Url");                    
				OnColumnChanging(ZohoLeadsColumn.Url, this.entityData.Url);
				this.entityData.Url = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(ZohoLeadsColumn.Url, this.entityData.Url);
				OnPropertyChanged("Url");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the Website property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 255)]
		public virtual System.String Website
		{
			get
			{
				return this.entityData.Website; 
			}
			
			set
			{
				if (this.entityData.Website == value)
					return;
				
                OnPropertyChanging("Website");                    
				OnColumnChanging(ZohoLeadsColumn.Website, this.entityData.Website);
				this.entityData.Website = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(ZohoLeadsColumn.Website, this.entityData.Website);
				OnPropertyChanged("Website");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the Worries property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		
		




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 255)]
		public virtual System.String Worries
		{
			get
			{
				return this.entityData.Worries; 
			}
			
			set
			{
				if (this.entityData.Worries == value)
					return;
				
                OnPropertyChanging("Worries");                    
				OnColumnChanging(ZohoLeadsColumn.Worries, this.entityData.Worries);
				this.entityData.Worries = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(ZohoLeadsColumn.Worries, this.entityData.Worries);
				OnPropertyChanged("Worries");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the Leadpk property. 
		///		
		/// </summary>
		/// <value>This type is bigint.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		
		




		[ReadOnlyAttribute(false)/*, XmlIgnoreAttribute()*/, DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(true, true, false)]
		public virtual System.Int64 Leadpk
		{
			get
			{
				return this.entityData.Leadpk; 
			}
			
			set
			{
				if (this.entityData.Leadpk == value)
					return;
				
                OnPropertyChanging("Leadpk");                    
				OnColumnChanging(ZohoLeadsColumn.Leadpk, this.entityData.Leadpk);
				this.entityData.Leadpk = value;
				this.EntityId.Leadpk = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(ZohoLeadsColumn.Leadpk, this.entityData.Leadpk);
				OnPropertyChanged("Leadpk");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the Wday811 property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int32? Wday811
		{
			get
			{
				return this.entityData.Wday811; 
			}
			
			set
			{
				if (this.entityData.Wday811 == value)
					return;
				
                OnPropertyChanging("Wday811");                    
				OnColumnChanging(ZohoLeadsColumn.Wday811, this.entityData.Wday811);
				this.entityData.Wday811 = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(ZohoLeadsColumn.Wday811, this.entityData.Wday811);
				OnPropertyChanged("Wday811");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the Wday112 property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int32? Wday112
		{
			get
			{
				return this.entityData.Wday112; 
			}
			
			set
			{
				if (this.entityData.Wday112 == value)
					return;
				
                OnPropertyChanging("Wday112");                    
				OnColumnChanging(ZohoLeadsColumn.Wday112, this.entityData.Wday112);
				this.entityData.Wday112 = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(ZohoLeadsColumn.Wday112, this.entityData.Wday112);
				OnPropertyChanged("Wday112");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the Wday25 property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int32? Wday25
		{
			get
			{
				return this.entityData.Wday25; 
			}
			
			set
			{
				if (this.entityData.Wday25 == value)
					return;
				
                OnPropertyChanging("Wday25");                    
				OnColumnChanging(ZohoLeadsColumn.Wday25, this.entityData.Wday25);
				this.entityData.Wday25 = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(ZohoLeadsColumn.Wday25, this.entityData.Wday25);
				OnPropertyChanged("Wday25");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the Wday58 property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int32? Wday58
		{
			get
			{
				return this.entityData.Wday58; 
			}
			
			set
			{
				if (this.entityData.Wday58 == value)
					return;
				
                OnPropertyChanging("Wday58");                    
				OnColumnChanging(ZohoLeadsColumn.Wday58, this.entityData.Wday58);
				this.entityData.Wday58 = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(ZohoLeadsColumn.Wday58, this.entityData.Wday58);
				OnPropertyChanged("Wday58");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the Sat811 property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int32? Sat811
		{
			get
			{
				return this.entityData.Sat811; 
			}
			
			set
			{
				if (this.entityData.Sat811 == value)
					return;
				
                OnPropertyChanging("Sat811");                    
				OnColumnChanging(ZohoLeadsColumn.Sat811, this.entityData.Sat811);
				this.entityData.Sat811 = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(ZohoLeadsColumn.Sat811, this.entityData.Sat811);
				OnPropertyChanged("Sat811");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the Sat112 property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int32? Sat112
		{
			get
			{
				return this.entityData.Sat112; 
			}
			
			set
			{
				if (this.entityData.Sat112 == value)
					return;
				
                OnPropertyChanging("Sat112");                    
				OnColumnChanging(ZohoLeadsColumn.Sat112, this.entityData.Sat112);
				this.entityData.Sat112 = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(ZohoLeadsColumn.Sat112, this.entityData.Sat112);
				OnPropertyChanged("Sat112");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the Sat25 property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int32? Sat25
		{
			get
			{
				return this.entityData.Sat25; 
			}
			
			set
			{
				if (this.entityData.Sat25 == value)
					return;
				
                OnPropertyChanging("Sat25");                    
				OnColumnChanging(ZohoLeadsColumn.Sat25, this.entityData.Sat25);
				this.entityData.Sat25 = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(ZohoLeadsColumn.Sat25, this.entityData.Sat25);
				OnPropertyChanged("Sat25");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the Sat58 property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int32? Sat58
		{
			get
			{
				return this.entityData.Sat58; 
			}
			
			set
			{
				if (this.entityData.Sat58 == value)
					return;
				
                OnPropertyChanging("Sat58");                    
				OnColumnChanging(ZohoLeadsColumn.Sat58, this.entityData.Sat58);
				this.entityData.Sat58 = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(ZohoLeadsColumn.Sat58, this.entityData.Sat58);
				OnPropertyChanged("Sat58");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the Sun811 property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int32? Sun811
		{
			get
			{
				return this.entityData.Sun811; 
			}
			
			set
			{
				if (this.entityData.Sun811 == value)
					return;
				
                OnPropertyChanging("Sun811");                    
				OnColumnChanging(ZohoLeadsColumn.Sun811, this.entityData.Sun811);
				this.entityData.Sun811 = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(ZohoLeadsColumn.Sun811, this.entityData.Sun811);
				OnPropertyChanged("Sun811");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the Sun112 property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int32? Sun112
		{
			get
			{
				return this.entityData.Sun112; 
			}
			
			set
			{
				if (this.entityData.Sun112 == value)
					return;
				
                OnPropertyChanging("Sun112");                    
				OnColumnChanging(ZohoLeadsColumn.Sun112, this.entityData.Sun112);
				this.entityData.Sun112 = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(ZohoLeadsColumn.Sun112, this.entityData.Sun112);
				OnPropertyChanged("Sun112");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the Sun25 property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int32? Sun25
		{
			get
			{
				return this.entityData.Sun25; 
			}
			
			set
			{
				if (this.entityData.Sun25 == value)
					return;
				
                OnPropertyChanging("Sun25");                    
				OnColumnChanging(ZohoLeadsColumn.Sun25, this.entityData.Sun25);
				this.entityData.Sun25 = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(ZohoLeadsColumn.Sun25, this.entityData.Sun25);
				OnPropertyChanged("Sun25");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the Sun58 property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null it is up to the developer to check using the HasValue property
		/// and perform business logic appropriately.
		/// </remarks>
		
		




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int32? Sun58
		{
			get
			{
				return this.entityData.Sun58; 
			}
			
			set
			{
				if (this.entityData.Sun58 == value)
					return;
				
                OnPropertyChanging("Sun58");                    
				OnColumnChanging(ZohoLeadsColumn.Sun58, this.entityData.Sun58);
				this.entityData.Sun58 = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(ZohoLeadsColumn.Sun58, this.entityData.Sun58);
				OnPropertyChanged("Sun58");
			}
		}
		
		#endregion Data Properties		

		#region Source Foreign Key Property
				
		#endregion
		
		#region Children Collections
		#endregion Children Collections
		
		#endregion
		#region Validation
		
		/// <summary>
		/// Assigns validation rules to this object based on model definition.
		/// </summary>
		/// <remarks>This method overrides the base class to add schema related validation.</remarks>
		protected override void AddValidationRules()
		{
			//Validation rules based on database schema.
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("Company", "Company", 255));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("CreatedBy", "Created By", 255));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("Email", "Email", 255));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("FeaturesOfInterest", "Features Of Interest", 255));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("FirstName", "First Name", 255));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("IfNoLongerInterested", "If No Longer Interested", 255));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("Industry", "Industry", 255));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("LastName", "Last Name", 255));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("LastVisitedTime", "Last Visited Time", 255));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("LeadOwnerId", "Lead Owner Id", 255));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("LeadOwner", "Lead Owner", 255));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("LeadSource", "Lead Source", 255));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("LeadStatus", "Lead Status", 255));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("Leadid", "Leadid", 255));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("Mobile", "Mobile", 255));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("ModifiedBy", "Modified By", 255));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("Phone", "Phone", 255));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("Rating", "Rating", 255));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("SecondaryEmail", "Secondary Email", 255));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("State", "State", 255));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("SubmissionTime", "Submission Time", 255));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("TimeZone", "Time Zone", 255));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("Url", "Url", 255));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("Website", "Website", 255));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("Worries", "Worries", 255));
		}
   		#endregion
		
		#region Table Meta Data
		/// <summary>
		///		The name of the underlying database table.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public override string TableName
		{
			get { return "ZohoLeads"; }
		}
		
		/// <summary>
		///		The name of the underlying database table's columns.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public override string[] TableColumns
		{
			get
			{
				return new string[] {"Activities Involved", "Calls Involved", "Company", "CONVERTED", "Created By", "Created Time", "Email", "Email Opt Out", "Events Involved", "Features of Interest", "First Name", "First Time Caller (new lead)", "If No Longer Interested", "Industry", "Last Activity Time", "Last Name", "Last Visited Time", "Lead Owner Id", "Lead Owner", "Lead Source", "Lead Status", "LEADID", "Mobile", "Modified By", "Modified Time", "Phone", "Rating", "Secondary Email", "State", "Submission Time", "Submitted On", "Tasks Involved", "Time Zone", "URL", "Website", "Worries", "LEADPK", "WDay8-11", "WDay11-2", "WDay2-5", "WDay5-8", "Sat8-11", "Sat11-2", "Sat2-5", "Sat5-8", "Sun8-11", "Sun11-2", "Sun2-5", "Sun5-8"};
			}
		}
		#endregion 
		
		#region IEditableObject
		
		#region  CancelAddNew Event
		/// <summary>
        /// The delegate for the CancelAddNew event.
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
		public delegate void CancelAddNewEventHandler(object sender, EventArgs e);
    
    	/// <summary>
		/// The CancelAddNew event.
		/// </summary>
		[field:NonSerialized]
		public event CancelAddNewEventHandler CancelAddNew ;

		/// <summary>
        /// Called when [cancel add new].
        /// </summary>
        public void OnCancelAddNew()
        {    
			if (!SuppressEntityEvents)
			{
	            CancelAddNewEventHandler handler = CancelAddNew ;
            	if (handler != null)
	            {    
    	            handler(this, EventArgs.Empty) ;
        	    }
	        }
        }
		#endregion 
		
		/// <summary>
		/// Begins an edit on an object.
		/// </summary>
		void IEditableObject.BeginEdit() 
	    {
	        //Console.WriteLine("Start BeginEdit");
	        if (!inTxn) 
	        {
	            this.backupData = this.entityData.Clone() as ZohoLeadsEntityData;
	            inTxn = true;
	            //Console.WriteLine("BeginEdit");
	        }
	        //Console.WriteLine("End BeginEdit");
	    }
	
		/// <summary>
		/// Discards changes since the last <c>BeginEdit</c> call.
		/// </summary>
	    void IEditableObject.CancelEdit() 
	    {
	        //Console.WriteLine("Start CancelEdit");
	        if (this.inTxn) 
	        {
	            this.entityData = this.backupData;
	            this.backupData = null;
				this.inTxn = false;

				if (this.bindingIsNew)
	        	//if (this.EntityState == EntityState.Added)
	        	{
					if (this.parentCollection != null)
						this.parentCollection.Remove( (ZohoLeads) this ) ;
				}	            
	        }
	        //Console.WriteLine("End CancelEdit");
	    }
	
		/// <summary>
		/// Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
		/// </summary>
	    void IEditableObject.EndEdit() 
	    {
	        //Console.WriteLine("Start EndEdit" + this.custData.id + this.custData.lastName);
	        if (this.inTxn) 
	        {
	            this.backupData = null;
				if (this.IsDirty) 
				{
					if (this.bindingIsNew) {
						this.EntityState = EntityState.Added;
						this.bindingIsNew = false ;
					}
					else
						if (this.EntityState == EntityState.Unchanged) 
							this.EntityState = EntityState.Changed ;
				}

				this.bindingIsNew = false ;
	            this.inTxn = false;	            
	        }
	        //Console.WriteLine("End EndEdit");
	    }
	    
	    /// <summary>
        /// Gets or sets the parent collection of this current entity, if available.
        /// </summary>
        /// <value>The parent collection.</value>
	    [XmlIgnore]
		[Browsable(false)]
	    public override object ParentCollection
	    {
	        get 
	        {
	            return this.parentCollection;
	        }
	        set 
	        {
	            this.parentCollection = value as TList<ZohoLeads>;
	        }
	    }
	    
	    /// <summary>
        /// Called when the entity is changed.
        /// </summary>
	    private void OnEntityChanged() 
	    {
	        if (!SuppressEntityEvents && !inTxn && this.parentCollection != null) 
	        {
	            this.parentCollection.EntityChanged(this as ZohoLeads);
	        }
	    }


		#endregion
		
		#region ICloneable Members
		///<summary>
		///  Returns a Typed ZohoLeads Entity 
		///</summary>
		protected virtual ZohoLeads Copy(IDictionary existingCopies)
		{
			if (existingCopies == null)
			{
				// This is the root of the tree to be copied!
				existingCopies = new Hashtable();
			}

			//shallow copy entity
			ZohoLeads copy = new ZohoLeads();
			existingCopies.Add(this, copy);
			copy.SuppressEntityEvents = true;
				copy.ActivitiesInvolved = this.ActivitiesInvolved;
				copy.CallsInvolved = this.CallsInvolved;
				copy.Company = this.Company;
				copy.Converted = this.Converted;
				copy.CreatedBy = this.CreatedBy;
				copy.CreatedTime = this.CreatedTime;
				copy.Email = this.Email;
				copy.EmailOptOut = this.EmailOptOut;
				copy.EventsInvolved = this.EventsInvolved;
				copy.FeaturesOfInterest = this.FeaturesOfInterest;
				copy.FirstName = this.FirstName;
				copy.SafeNameFirstTimeCallerNewLead = this.SafeNameFirstTimeCallerNewLead;
				copy.IfNoLongerInterested = this.IfNoLongerInterested;
				copy.Industry = this.Industry;
				copy.LastActivityTime = this.LastActivityTime;
				copy.LastName = this.LastName;
				copy.LastVisitedTime = this.LastVisitedTime;
				copy.LeadOwnerId = this.LeadOwnerId;
				copy.LeadOwner = this.LeadOwner;
				copy.LeadSource = this.LeadSource;
				copy.LeadStatus = this.LeadStatus;
				copy.Leadid = this.Leadid;
				copy.Mobile = this.Mobile;
				copy.ModifiedBy = this.ModifiedBy;
				copy.ModifiedTime = this.ModifiedTime;
				copy.Phone = this.Phone;
				copy.Rating = this.Rating;
				copy.SecondaryEmail = this.SecondaryEmail;
				copy.State = this.State;
				copy.SubmissionTime = this.SubmissionTime;
				copy.SubmittedOn = this.SubmittedOn;
				copy.TasksInvolved = this.TasksInvolved;
				copy.TimeZone = this.TimeZone;
				copy.Url = this.Url;
				copy.Website = this.Website;
				copy.Worries = this.Worries;
				copy.Leadpk = this.Leadpk;
				copy.Wday811 = this.Wday811;
				copy.Wday112 = this.Wday112;
				copy.Wday25 = this.Wday25;
				copy.Wday58 = this.Wday58;
				copy.Sat811 = this.Sat811;
				copy.Sat112 = this.Sat112;
				copy.Sat25 = this.Sat25;
				copy.Sat58 = this.Sat58;
				copy.Sun811 = this.Sun811;
				copy.Sun112 = this.Sun112;
				copy.Sun25 = this.Sun25;
				copy.Sun58 = this.Sun58;
			
		
			copy.EntityState = this.EntityState;
			copy.SuppressEntityEvents = false;
			return copy;
		}		
		
		
		
		///<summary>
		///  Returns a Typed ZohoLeads Entity 
		///</summary>
		public virtual ZohoLeads Copy()
		{
			return this.Copy(null);	
		}
		
		///<summary>
		/// ICloneable.Clone() Member, returns the Shallow Copy of this entity.
		///</summary>
		public object Clone()
		{
			return this.Copy(null);
		}
		
		///<summary>
		/// ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
		///</summary>
		public object Clone(IDictionary existingCopies)
		{
			return this.Copy(existingCopies);
		}
		
		///<summary>
		/// Returns a deep copy of the child collection object passed in.
		///</summary>
		public static object MakeCopyOf(object x)
		{
			if (x == null)
				return null;
				
			if (x is ICloneable)
			{
				// Return a deep copy of the object
				return ((ICloneable)x).Clone();
			}
			else
				throw new System.NotSupportedException("Object Does Not Implement the ICloneable Interface.");
		}
		
		///<summary>
		/// Returns a deep copy of the child collection object passed in.
		///</summary>
		public static object MakeCopyOf(object x, IDictionary existingCopies)
		{
			if (x == null)
				return null;
			
			if (x is ICloneableEx)
			{
				// Return a deep copy of the object
				return ((ICloneableEx)x).Clone(existingCopies);
			}
			else if (x is ICloneable)
			{
				// Return a deep copy of the object
				return ((ICloneable)x).Clone();
			}
			else
				throw new System.NotSupportedException("Object Does Not Implement the ICloneable or IClonableEx Interface.");
		}
		
		
		///<summary>
		///  Returns a Typed ZohoLeads Entity which is a deep copy of the current entity.
		///</summary>
		public virtual ZohoLeads DeepCopy()
		{
			return EntityHelper.Clone<ZohoLeads>(this as ZohoLeads);	
		}
		#endregion
		
		#region Methods	
			
		///<summary>
		/// Revert all changes and restore original values.
		///</summary>
		public override void CancelChanges()
		{
			IEditableObject obj = (IEditableObject) this;
			obj.CancelEdit();

			this.entityData = null;
			if (this._originalData != null)
			{
				this.entityData = this._originalData.Clone() as ZohoLeadsEntityData;
			}
			else
			{
				//Since this had no _originalData, then just reset the entityData with a new one.  entityData cannot be null.
				this.entityData = new ZohoLeadsEntityData();
			}
		}	
		
		/// <summary>
		/// Accepts the changes made to this object.
		/// </summary>
		/// <remarks>
		/// After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
		/// </remarks>
		public override void AcceptChanges()
		{
			base.AcceptChanges();

			// we keep of the original version of the data
			this._originalData = null;
			this._originalData = this.entityData.Clone() as ZohoLeadsEntityData;
		}
		
		#region Comparision with original data
		
		/// <summary>
		/// Determines whether the property value has changed from the original data.
		/// </summary>
		/// <param name="column">The column.</param>
		/// <returns>
		/// 	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
		/// </returns>
		public bool IsPropertyChanged(ZohoLeadsColumn column)
		{
			switch(column)
			{
					case ZohoLeadsColumn.ActivitiesInvolved:
					return entityData.ActivitiesInvolved != _originalData.ActivitiesInvolved;
					case ZohoLeadsColumn.CallsInvolved:
					return entityData.CallsInvolved != _originalData.CallsInvolved;
					case ZohoLeadsColumn.Company:
					return entityData.Company != _originalData.Company;
					case ZohoLeadsColumn.Converted:
					return entityData.Converted != _originalData.Converted;
					case ZohoLeadsColumn.CreatedBy:
					return entityData.CreatedBy != _originalData.CreatedBy;
					case ZohoLeadsColumn.CreatedTime:
					return entityData.CreatedTime != _originalData.CreatedTime;
					case ZohoLeadsColumn.Email:
					return entityData.Email != _originalData.Email;
					case ZohoLeadsColumn.EmailOptOut:
					return entityData.EmailOptOut != _originalData.EmailOptOut;
					case ZohoLeadsColumn.EventsInvolved:
					return entityData.EventsInvolved != _originalData.EventsInvolved;
					case ZohoLeadsColumn.FeaturesOfInterest:
					return entityData.FeaturesOfInterest != _originalData.FeaturesOfInterest;
					case ZohoLeadsColumn.FirstName:
					return entityData.FirstName != _originalData.FirstName;
					case ZohoLeadsColumn.SafeNameFirstTimeCallerNewLead:
					return entityData.SafeNameFirstTimeCallerNewLead != _originalData.SafeNameFirstTimeCallerNewLead;
					case ZohoLeadsColumn.IfNoLongerInterested:
					return entityData.IfNoLongerInterested != _originalData.IfNoLongerInterested;
					case ZohoLeadsColumn.Industry:
					return entityData.Industry != _originalData.Industry;
					case ZohoLeadsColumn.LastActivityTime:
					return entityData.LastActivityTime != _originalData.LastActivityTime;
					case ZohoLeadsColumn.LastName:
					return entityData.LastName != _originalData.LastName;
					case ZohoLeadsColumn.LastVisitedTime:
					return entityData.LastVisitedTime != _originalData.LastVisitedTime;
					case ZohoLeadsColumn.LeadOwnerId:
					return entityData.LeadOwnerId != _originalData.LeadOwnerId;
					case ZohoLeadsColumn.LeadOwner:
					return entityData.LeadOwner != _originalData.LeadOwner;
					case ZohoLeadsColumn.LeadSource:
					return entityData.LeadSource != _originalData.LeadSource;
					case ZohoLeadsColumn.LeadStatus:
					return entityData.LeadStatus != _originalData.LeadStatus;
					case ZohoLeadsColumn.Leadid:
					return entityData.Leadid != _originalData.Leadid;
					case ZohoLeadsColumn.Mobile:
					return entityData.Mobile != _originalData.Mobile;
					case ZohoLeadsColumn.ModifiedBy:
					return entityData.ModifiedBy != _originalData.ModifiedBy;
					case ZohoLeadsColumn.ModifiedTime:
					return entityData.ModifiedTime != _originalData.ModifiedTime;
					case ZohoLeadsColumn.Phone:
					return entityData.Phone != _originalData.Phone;
					case ZohoLeadsColumn.Rating:
					return entityData.Rating != _originalData.Rating;
					case ZohoLeadsColumn.SecondaryEmail:
					return entityData.SecondaryEmail != _originalData.SecondaryEmail;
					case ZohoLeadsColumn.State:
					return entityData.State != _originalData.State;
					case ZohoLeadsColumn.SubmissionTime:
					return entityData.SubmissionTime != _originalData.SubmissionTime;
					case ZohoLeadsColumn.SubmittedOn:
					return entityData.SubmittedOn != _originalData.SubmittedOn;
					case ZohoLeadsColumn.TasksInvolved:
					return entityData.TasksInvolved != _originalData.TasksInvolved;
					case ZohoLeadsColumn.TimeZone:
					return entityData.TimeZone != _originalData.TimeZone;
					case ZohoLeadsColumn.Url:
					return entityData.Url != _originalData.Url;
					case ZohoLeadsColumn.Website:
					return entityData.Website != _originalData.Website;
					case ZohoLeadsColumn.Worries:
					return entityData.Worries != _originalData.Worries;
					case ZohoLeadsColumn.Leadpk:
					return entityData.Leadpk != _originalData.Leadpk;
					case ZohoLeadsColumn.Wday811:
					return entityData.Wday811 != _originalData.Wday811;
					case ZohoLeadsColumn.Wday112:
					return entityData.Wday112 != _originalData.Wday112;
					case ZohoLeadsColumn.Wday25:
					return entityData.Wday25 != _originalData.Wday25;
					case ZohoLeadsColumn.Wday58:
					return entityData.Wday58 != _originalData.Wday58;
					case ZohoLeadsColumn.Sat811:
					return entityData.Sat811 != _originalData.Sat811;
					case ZohoLeadsColumn.Sat112:
					return entityData.Sat112 != _originalData.Sat112;
					case ZohoLeadsColumn.Sat25:
					return entityData.Sat25 != _originalData.Sat25;
					case ZohoLeadsColumn.Sat58:
					return entityData.Sat58 != _originalData.Sat58;
					case ZohoLeadsColumn.Sun811:
					return entityData.Sun811 != _originalData.Sun811;
					case ZohoLeadsColumn.Sun112:
					return entityData.Sun112 != _originalData.Sun112;
					case ZohoLeadsColumn.Sun25:
					return entityData.Sun25 != _originalData.Sun25;
					case ZohoLeadsColumn.Sun58:
					return entityData.Sun58 != _originalData.Sun58;
			
				default:
					return false;
			}
		}
		
		/// <summary>
		/// Determines whether the property value has changed from the original data.
		/// </summary>
		/// <param name="columnName">The column name.</param>
		/// <returns>
		/// 	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
		/// </returns>
		public override bool IsPropertyChanged(string columnName)
		{
			return 	IsPropertyChanged(EntityHelper.GetEnumValue< ZohoLeadsColumn >(columnName));
		}
		
		/// <summary>
		/// Determines whether the data has changed from original.
		/// </summary>
		/// <returns>
		/// 	<c>true</c> if data has changed; otherwise, <c>false</c>.
		/// </returns>
		public bool HasDataChanged()
		{
			bool result = false;
			result = result || entityData.ActivitiesInvolved != _originalData.ActivitiesInvolved;
			result = result || entityData.CallsInvolved != _originalData.CallsInvolved;
			result = result || entityData.Company != _originalData.Company;
			result = result || entityData.Converted != _originalData.Converted;
			result = result || entityData.CreatedBy != _originalData.CreatedBy;
			result = result || entityData.CreatedTime != _originalData.CreatedTime;
			result = result || entityData.Email != _originalData.Email;
			result = result || entityData.EmailOptOut != _originalData.EmailOptOut;
			result = result || entityData.EventsInvolved != _originalData.EventsInvolved;
			result = result || entityData.FeaturesOfInterest != _originalData.FeaturesOfInterest;
			result = result || entityData.FirstName != _originalData.FirstName;
			result = result || entityData.SafeNameFirstTimeCallerNewLead != _originalData.SafeNameFirstTimeCallerNewLead;
			result = result || entityData.IfNoLongerInterested != _originalData.IfNoLongerInterested;
			result = result || entityData.Industry != _originalData.Industry;
			result = result || entityData.LastActivityTime != _originalData.LastActivityTime;
			result = result || entityData.LastName != _originalData.LastName;
			result = result || entityData.LastVisitedTime != _originalData.LastVisitedTime;
			result = result || entityData.LeadOwnerId != _originalData.LeadOwnerId;
			result = result || entityData.LeadOwner != _originalData.LeadOwner;
			result = result || entityData.LeadSource != _originalData.LeadSource;
			result = result || entityData.LeadStatus != _originalData.LeadStatus;
			result = result || entityData.Leadid != _originalData.Leadid;
			result = result || entityData.Mobile != _originalData.Mobile;
			result = result || entityData.ModifiedBy != _originalData.ModifiedBy;
			result = result || entityData.ModifiedTime != _originalData.ModifiedTime;
			result = result || entityData.Phone != _originalData.Phone;
			result = result || entityData.Rating != _originalData.Rating;
			result = result || entityData.SecondaryEmail != _originalData.SecondaryEmail;
			result = result || entityData.State != _originalData.State;
			result = result || entityData.SubmissionTime != _originalData.SubmissionTime;
			result = result || entityData.SubmittedOn != _originalData.SubmittedOn;
			result = result || entityData.TasksInvolved != _originalData.TasksInvolved;
			result = result || entityData.TimeZone != _originalData.TimeZone;
			result = result || entityData.Url != _originalData.Url;
			result = result || entityData.Website != _originalData.Website;
			result = result || entityData.Worries != _originalData.Worries;
			result = result || entityData.Leadpk != _originalData.Leadpk;
			result = result || entityData.Wday811 != _originalData.Wday811;
			result = result || entityData.Wday112 != _originalData.Wday112;
			result = result || entityData.Wday25 != _originalData.Wday25;
			result = result || entityData.Wday58 != _originalData.Wday58;
			result = result || entityData.Sat811 != _originalData.Sat811;
			result = result || entityData.Sat112 != _originalData.Sat112;
			result = result || entityData.Sat25 != _originalData.Sat25;
			result = result || entityData.Sat58 != _originalData.Sat58;
			result = result || entityData.Sun811 != _originalData.Sun811;
			result = result || entityData.Sun112 != _originalData.Sun112;
			result = result || entityData.Sun25 != _originalData.Sun25;
			result = result || entityData.Sun58 != _originalData.Sun58;
			return result;
		}	
		
		///<summary>
		///  Returns a ZohoLeads Entity with the original data.
		///</summary>
		public ZohoLeads GetOriginalEntity()
		{
			if (_originalData != null)
				return CreateZohoLeads(
				_originalData.ActivitiesInvolved,
				_originalData.CallsInvolved,
				_originalData.Company,
				_originalData.Converted,
				_originalData.CreatedBy,
				_originalData.CreatedTime,
				_originalData.Email,
				_originalData.EmailOptOut,
				_originalData.EventsInvolved,
				_originalData.FeaturesOfInterest,
				_originalData.FirstName,
				_originalData.SafeNameFirstTimeCallerNewLead,
				_originalData.IfNoLongerInterested,
				_originalData.Industry,
				_originalData.LastActivityTime,
				_originalData.LastName,
				_originalData.LastVisitedTime,
				_originalData.LeadOwnerId,
				_originalData.LeadOwner,
				_originalData.LeadSource,
				_originalData.LeadStatus,
				_originalData.Leadid,
				_originalData.Mobile,
				_originalData.ModifiedBy,
				_originalData.ModifiedTime,
				_originalData.Phone,
				_originalData.Rating,
				_originalData.SecondaryEmail,
				_originalData.State,
				_originalData.SubmissionTime,
				_originalData.SubmittedOn,
				_originalData.TasksInvolved,
				_originalData.TimeZone,
				_originalData.Url,
				_originalData.Website,
				_originalData.Worries,
				_originalData.Wday811,
				_originalData.Wday112,
				_originalData.Wday25,
				_originalData.Wday58,
				_originalData.Sat811,
				_originalData.Sat112,
				_originalData.Sat25,
				_originalData.Sat58,
				_originalData.Sun811,
				_originalData.Sun112,
				_originalData.Sun25,
				_originalData.Sun58
				);
				
			return (ZohoLeads)this.Clone();
		}
		#endregion
	
	#region Value Semantics Instance Equality
        ///<summary>
        /// Returns a value indicating whether this instance is equal to a specified object using value semantics.
        ///</summary>
        ///<param name="Object1">An object to compare to this instance.</param>
        ///<returns>true if Object1 is a <see cref="ZohoLeadsBase"/> and has the same value as this instance; otherwise, false.</returns>
        public override bool Equals(object Object1)
        {
			// Cast exception if Object1 is null or DbNull
			if (Object1 != null && Object1 != DBNull.Value && Object1 is ZohoLeadsBase)
				return ValueEquals(this, (ZohoLeadsBase)Object1);
			else
				return false;
        }

        /// <summary>
		/// Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
        /// Provides a hash function that is appropriate for <see cref="ZohoLeadsBase"/> class 
        /// and that ensures a better distribution in the hash table
        /// </summary>
        /// <returns>number (hash code) that corresponds to the value of an object</returns>
        public override int GetHashCode()
        {
			return this.ActivitiesInvolved.GetHashCode() ^ 
					this.CallsInvolved.GetHashCode() ^ 
					((this.Company == null) ? string.Empty : this.Company.ToString()).GetHashCode() ^ 
					this.Converted.GetHashCode() ^ 
					((this.CreatedBy == null) ? string.Empty : this.CreatedBy.ToString()).GetHashCode() ^ 
					((this.CreatedTime == null) ? string.Empty : this.CreatedTime.ToString()).GetHashCode() ^ 
					((this.Email == null) ? string.Empty : this.Email.ToString()).GetHashCode() ^ 
					this.EmailOptOut.GetHashCode() ^ 
					this.EventsInvolved.GetHashCode() ^ 
					((this.FeaturesOfInterest == null) ? string.Empty : this.FeaturesOfInterest.ToString()).GetHashCode() ^ 
					((this.FirstName == null) ? string.Empty : this.FirstName.ToString()).GetHashCode() ^ 
					this.SafeNameFirstTimeCallerNewLead.GetHashCode() ^ 
					((this.IfNoLongerInterested == null) ? string.Empty : this.IfNoLongerInterested.ToString()).GetHashCode() ^ 
					((this.Industry == null) ? string.Empty : this.Industry.ToString()).GetHashCode() ^ 
					((this.LastActivityTime == null) ? string.Empty : this.LastActivityTime.ToString()).GetHashCode() ^ 
					((this.LastName == null) ? string.Empty : this.LastName.ToString()).GetHashCode() ^ 
					((this.LastVisitedTime == null) ? string.Empty : this.LastVisitedTime.ToString()).GetHashCode() ^ 
					((this.LeadOwnerId == null) ? string.Empty : this.LeadOwnerId.ToString()).GetHashCode() ^ 
					((this.LeadOwner == null) ? string.Empty : this.LeadOwner.ToString()).GetHashCode() ^ 
					((this.LeadSource == null) ? string.Empty : this.LeadSource.ToString()).GetHashCode() ^ 
					((this.LeadStatus == null) ? string.Empty : this.LeadStatus.ToString()).GetHashCode() ^ 
					((this.Leadid == null) ? string.Empty : this.Leadid.ToString()).GetHashCode() ^ 
					((this.Mobile == null) ? string.Empty : this.Mobile.ToString()).GetHashCode() ^ 
					((this.ModifiedBy == null) ? string.Empty : this.ModifiedBy.ToString()).GetHashCode() ^ 
					((this.ModifiedTime == null) ? string.Empty : this.ModifiedTime.ToString()).GetHashCode() ^ 
					((this.Phone == null) ? string.Empty : this.Phone.ToString()).GetHashCode() ^ 
					((this.Rating == null) ? string.Empty : this.Rating.ToString()).GetHashCode() ^ 
					((this.SecondaryEmail == null) ? string.Empty : this.SecondaryEmail.ToString()).GetHashCode() ^ 
					((this.State == null) ? string.Empty : this.State.ToString()).GetHashCode() ^ 
					((this.SubmissionTime == null) ? string.Empty : this.SubmissionTime.ToString()).GetHashCode() ^ 
					((this.SubmittedOn == null) ? string.Empty : this.SubmittedOn.ToString()).GetHashCode() ^ 
					this.TasksInvolved.GetHashCode() ^ 
					((this.TimeZone == null) ? string.Empty : this.TimeZone.ToString()).GetHashCode() ^ 
					((this.Url == null) ? string.Empty : this.Url.ToString()).GetHashCode() ^ 
					((this.Website == null) ? string.Empty : this.Website.ToString()).GetHashCode() ^ 
					((this.Worries == null) ? string.Empty : this.Worries.ToString()).GetHashCode() ^ 
					this.Leadpk.GetHashCode() ^ 
					((this.Wday811 == null) ? string.Empty : this.Wday811.ToString()).GetHashCode() ^ 
					((this.Wday112 == null) ? string.Empty : this.Wday112.ToString()).GetHashCode() ^ 
					((this.Wday25 == null) ? string.Empty : this.Wday25.ToString()).GetHashCode() ^ 
					((this.Wday58 == null) ? string.Empty : this.Wday58.ToString()).GetHashCode() ^ 
					((this.Sat811 == null) ? string.Empty : this.Sat811.ToString()).GetHashCode() ^ 
					((this.Sat112 == null) ? string.Empty : this.Sat112.ToString()).GetHashCode() ^ 
					((this.Sat25 == null) ? string.Empty : this.Sat25.ToString()).GetHashCode() ^ 
					((this.Sat58 == null) ? string.Empty : this.Sat58.ToString()).GetHashCode() ^ 
					((this.Sun811 == null) ? string.Empty : this.Sun811.ToString()).GetHashCode() ^ 
					((this.Sun112 == null) ? string.Empty : this.Sun112.ToString()).GetHashCode() ^ 
					((this.Sun25 == null) ? string.Empty : this.Sun25.ToString()).GetHashCode() ^ 
					((this.Sun58 == null) ? string.Empty : this.Sun58.ToString()).GetHashCode();
        }
		
		///<summary>
		/// Returns a value indicating whether this instance is equal to a specified object using value semantics.
		///</summary>
		///<param name="toObject">An object to compare to this instance.</param>
		///<returns>true if toObject is a <see cref="ZohoLeadsBase"/> and has the same value as this instance; otherwise, false.</returns>
		public virtual bool Equals(ZohoLeadsBase toObject)
		{
			if (toObject == null)
				return false;
			return ValueEquals(this, toObject);
		}
		#endregion
		
		///<summary>
		/// Determines whether the specified <see cref="ZohoLeadsBase"/> instances are considered equal using value semantics.
		///</summary>
		///<param name="Object1">The first <see cref="ZohoLeadsBase"/> to compare.</param>
		///<param name="Object2">The second <see cref="ZohoLeadsBase"/> to compare. </param>
		///<returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
		public static bool ValueEquals(ZohoLeadsBase Object1, ZohoLeadsBase Object2)
		{
			// both are null
			if (Object1 == null && Object2 == null)
				return true;

			// one or the other is null, but not both
			if (Object1 == null ^ Object2 == null)
				return false;
				
			bool equal = true;
			if (Object1.ActivitiesInvolved != Object2.ActivitiesInvolved)
				equal = false;
			if (Object1.CallsInvolved != Object2.CallsInvolved)
				equal = false;
			if ( Object1.Company != null && Object2.Company != null )
			{
				if (Object1.Company != Object2.Company)
					equal = false;
			}
			else if (Object1.Company == null ^ Object2.Company == null )
			{
				equal = false;
			}
			if (Object1.Converted != Object2.Converted)
				equal = false;
			if ( Object1.CreatedBy != null && Object2.CreatedBy != null )
			{
				if (Object1.CreatedBy != Object2.CreatedBy)
					equal = false;
			}
			else if (Object1.CreatedBy == null ^ Object2.CreatedBy == null )
			{
				equal = false;
			}
			if ( Object1.CreatedTime != null && Object2.CreatedTime != null )
			{
				if (Object1.CreatedTime != Object2.CreatedTime)
					equal = false;
			}
			else if (Object1.CreatedTime == null ^ Object2.CreatedTime == null )
			{
				equal = false;
			}
			if ( Object1.Email != null && Object2.Email != null )
			{
				if (Object1.Email != Object2.Email)
					equal = false;
			}
			else if (Object1.Email == null ^ Object2.Email == null )
			{
				equal = false;
			}
			if (Object1.EmailOptOut != Object2.EmailOptOut)
				equal = false;
			if (Object1.EventsInvolved != Object2.EventsInvolved)
				equal = false;
			if ( Object1.FeaturesOfInterest != null && Object2.FeaturesOfInterest != null )
			{
				if (Object1.FeaturesOfInterest != Object2.FeaturesOfInterest)
					equal = false;
			}
			else if (Object1.FeaturesOfInterest == null ^ Object2.FeaturesOfInterest == null )
			{
				equal = false;
			}
			if ( Object1.FirstName != null && Object2.FirstName != null )
			{
				if (Object1.FirstName != Object2.FirstName)
					equal = false;
			}
			else if (Object1.FirstName == null ^ Object2.FirstName == null )
			{
				equal = false;
			}
			if (Object1.SafeNameFirstTimeCallerNewLead != Object2.SafeNameFirstTimeCallerNewLead)
				equal = false;
			if ( Object1.IfNoLongerInterested != null && Object2.IfNoLongerInterested != null )
			{
				if (Object1.IfNoLongerInterested != Object2.IfNoLongerInterested)
					equal = false;
			}
			else if (Object1.IfNoLongerInterested == null ^ Object2.IfNoLongerInterested == null )
			{
				equal = false;
			}
			if ( Object1.Industry != null && Object2.Industry != null )
			{
				if (Object1.Industry != Object2.Industry)
					equal = false;
			}
			else if (Object1.Industry == null ^ Object2.Industry == null )
			{
				equal = false;
			}
			if ( Object1.LastActivityTime != null && Object2.LastActivityTime != null )
			{
				if (Object1.LastActivityTime != Object2.LastActivityTime)
					equal = false;
			}
			else if (Object1.LastActivityTime == null ^ Object2.LastActivityTime == null )
			{
				equal = false;
			}
			if ( Object1.LastName != null && Object2.LastName != null )
			{
				if (Object1.LastName != Object2.LastName)
					equal = false;
			}
			else if (Object1.LastName == null ^ Object2.LastName == null )
			{
				equal = false;
			}
			if ( Object1.LastVisitedTime != null && Object2.LastVisitedTime != null )
			{
				if (Object1.LastVisitedTime != Object2.LastVisitedTime)
					equal = false;
			}
			else if (Object1.LastVisitedTime == null ^ Object2.LastVisitedTime == null )
			{
				equal = false;
			}
			if ( Object1.LeadOwnerId != null && Object2.LeadOwnerId != null )
			{
				if (Object1.LeadOwnerId != Object2.LeadOwnerId)
					equal = false;
			}
			else if (Object1.LeadOwnerId == null ^ Object2.LeadOwnerId == null )
			{
				equal = false;
			}
			if ( Object1.LeadOwner != null && Object2.LeadOwner != null )
			{
				if (Object1.LeadOwner != Object2.LeadOwner)
					equal = false;
			}
			else if (Object1.LeadOwner == null ^ Object2.LeadOwner == null )
			{
				equal = false;
			}
			if ( Object1.LeadSource != null && Object2.LeadSource != null )
			{
				if (Object1.LeadSource != Object2.LeadSource)
					equal = false;
			}
			else if (Object1.LeadSource == null ^ Object2.LeadSource == null )
			{
				equal = false;
			}
			if ( Object1.LeadStatus != null && Object2.LeadStatus != null )
			{
				if (Object1.LeadStatus != Object2.LeadStatus)
					equal = false;
			}
			else if (Object1.LeadStatus == null ^ Object2.LeadStatus == null )
			{
				equal = false;
			}
			if ( Object1.Leadid != null && Object2.Leadid != null )
			{
				if (Object1.Leadid != Object2.Leadid)
					equal = false;
			}
			else if (Object1.Leadid == null ^ Object2.Leadid == null )
			{
				equal = false;
			}
			if ( Object1.Mobile != null && Object2.Mobile != null )
			{
				if (Object1.Mobile != Object2.Mobile)
					equal = false;
			}
			else if (Object1.Mobile == null ^ Object2.Mobile == null )
			{
				equal = false;
			}
			if ( Object1.ModifiedBy != null && Object2.ModifiedBy != null )
			{
				if (Object1.ModifiedBy != Object2.ModifiedBy)
					equal = false;
			}
			else if (Object1.ModifiedBy == null ^ Object2.ModifiedBy == null )
			{
				equal = false;
			}
			if ( Object1.ModifiedTime != null && Object2.ModifiedTime != null )
			{
				if (Object1.ModifiedTime != Object2.ModifiedTime)
					equal = false;
			}
			else if (Object1.ModifiedTime == null ^ Object2.ModifiedTime == null )
			{
				equal = false;
			}
			if ( Object1.Phone != null && Object2.Phone != null )
			{
				if (Object1.Phone != Object2.Phone)
					equal = false;
			}
			else if (Object1.Phone == null ^ Object2.Phone == null )
			{
				equal = false;
			}
			if ( Object1.Rating != null && Object2.Rating != null )
			{
				if (Object1.Rating != Object2.Rating)
					equal = false;
			}
			else if (Object1.Rating == null ^ Object2.Rating == null )
			{
				equal = false;
			}
			if ( Object1.SecondaryEmail != null && Object2.SecondaryEmail != null )
			{
				if (Object1.SecondaryEmail != Object2.SecondaryEmail)
					equal = false;
			}
			else if (Object1.SecondaryEmail == null ^ Object2.SecondaryEmail == null )
			{
				equal = false;
			}
			if ( Object1.State != null && Object2.State != null )
			{
				if (Object1.State != Object2.State)
					equal = false;
			}
			else if (Object1.State == null ^ Object2.State == null )
			{
				equal = false;
			}
			if ( Object1.SubmissionTime != null && Object2.SubmissionTime != null )
			{
				if (Object1.SubmissionTime != Object2.SubmissionTime)
					equal = false;
			}
			else if (Object1.SubmissionTime == null ^ Object2.SubmissionTime == null )
			{
				equal = false;
			}
			if ( Object1.SubmittedOn != null && Object2.SubmittedOn != null )
			{
				if (Object1.SubmittedOn != Object2.SubmittedOn)
					equal = false;
			}
			else if (Object1.SubmittedOn == null ^ Object2.SubmittedOn == null )
			{
				equal = false;
			}
			if (Object1.TasksInvolved != Object2.TasksInvolved)
				equal = false;
			if ( Object1.TimeZone != null && Object2.TimeZone != null )
			{
				if (Object1.TimeZone != Object2.TimeZone)
					equal = false;
			}
			else if (Object1.TimeZone == null ^ Object2.TimeZone == null )
			{
				equal = false;
			}
			if ( Object1.Url != null && Object2.Url != null )
			{
				if (Object1.Url != Object2.Url)
					equal = false;
			}
			else if (Object1.Url == null ^ Object2.Url == null )
			{
				equal = false;
			}
			if ( Object1.Website != null && Object2.Website != null )
			{
				if (Object1.Website != Object2.Website)
					equal = false;
			}
			else if (Object1.Website == null ^ Object2.Website == null )
			{
				equal = false;
			}
			if ( Object1.Worries != null && Object2.Worries != null )
			{
				if (Object1.Worries != Object2.Worries)
					equal = false;
			}
			else if (Object1.Worries == null ^ Object2.Worries == null )
			{
				equal = false;
			}
			if (Object1.Leadpk != Object2.Leadpk)
				equal = false;
			if ( Object1.Wday811 != null && Object2.Wday811 != null )
			{
				if (Object1.Wday811 != Object2.Wday811)
					equal = false;
			}
			else if (Object1.Wday811 == null ^ Object2.Wday811 == null )
			{
				equal = false;
			}
			if ( Object1.Wday112 != null && Object2.Wday112 != null )
			{
				if (Object1.Wday112 != Object2.Wday112)
					equal = false;
			}
			else if (Object1.Wday112 == null ^ Object2.Wday112 == null )
			{
				equal = false;
			}
			if ( Object1.Wday25 != null && Object2.Wday25 != null )
			{
				if (Object1.Wday25 != Object2.Wday25)
					equal = false;
			}
			else if (Object1.Wday25 == null ^ Object2.Wday25 == null )
			{
				equal = false;
			}
			if ( Object1.Wday58 != null && Object2.Wday58 != null )
			{
				if (Object1.Wday58 != Object2.Wday58)
					equal = false;
			}
			else if (Object1.Wday58 == null ^ Object2.Wday58 == null )
			{
				equal = false;
			}
			if ( Object1.Sat811 != null && Object2.Sat811 != null )
			{
				if (Object1.Sat811 != Object2.Sat811)
					equal = false;
			}
			else if (Object1.Sat811 == null ^ Object2.Sat811 == null )
			{
				equal = false;
			}
			if ( Object1.Sat112 != null && Object2.Sat112 != null )
			{
				if (Object1.Sat112 != Object2.Sat112)
					equal = false;
			}
			else if (Object1.Sat112 == null ^ Object2.Sat112 == null )
			{
				equal = false;
			}
			if ( Object1.Sat25 != null && Object2.Sat25 != null )
			{
				if (Object1.Sat25 != Object2.Sat25)
					equal = false;
			}
			else if (Object1.Sat25 == null ^ Object2.Sat25 == null )
			{
				equal = false;
			}
			if ( Object1.Sat58 != null && Object2.Sat58 != null )
			{
				if (Object1.Sat58 != Object2.Sat58)
					equal = false;
			}
			else if (Object1.Sat58 == null ^ Object2.Sat58 == null )
			{
				equal = false;
			}
			if ( Object1.Sun811 != null && Object2.Sun811 != null )
			{
				if (Object1.Sun811 != Object2.Sun811)
					equal = false;
			}
			else if (Object1.Sun811 == null ^ Object2.Sun811 == null )
			{
				equal = false;
			}
			if ( Object1.Sun112 != null && Object2.Sun112 != null )
			{
				if (Object1.Sun112 != Object2.Sun112)
					equal = false;
			}
			else if (Object1.Sun112 == null ^ Object2.Sun112 == null )
			{
				equal = false;
			}
			if ( Object1.Sun25 != null && Object2.Sun25 != null )
			{
				if (Object1.Sun25 != Object2.Sun25)
					equal = false;
			}
			else if (Object1.Sun25 == null ^ Object2.Sun25 == null )
			{
				equal = false;
			}
			if ( Object1.Sun58 != null && Object2.Sun58 != null )
			{
				if (Object1.Sun58 != Object2.Sun58)
					equal = false;
			}
			else if (Object1.Sun58 == null ^ Object2.Sun58 == null )
			{
				equal = false;
			}
					
			return equal;
		}
		
		#endregion
		
		#region IComparable Members
		///<summary>
		/// Compares this instance to a specified object and returns an indication of their relative values.
		///<param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
		///</summary>
		///<returns>A signed integer that indicates the relative order of this instance and obj.</returns>
		public virtual int CompareTo(object obj)
		{
			throw new NotImplementedException();
			//return this. GetPropertyName(SourceTable.PrimaryKey.MemberColumns[0]) .CompareTo(((ZohoLeadsBase)obj).GetPropertyName(SourceTable.PrimaryKey.MemberColumns[0]));
		}
		
		/*
		// static method to get a Comparer object
        public static ZohoLeadsComparer GetComparer()
        {
            return new ZohoLeadsComparer();
        }
        */

        // Comparer delegates back to ZohoLeads
        // Employee uses the integer's default
        // CompareTo method
        /*
        public int CompareTo(Item rhs)
        {
            return this.Id.CompareTo(rhs.Id);
        }
        */

/*
        // Special implementation to be called by custom comparer
        public int CompareTo(ZohoLeads rhs, ZohoLeadsColumn which)
        {
            switch (which)
            {
            	
            	
            	case ZohoLeadsColumn.ActivitiesInvolved:
            		return this.ActivitiesInvolved.CompareTo(rhs.ActivitiesInvolved);
            		
            		                 
            	
            	
            	case ZohoLeadsColumn.CallsInvolved:
            		return this.CallsInvolved.CompareTo(rhs.CallsInvolved);
            		
            		                 
            	
            	
            	case ZohoLeadsColumn.Company:
            		return this.Company.CompareTo(rhs.Company);
            		
            		                 
            	
            	
            	case ZohoLeadsColumn.Converted:
            		return this.Converted.CompareTo(rhs.Converted);
            		
            		                 
            	
            	
            	case ZohoLeadsColumn.CreatedBy:
            		return this.CreatedBy.CompareTo(rhs.CreatedBy);
            		
            		                 
            	
            	
            	case ZohoLeadsColumn.CreatedTime:
            		return this.CreatedTime.Value.CompareTo(rhs.CreatedTime.Value);
            		
            		                 
            	
            	
            	case ZohoLeadsColumn.Email:
            		return this.Email.CompareTo(rhs.Email);
            		
            		                 
            	
            	
            	case ZohoLeadsColumn.EmailOptOut:
            		return this.EmailOptOut.CompareTo(rhs.EmailOptOut);
            		
            		                 
            	
            	
            	case ZohoLeadsColumn.EventsInvolved:
            		return this.EventsInvolved.CompareTo(rhs.EventsInvolved);
            		
            		                 
            	
            	
            	case ZohoLeadsColumn.FeaturesOfInterest:
            		return this.FeaturesOfInterest.CompareTo(rhs.FeaturesOfInterest);
            		
            		                 
            	
            	
            	case ZohoLeadsColumn.FirstName:
            		return this.FirstName.CompareTo(rhs.FirstName);
            		
            		                 
            	
            	
            	case ZohoLeadsColumn.SafeNameFirstTimeCallerNewLead:
            		return this.SafeNameFirstTimeCallerNewLead.CompareTo(rhs.SafeNameFirstTimeCallerNewLead);
            		
            		                 
            	
            	
            	case ZohoLeadsColumn.IfNoLongerInterested:
            		return this.IfNoLongerInterested.CompareTo(rhs.IfNoLongerInterested);
            		
            		                 
            	
            	
            	case ZohoLeadsColumn.Industry:
            		return this.Industry.CompareTo(rhs.Industry);
            		
            		                 
            	
            	
            	case ZohoLeadsColumn.LastActivityTime:
            		return this.LastActivityTime.Value.CompareTo(rhs.LastActivityTime.Value);
            		
            		                 
            	
            	
            	case ZohoLeadsColumn.LastName:
            		return this.LastName.CompareTo(rhs.LastName);
            		
            		                 
            	
            	
            	case ZohoLeadsColumn.LastVisitedTime:
            		return this.LastVisitedTime.CompareTo(rhs.LastVisitedTime);
            		
            		                 
            	
            	
            	case ZohoLeadsColumn.LeadOwnerId:
            		return this.LeadOwnerId.CompareTo(rhs.LeadOwnerId);
            		
            		                 
            	
            	
            	case ZohoLeadsColumn.LeadOwner:
            		return this.LeadOwner.CompareTo(rhs.LeadOwner);
            		
            		                 
            	
            	
            	case ZohoLeadsColumn.LeadSource:
            		return this.LeadSource.CompareTo(rhs.LeadSource);
            		
            		                 
            	
            	
            	case ZohoLeadsColumn.LeadStatus:
            		return this.LeadStatus.CompareTo(rhs.LeadStatus);
            		
            		                 
            	
            	
            	case ZohoLeadsColumn.Leadid:
            		return this.Leadid.CompareTo(rhs.Leadid);
            		
            		                 
            	
            	
            	case ZohoLeadsColumn.Mobile:
            		return this.Mobile.CompareTo(rhs.Mobile);
            		
            		                 
            	
            	
            	case ZohoLeadsColumn.ModifiedBy:
            		return this.ModifiedBy.CompareTo(rhs.ModifiedBy);
            		
            		                 
            	
            	
            	case ZohoLeadsColumn.ModifiedTime:
            		return this.ModifiedTime.Value.CompareTo(rhs.ModifiedTime.Value);
            		
            		                 
            	
            	
            	case ZohoLeadsColumn.Phone:
            		return this.Phone.CompareTo(rhs.Phone);
            		
            		                 
            	
            	
            	case ZohoLeadsColumn.Rating:
            		return this.Rating.CompareTo(rhs.Rating);
            		
            		                 
            	
            	
            	case ZohoLeadsColumn.SecondaryEmail:
            		return this.SecondaryEmail.CompareTo(rhs.SecondaryEmail);
            		
            		                 
            	
            	
            	case ZohoLeadsColumn.State:
            		return this.State.CompareTo(rhs.State);
            		
            		                 
            	
            	
            	case ZohoLeadsColumn.SubmissionTime:
            		return this.SubmissionTime.CompareTo(rhs.SubmissionTime);
            		
            		                 
            	
            	
            	case ZohoLeadsColumn.SubmittedOn:
            		return this.SubmittedOn.Value.CompareTo(rhs.SubmittedOn.Value);
            		
            		                 
            	
            	
            	case ZohoLeadsColumn.TasksInvolved:
            		return this.TasksInvolved.CompareTo(rhs.TasksInvolved);
            		
            		                 
            	
            	
            	case ZohoLeadsColumn.TimeZone:
            		return this.TimeZone.CompareTo(rhs.TimeZone);
            		
            		                 
            	
            	
            	case ZohoLeadsColumn.Url:
            		return this.Url.CompareTo(rhs.Url);
            		
            		                 
            	
            	
            	case ZohoLeadsColumn.Website:
            		return this.Website.CompareTo(rhs.Website);
            		
            		                 
            	
            	
            	case ZohoLeadsColumn.Worries:
            		return this.Worries.CompareTo(rhs.Worries);
            		
            		                 
            	
            	
            	case ZohoLeadsColumn.Leadpk:
            		return this.Leadpk.CompareTo(rhs.Leadpk);
            		
            		                 
            	
            	
            	case ZohoLeadsColumn.Wday811:
            		return this.Wday811.Value.CompareTo(rhs.Wday811.Value);
            		
            		                 
            	
            	
            	case ZohoLeadsColumn.Wday112:
            		return this.Wday112.Value.CompareTo(rhs.Wday112.Value);
            		
            		                 
            	
            	
            	case ZohoLeadsColumn.Wday25:
            		return this.Wday25.Value.CompareTo(rhs.Wday25.Value);
            		
            		                 
            	
            	
            	case ZohoLeadsColumn.Wday58:
            		return this.Wday58.Value.CompareTo(rhs.Wday58.Value);
            		
            		                 
            	
            	
            	case ZohoLeadsColumn.Sat811:
            		return this.Sat811.Value.CompareTo(rhs.Sat811.Value);
            		
            		                 
            	
            	
            	case ZohoLeadsColumn.Sat112:
            		return this.Sat112.Value.CompareTo(rhs.Sat112.Value);
            		
            		                 
            	
            	
            	case ZohoLeadsColumn.Sat25:
            		return this.Sat25.Value.CompareTo(rhs.Sat25.Value);
            		
            		                 
            	
            	
            	case ZohoLeadsColumn.Sat58:
            		return this.Sat58.Value.CompareTo(rhs.Sat58.Value);
            		
            		                 
            	
            	
            	case ZohoLeadsColumn.Sun811:
            		return this.Sun811.Value.CompareTo(rhs.Sun811.Value);
            		
            		                 
            	
            	
            	case ZohoLeadsColumn.Sun112:
            		return this.Sun112.Value.CompareTo(rhs.Sun112.Value);
            		
            		                 
            	
            	
            	case ZohoLeadsColumn.Sun25:
            		return this.Sun25.Value.CompareTo(rhs.Sun25.Value);
            		
            		                 
            	
            	
            	case ZohoLeadsColumn.Sun58:
            		return this.Sun58.Value.CompareTo(rhs.Sun58.Value);
            		
            		                 
            }
            return 0;
        }
        */
	
		#endregion
		
		#region IComponent Members
		
		private ISite _site = null;

		/// <summary>
		/// Gets or Sets the site where this data is located.
		/// </summary>
		[XmlIgnore]
		[SoapIgnore]
		[Browsable(false)]
		public ISite Site
		{
			get{ return this._site; }
			set{ this._site = value; }
		}

		#endregion

		#region IDisposable Members
		
		/// <summary>
		/// Notify those that care when we dispose.
		/// </summary>
		[field:NonSerialized]
		public event System.EventHandler Disposed;

		/// <summary>
		/// Clean up. Nothing here though.
		/// </summary>
		public virtual void Dispose()
		{
			this.parentCollection = null;
			this.Dispose(true);
			GC.SuppressFinalize(this);
		}
		
		/// <summary>
		/// Clean up.
		/// </summary>
		protected virtual void Dispose(bool disposing)
		{
			if (disposing)
			{
				EventHandler handler = Disposed;
				if (handler != null)
					handler(this, EventArgs.Empty);
			}
		}
		
		#endregion
				
		#region IEntityKey<ZohoLeadsKey> Members
		
		// member variable for the EntityId property
		private ZohoLeadsKey _entityId;

		/// <summary>
		/// Gets or sets the EntityId property.
		/// </summary>
		[XmlIgnore]
		public virtual ZohoLeadsKey EntityId
		{
			get
			{
				if ( _entityId == null )
				{
					_entityId = new ZohoLeadsKey(this);
				}

				return _entityId;
			}
			set
			{
				if ( value != null )
				{
					value.Entity = this;
				}
				
				_entityId = value;
			}
		}
		
		#endregion
		
		#region EntityState
		/// <summary>
		///		Indicates state of object
		/// </summary>
		/// <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
		[BrowsableAttribute(false) , XmlIgnoreAttribute()]
		public override EntityState EntityState 
		{ 
			get{ return entityData.EntityState;	 } 
			set{ entityData.EntityState = value; } 
		}
		#endregion 
		
		#region EntityTrackingKey
		///<summary>
		/// Provides the tracking key for the <see cref="EntityLocator"/>
		///</summary>
		[XmlIgnore]
		public override string EntityTrackingKey
		{
			get
			{
				if(entityTrackingKey == null)
					entityTrackingKey = new System.Text.StringBuilder("ZohoLeads")
					.Append("|").Append( this.Leadpk.ToString()).ToString();
				return entityTrackingKey;
			}
			set
		    {
		        if (value != null)
                    entityTrackingKey = value;
		    }
		}
		#endregion 
		
		#region ToString Method
		
		///<summary>
		/// Returns a String that represents the current object.
		///</summary>
		public override string ToString()
		{
			return string.Format(System.Globalization.CultureInfo.InvariantCulture,
				"{50}{49}- ActivitiesInvolved: {0}{49}- CallsInvolved: {1}{49}- Company: {2}{49}- Converted: {3}{49}- CreatedBy: {4}{49}- CreatedTime: {5}{49}- Email: {6}{49}- EmailOptOut: {7}{49}- EventsInvolved: {8}{49}- FeaturesOfInterest: {9}{49}- FirstName: {10}{49}- SafeNameFirstTimeCallerNewLead: {11}{49}- IfNoLongerInterested: {12}{49}- Industry: {13}{49}- LastActivityTime: {14}{49}- LastName: {15}{49}- LastVisitedTime: {16}{49}- LeadOwnerId: {17}{49}- LeadOwner: {18}{49}- LeadSource: {19}{49}- LeadStatus: {20}{49}- Leadid: {21}{49}- Mobile: {22}{49}- ModifiedBy: {23}{49}- ModifiedTime: {24}{49}- Phone: {25}{49}- Rating: {26}{49}- SecondaryEmail: {27}{49}- State: {28}{49}- SubmissionTime: {29}{49}- SubmittedOn: {30}{49}- TasksInvolved: {31}{49}- TimeZone: {32}{49}- Url: {33}{49}- Website: {34}{49}- Worries: {35}{49}- Leadpk: {36}{49}- Wday811: {37}{49}- Wday112: {38}{49}- Wday25: {39}{49}- Wday58: {40}{49}- Sat811: {41}{49}- Sat112: {42}{49}- Sat25: {43}{49}- Sat58: {44}{49}- Sun811: {45}{49}- Sun112: {46}{49}- Sun25: {47}{49}- Sun58: {48}{49}{51}", 
				this.ActivitiesInvolved,
				this.CallsInvolved,
				(this.Company == null) ? string.Empty : this.Company.ToString(),
				this.Converted,
				(this.CreatedBy == null) ? string.Empty : this.CreatedBy.ToString(),
				(this.CreatedTime == null) ? string.Empty : this.CreatedTime.ToString(),
				(this.Email == null) ? string.Empty : this.Email.ToString(),
				this.EmailOptOut,
				this.EventsInvolved,
				(this.FeaturesOfInterest == null) ? string.Empty : this.FeaturesOfInterest.ToString(),
				(this.FirstName == null) ? string.Empty : this.FirstName.ToString(),
				this.SafeNameFirstTimeCallerNewLead,
				(this.IfNoLongerInterested == null) ? string.Empty : this.IfNoLongerInterested.ToString(),
				(this.Industry == null) ? string.Empty : this.Industry.ToString(),
				(this.LastActivityTime == null) ? string.Empty : this.LastActivityTime.ToString(),
				(this.LastName == null) ? string.Empty : this.LastName.ToString(),
				(this.LastVisitedTime == null) ? string.Empty : this.LastVisitedTime.ToString(),
				(this.LeadOwnerId == null) ? string.Empty : this.LeadOwnerId.ToString(),
				(this.LeadOwner == null) ? string.Empty : this.LeadOwner.ToString(),
				(this.LeadSource == null) ? string.Empty : this.LeadSource.ToString(),
				(this.LeadStatus == null) ? string.Empty : this.LeadStatus.ToString(),
				(this.Leadid == null) ? string.Empty : this.Leadid.ToString(),
				(this.Mobile == null) ? string.Empty : this.Mobile.ToString(),
				(this.ModifiedBy == null) ? string.Empty : this.ModifiedBy.ToString(),
				(this.ModifiedTime == null) ? string.Empty : this.ModifiedTime.ToString(),
				(this.Phone == null) ? string.Empty : this.Phone.ToString(),
				(this.Rating == null) ? string.Empty : this.Rating.ToString(),
				(this.SecondaryEmail == null) ? string.Empty : this.SecondaryEmail.ToString(),
				(this.State == null) ? string.Empty : this.State.ToString(),
				(this.SubmissionTime == null) ? string.Empty : this.SubmissionTime.ToString(),
				(this.SubmittedOn == null) ? string.Empty : this.SubmittedOn.ToString(),
				this.TasksInvolved,
				(this.TimeZone == null) ? string.Empty : this.TimeZone.ToString(),
				(this.Url == null) ? string.Empty : this.Url.ToString(),
				(this.Website == null) ? string.Empty : this.Website.ToString(),
				(this.Worries == null) ? string.Empty : this.Worries.ToString(),
				this.Leadpk,
				(this.Wday811 == null) ? string.Empty : this.Wday811.ToString(),
				(this.Wday112 == null) ? string.Empty : this.Wday112.ToString(),
				(this.Wday25 == null) ? string.Empty : this.Wday25.ToString(),
				(this.Wday58 == null) ? string.Empty : this.Wday58.ToString(),
				(this.Sat811 == null) ? string.Empty : this.Sat811.ToString(),
				(this.Sat112 == null) ? string.Empty : this.Sat112.ToString(),
				(this.Sat25 == null) ? string.Empty : this.Sat25.ToString(),
				(this.Sat58 == null) ? string.Empty : this.Sat58.ToString(),
				(this.Sun811 == null) ? string.Empty : this.Sun811.ToString(),
				(this.Sun112 == null) ? string.Empty : this.Sun112.ToString(),
				(this.Sun25 == null) ? string.Empty : this.Sun25.ToString(),
				(this.Sun58 == null) ? string.Empty : this.Sun58.ToString(),
				System.Environment.NewLine, 
				this.GetType(),
				this.Error.Length == 0 ? string.Empty : string.Format("- Error: {0}\n",this.Error));
		}
		
		#endregion ToString Method
		
		#region Inner data class
		
	/// <summary>
	///		The data structure representation of the 'ZohoLeads' table.
	/// </summary>
	/// <remarks>
	/// 	This struct is generated by a tool and should never be modified.
	/// </remarks>
	[EditorBrowsable(EditorBrowsableState.Never)]
	[Serializable]
	internal protected class ZohoLeadsEntityData : ICloneable, ICloneableEx
	{
		#region Variable Declarations
		private EntityState currentEntityState = EntityState.Added;
		
		#region Primary key(s)
		/// <summary>			
		/// LEADPK : 
		/// </summary>
		/// <remarks>Member of the primary key of the underlying table "ZohoLeads"</remarks>
		public System.Int64 Leadpk;
			
		#endregion
		
		#region Non Primary key(s)
		
		/// <summary>
		/// Activities Involved : 
		/// </summary>
		public System.Boolean ActivitiesInvolved = false;
		
		/// <summary>
		/// Calls Involved : 
		/// </summary>
		public System.Boolean CallsInvolved = false;
		
		/// <summary>
		/// Company : 
		/// </summary>
		public System.String Company = null;
		
		/// <summary>
		/// CONVERTED : 
		/// </summary>
		public System.Boolean Converted = false;
		
		/// <summary>
		/// Created By : 
		/// </summary>
		public System.String CreatedBy = null;
		
		/// <summary>
		/// Created Time : 
		/// </summary>
		public System.DateTime? CreatedTime = null;
		
		/// <summary>
		/// Email : 
		/// </summary>
		public System.String Email = null;
		
		/// <summary>
		/// Email Opt Out : 
		/// </summary>
		public System.Boolean EmailOptOut = false;
		
		/// <summary>
		/// Events Involved : 
		/// </summary>
		public System.Boolean EventsInvolved = false;
		
		/// <summary>
		/// Features of Interest : 
		/// </summary>
		public System.String FeaturesOfInterest = null;
		
		/// <summary>
		/// First Name : 
		/// </summary>
		public System.String FirstName = null;
		
		/// <summary>
		/// First Time Caller (new lead) : 
		/// </summary>
		public System.Boolean SafeNameFirstTimeCallerNewLead = false;
		
		/// <summary>
		/// If No Longer Interested : 
		/// </summary>
		public System.String IfNoLongerInterested = null;
		
		/// <summary>
		/// Industry : 
		/// </summary>
		public System.String Industry = null;
		
		/// <summary>
		/// Last Activity Time : 
		/// </summary>
		public System.DateTime? LastActivityTime = null;
		
		/// <summary>
		/// Last Name : 
		/// </summary>
		public System.String LastName = null;
		
		/// <summary>
		/// Last Visited Time : 
		/// </summary>
		public System.String LastVisitedTime = null;
		
		/// <summary>
		/// Lead Owner Id : 
		/// </summary>
		public System.String LeadOwnerId = null;
		
		/// <summary>
		/// Lead Owner : 
		/// </summary>
		public System.String LeadOwner = null;
		
		/// <summary>
		/// Lead Source : 
		/// </summary>
		public System.String LeadSource = null;
		
		/// <summary>
		/// Lead Status : 
		/// </summary>
		public System.String LeadStatus = null;
		
		/// <summary>
		/// LEADID : 
		/// </summary>
		public System.String Leadid = null;
		
		/// <summary>
		/// Mobile : 
		/// </summary>
		public System.String Mobile = null;
		
		/// <summary>
		/// Modified By : 
		/// </summary>
		public System.String ModifiedBy = null;
		
		/// <summary>
		/// Modified Time : 
		/// </summary>
		public System.DateTime? ModifiedTime = null;
		
		/// <summary>
		/// Phone : 
		/// </summary>
		public System.String Phone = null;
		
		/// <summary>
		/// Rating : 
		/// </summary>
		public System.String Rating = null;
		
		/// <summary>
		/// Secondary Email : 
		/// </summary>
		public System.String SecondaryEmail = null;
		
		/// <summary>
		/// State : 
		/// </summary>
		public System.String State = null;
		
		/// <summary>
		/// Submission Time : 
		/// </summary>
		public System.String SubmissionTime = null;
		
		/// <summary>
		/// Submitted On : 
		/// </summary>
		public System.DateTime? SubmittedOn = null;
		
		/// <summary>
		/// Tasks Involved : 
		/// </summary>
		public System.Boolean TasksInvolved = false;
		
		/// <summary>
		/// Time Zone : 
		/// </summary>
		public System.String TimeZone = null;
		
		/// <summary>
		/// URL : 
		/// </summary>
		public System.String Url = null;
		
		/// <summary>
		/// Website : 
		/// </summary>
		public System.String Website = null;
		
		/// <summary>
		/// Worries : 
		/// </summary>
		public System.String Worries = null;
		
		/// <summary>
		/// WDay8-11 : 
		/// </summary>
		public System.Int32? Wday811 = null;
		
		/// <summary>
		/// WDay11-2 : 
		/// </summary>
		public System.Int32? Wday112 = null;
		
		/// <summary>
		/// WDay2-5 : 
		/// </summary>
		public System.Int32? Wday25 = null;
		
		/// <summary>
		/// WDay5-8 : 
		/// </summary>
		public System.Int32? Wday58 = null;
		
		/// <summary>
		/// Sat8-11 : 
		/// </summary>
		public System.Int32? Sat811 = null;
		
		/// <summary>
		/// Sat11-2 : 
		/// </summary>
		public System.Int32? Sat112 = null;
		
		/// <summary>
		/// Sat2-5 : 
		/// </summary>
		public System.Int32? Sat25 = null;
		
		/// <summary>
		/// Sat5-8 : 
		/// </summary>
		public System.Int32? Sat58 = null;
		
		/// <summary>
		/// Sun8-11 : 
		/// </summary>
		public System.Int32? Sun811 = null;
		
		/// <summary>
		/// Sun11-2 : 
		/// </summary>
		public System.Int32? Sun112 = null;
		
		/// <summary>
		/// Sun2-5 : 
		/// </summary>
		public System.Int32? Sun25 = null;
		
		/// <summary>
		/// Sun5-8 : 
		/// </summary>
		public System.Int32? Sun58 = null;
		#endregion
			
		#region Source Foreign Key Property
				
		#endregion
        
		#endregion Variable Declarations

		#region Data Properties

		#endregion Data Properties
		#region Clone Method

		/// <summary>
		/// Creates a new object that is a copy of the current instance.
		/// </summary>
		/// <returns>A new object that is a copy of this instance.</returns>
		public Object Clone()
		{
			ZohoLeadsEntityData _tmp = new ZohoLeadsEntityData();
						
			_tmp.Leadpk = this.Leadpk;
			
			_tmp.ActivitiesInvolved = this.ActivitiesInvolved;
			_tmp.CallsInvolved = this.CallsInvolved;
			_tmp.Company = this.Company;
			_tmp.Converted = this.Converted;
			_tmp.CreatedBy = this.CreatedBy;
			_tmp.CreatedTime = this.CreatedTime;
			_tmp.Email = this.Email;
			_tmp.EmailOptOut = this.EmailOptOut;
			_tmp.EventsInvolved = this.EventsInvolved;
			_tmp.FeaturesOfInterest = this.FeaturesOfInterest;
			_tmp.FirstName = this.FirstName;
			_tmp.SafeNameFirstTimeCallerNewLead = this.SafeNameFirstTimeCallerNewLead;
			_tmp.IfNoLongerInterested = this.IfNoLongerInterested;
			_tmp.Industry = this.Industry;
			_tmp.LastActivityTime = this.LastActivityTime;
			_tmp.LastName = this.LastName;
			_tmp.LastVisitedTime = this.LastVisitedTime;
			_tmp.LeadOwnerId = this.LeadOwnerId;
			_tmp.LeadOwner = this.LeadOwner;
			_tmp.LeadSource = this.LeadSource;
			_tmp.LeadStatus = this.LeadStatus;
			_tmp.Leadid = this.Leadid;
			_tmp.Mobile = this.Mobile;
			_tmp.ModifiedBy = this.ModifiedBy;
			_tmp.ModifiedTime = this.ModifiedTime;
			_tmp.Phone = this.Phone;
			_tmp.Rating = this.Rating;
			_tmp.SecondaryEmail = this.SecondaryEmail;
			_tmp.State = this.State;
			_tmp.SubmissionTime = this.SubmissionTime;
			_tmp.SubmittedOn = this.SubmittedOn;
			_tmp.TasksInvolved = this.TasksInvolved;
			_tmp.TimeZone = this.TimeZone;
			_tmp.Url = this.Url;
			_tmp.Website = this.Website;
			_tmp.Worries = this.Worries;
			_tmp.Wday811 = this.Wday811;
			_tmp.Wday112 = this.Wday112;
			_tmp.Wday25 = this.Wday25;
			_tmp.Wday58 = this.Wday58;
			_tmp.Sat811 = this.Sat811;
			_tmp.Sat112 = this.Sat112;
			_tmp.Sat25 = this.Sat25;
			_tmp.Sat58 = this.Sat58;
			_tmp.Sun811 = this.Sun811;
			_tmp.Sun112 = this.Sun112;
			_tmp.Sun25 = this.Sun25;
			_tmp.Sun58 = this.Sun58;
			
			#region Source Parent Composite Entities
			#endregion
		
			#region Child Collections
			#endregion Child Collections
			
			//EntityState
			_tmp.EntityState = this.EntityState;
			
			return _tmp;
		}
		
		/// <summary>
		/// Creates a new object that is a copy of the current instance.
		/// </summary>
		/// <returns>A new object that is a copy of this instance.</returns>
		public object Clone(IDictionary existingCopies)
		{
			if (existingCopies == null)
				existingCopies = new Hashtable();
				
			ZohoLeadsEntityData _tmp = new ZohoLeadsEntityData();
						
			_tmp.Leadpk = this.Leadpk;
			
			_tmp.ActivitiesInvolved = this.ActivitiesInvolved;
			_tmp.CallsInvolved = this.CallsInvolved;
			_tmp.Company = this.Company;
			_tmp.Converted = this.Converted;
			_tmp.CreatedBy = this.CreatedBy;
			_tmp.CreatedTime = this.CreatedTime;
			_tmp.Email = this.Email;
			_tmp.EmailOptOut = this.EmailOptOut;
			_tmp.EventsInvolved = this.EventsInvolved;
			_tmp.FeaturesOfInterest = this.FeaturesOfInterest;
			_tmp.FirstName = this.FirstName;
			_tmp.SafeNameFirstTimeCallerNewLead = this.SafeNameFirstTimeCallerNewLead;
			_tmp.IfNoLongerInterested = this.IfNoLongerInterested;
			_tmp.Industry = this.Industry;
			_tmp.LastActivityTime = this.LastActivityTime;
			_tmp.LastName = this.LastName;
			_tmp.LastVisitedTime = this.LastVisitedTime;
			_tmp.LeadOwnerId = this.LeadOwnerId;
			_tmp.LeadOwner = this.LeadOwner;
			_tmp.LeadSource = this.LeadSource;
			_tmp.LeadStatus = this.LeadStatus;
			_tmp.Leadid = this.Leadid;
			_tmp.Mobile = this.Mobile;
			_tmp.ModifiedBy = this.ModifiedBy;
			_tmp.ModifiedTime = this.ModifiedTime;
			_tmp.Phone = this.Phone;
			_tmp.Rating = this.Rating;
			_tmp.SecondaryEmail = this.SecondaryEmail;
			_tmp.State = this.State;
			_tmp.SubmissionTime = this.SubmissionTime;
			_tmp.SubmittedOn = this.SubmittedOn;
			_tmp.TasksInvolved = this.TasksInvolved;
			_tmp.TimeZone = this.TimeZone;
			_tmp.Url = this.Url;
			_tmp.Website = this.Website;
			_tmp.Worries = this.Worries;
			_tmp.Wday811 = this.Wday811;
			_tmp.Wday112 = this.Wday112;
			_tmp.Wday25 = this.Wday25;
			_tmp.Wday58 = this.Wday58;
			_tmp.Sat811 = this.Sat811;
			_tmp.Sat112 = this.Sat112;
			_tmp.Sat25 = this.Sat25;
			_tmp.Sat58 = this.Sat58;
			_tmp.Sun811 = this.Sun811;
			_tmp.Sun112 = this.Sun112;
			_tmp.Sun25 = this.Sun25;
			_tmp.Sun58 = this.Sun58;
			
			#region Source Parent Composite Entities
			#endregion
		
			#region Child Collections
			#endregion Child Collections
			
			//EntityState
			_tmp.EntityState = this.EntityState;
			
			return _tmp;
		}
		
		#endregion Clone Method
		
		/// <summary>
		///		Indicates state of object
		/// </summary>
		/// <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public EntityState	EntityState
		{
			get { return currentEntityState;  }
			set { currentEntityState = value; }
		}
	
	}//End struct

		#endregion
		
				
		
		#region Events trigger
		/// <summary>
		/// Raises the <see cref="ColumnChanging" /> event.
		/// </summary>
		/// <param name="column">The <see cref="ZohoLeadsColumn"/> which has raised the event.</param>
		public virtual void OnColumnChanging(ZohoLeadsColumn column)
		{
			OnColumnChanging(column, null);
			return;
		}
		
		/// <summary>
		/// Raises the <see cref="ColumnChanged" /> event.
		/// </summary>
		/// <param name="column">The <see cref="ZohoLeadsColumn"/> which has raised the event.</param>
		public virtual void OnColumnChanged(ZohoLeadsColumn column)
		{
			OnColumnChanged(column, null);
			return;
		} 
		
		
		/// <summary>
		/// Raises the <see cref="ColumnChanging" /> event.
		/// </summary>
		/// <param name="column">The <see cref="ZohoLeadsColumn"/> which has raised the event.</param>
		/// <param name="value">The changed value.</param>
		public virtual void OnColumnChanging(ZohoLeadsColumn column, object value)
		{
			if(IsEntityTracked && EntityState != EntityState.Added && !EntityManager.TrackChangedEntities)
                EntityManager.StopTracking(entityTrackingKey);
                
			if (!SuppressEntityEvents)
			{
				ZohoLeadsEventHandler handler = ColumnChanging;
				if(handler != null)
				{
					handler(this, new ZohoLeadsEventArgs(column, value));
				}
			}
		}
		
		/// <summary>
		/// Raises the <see cref="ColumnChanged" /> event.
		/// </summary>
		/// <param name="column">The <see cref="ZohoLeadsColumn"/> which has raised the event.</param>
		/// <param name="value">The changed value.</param>
		public virtual void OnColumnChanged(ZohoLeadsColumn column, object value)
		{
			if (!SuppressEntityEvents)
			{
				ZohoLeadsEventHandler handler = ColumnChanged;
				if(handler != null)
				{
					handler(this, new ZohoLeadsEventArgs(column, value));
				}
			
				// warn the parent list that i have changed
				OnEntityChanged();
			}
		} 
		#endregion
			
	} // End Class
	
	
	#region ZohoLeadsEventArgs class
	/// <summary>
	/// Provides data for the ColumnChanging and ColumnChanged events.
	/// </summary>
	/// <remarks>
	/// The ColumnChanging and ColumnChanged events occur when a change is made to the value 
	/// of a property of a <see cref="ZohoLeads"/> object.
	/// </remarks>
	public class ZohoLeadsEventArgs : System.EventArgs
	{
		private ZohoLeadsColumn column;
		private object value;
		
		///<summary>
		/// Initalizes a new Instance of the ZohoLeadsEventArgs class.
		///</summary>
		public ZohoLeadsEventArgs(ZohoLeadsColumn column)
		{
			this.column = column;
		}
		
		///<summary>
		/// Initalizes a new Instance of the ZohoLeadsEventArgs class.
		///</summary>
		public ZohoLeadsEventArgs(ZohoLeadsColumn column, object value)
		{
			this.column = column;
			this.value = value;
		}
		
		///<summary>
		/// The ZohoLeadsColumn that was modified, which has raised the event.
		///</summary>
		///<value cref="ZohoLeadsColumn" />
		public ZohoLeadsColumn Column { get { return this.column; } }
		
		/// <summary>
        /// Gets the current value of the column.
        /// </summary>
        /// <value>The current value of the column.</value>
		public object Value{ get { return this.value; } }

	}
	#endregion
	
	///<summary>
	/// Define a delegate for all ZohoLeads related events.
	///</summary>
	public delegate void ZohoLeadsEventHandler(object sender, ZohoLeadsEventArgs e);
	
	#region ZohoLeadsComparer
		
	/// <summary>
	///	Strongly Typed IComparer
	/// </summary>
	public class ZohoLeadsComparer : System.Collections.Generic.IComparer<ZohoLeads>
	{
		ZohoLeadsColumn whichComparison;
		
		/// <summary>
        /// Initializes a new instance of the <see cref="T:ZohoLeadsComparer"/> class.
        /// </summary>
		public ZohoLeadsComparer()
        {            
        }               
        
        /// <summary>
        /// Initializes a new instance of the <see cref="T:ZohoLeadsComparer"/> class.
        /// </summary>
        /// <param name="column">The column to sort on.</param>
        public ZohoLeadsComparer(ZohoLeadsColumn column)
        {
            this.whichComparison = column;
        }

		/// <summary>
        /// Determines whether the specified <see cref="ZohoLeads"/> instances are considered equal.
        /// </summary>
        /// <param name="a">The first <see cref="ZohoLeads"/> to compare.</param>
        /// <param name="b">The second <c>ZohoLeads</c> to compare.</param>
        /// <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        public bool Equals(ZohoLeads a, ZohoLeads b)
        {
            return this.Compare(a, b) == 0;
        }

		/// <summary>
        /// Gets the hash code of the specified entity.
        /// </summary>
        /// <param name="entity">The entity.</param>
        /// <returns></returns>
        public int GetHashCode(ZohoLeads entity)
        {
            return entity.GetHashCode();
        }

        /// <summary>
        /// Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
        /// </summary>
        /// <param name="a">The first object to compare.</param>
        /// <param name="b">The second object to compare.</param>
        /// <returns></returns>
        public int Compare(ZohoLeads a, ZohoLeads b)
        {
        	EntityPropertyComparer entityPropertyComparer = new EntityPropertyComparer(this.whichComparison.ToString());
        	return entityPropertyComparer.Compare(a, b);
        }

		/// <summary>
        /// Gets or sets the column that will be used for comparison.
        /// </summary>
        /// <value>The comparison column.</value>
        public ZohoLeadsColumn WhichComparison
        {
            get { return this.whichComparison; }
            set { this.whichComparison = value; }
        }
	}
	
	#endregion
	
	#region ZohoLeadsKey Class

	/// <summary>
	/// Wraps the unique identifier values for the <see cref="ZohoLeads"/> object.
	/// </summary>
	[Serializable]
	[CLSCompliant(true)]
	public class ZohoLeadsKey : EntityKeyBase
	{
		#region Constructors
		
		/// <summary>
		/// Initializes a new instance of the ZohoLeadsKey class.
		/// </summary>
		public ZohoLeadsKey()
		{
		}
		
		/// <summary>
		/// Initializes a new instance of the ZohoLeadsKey class.
		/// </summary>
		public ZohoLeadsKey(ZohoLeadsBase entity)
		{
			this.Entity = entity;

			#region Init Properties

			if ( entity != null )
			{
				this.Leadpk = entity.Leadpk;
			}

			#endregion
		}
		
		/// <summary>
		/// Initializes a new instance of the ZohoLeadsKey class.
		/// </summary>
		public ZohoLeadsKey(System.Int64 _leadpk)
		{
			#region Init Properties

			this.Leadpk = _leadpk;

			#endregion
		}
		
		#endregion Constructors

		#region Properties
		
		// member variable for the Entity property
		private ZohoLeadsBase _entity;
		
		/// <summary>
		/// Gets or sets the Entity property.
		/// </summary>
		public ZohoLeadsBase Entity
		{
			get { return _entity; }
			set { _entity = value; }
		}
		
		// member variable for the Leadpk property
		private System.Int64 _leadpk;
		
		/// <summary>
		/// Gets or sets the Leadpk property.
		/// </summary>
		public System.Int64 Leadpk
		{
			get { return _leadpk; }
			set
			{
				if ( this.Entity != null )
					this.Entity.Leadpk = value;
				
				_leadpk = value;
			}
		}
		
		#endregion

		#region Methods
		
		/// <summary>
		/// Reads values from the supplied <see cref="IDictionary"/> object into
		/// properties of the current object.
		/// </summary>
		/// <param name="values">An <see cref="IDictionary"/> instance that contains
		/// the key/value pairs to be used as property values.</param>
		public override void Load(IDictionary values)
		{
			#region Init Properties

			if ( values != null )
			{
				Leadpk = ( values["Leadpk"] != null ) ? (System.Int64) EntityUtil.ChangeType(values["Leadpk"], typeof(System.Int64)) : (long)0;
			}

			#endregion
		}

		/// <summary>
		/// Creates a new <see cref="IDictionary"/> object and populates it
		/// with the property values of the current object.
		/// </summary>
		/// <returns>A collection of name/value pairs.</returns>
		public override IDictionary ToDictionary()
		{
			IDictionary values = new Hashtable();

			#region Init Dictionary

			values.Add("Leadpk", Leadpk);

			#endregion Init Dictionary

			return values;
		}
		
		///<summary>
		/// Returns a String that represents the current object.
		///</summary>
		public override string ToString()
		{
			return String.Format("Leadpk: {0}{1}",
								Leadpk,
								System.Environment.NewLine);
		}

		#endregion Methods
	}
	
	#endregion	

	#region ZohoLeadsColumn Enum
	
	/// <summary>
	/// Enumerate the ZohoLeads columns.
	/// </summary>
	[Serializable]
	public enum ZohoLeadsColumn : int
	{
		/// <summary>
		/// ActivitiesInvolved : 
		/// </summary>
		[EnumTextValue("Activities Involved")]
		[ColumnEnum("Activities Involved", typeof(System.Boolean), System.Data.DbType.Boolean, false, false, false)]
		ActivitiesInvolved = 1,
		/// <summary>
		/// CallsInvolved : 
		/// </summary>
		[EnumTextValue("Calls Involved")]
		[ColumnEnum("Calls Involved", typeof(System.Boolean), System.Data.DbType.Boolean, false, false, false)]
		CallsInvolved = 2,
		/// <summary>
		/// Company : 
		/// </summary>
		[EnumTextValue("Company")]
		[ColumnEnum("Company", typeof(System.String), System.Data.DbType.String, false, false, true, 255)]
		Company = 3,
		/// <summary>
		/// Converted : 
		/// </summary>
		[EnumTextValue("Converted")]
		[ColumnEnum("CONVERTED", typeof(System.Boolean), System.Data.DbType.Boolean, false, false, false)]
		Converted = 4,
		/// <summary>
		/// CreatedBy : 
		/// </summary>
		[EnumTextValue("Created By")]
		[ColumnEnum("Created By", typeof(System.String), System.Data.DbType.String, false, false, true, 255)]
		CreatedBy = 5,
		/// <summary>
		/// CreatedTime : 
		/// </summary>
		[EnumTextValue("Created Time")]
		[ColumnEnum("Created Time", typeof(System.DateTime), System.Data.DbType.DateTime, false, false, true)]
		CreatedTime = 6,
		/// <summary>
		/// Email : 
		/// </summary>
		[EnumTextValue("Email")]
		[ColumnEnum("Email", typeof(System.String), System.Data.DbType.String, false, false, true, 255)]
		Email = 7,
		/// <summary>
		/// EmailOptOut : 
		/// </summary>
		[EnumTextValue("Email Opt Out")]
		[ColumnEnum("Email Opt Out", typeof(System.Boolean), System.Data.DbType.Boolean, false, false, false)]
		EmailOptOut = 8,
		/// <summary>
		/// EventsInvolved : 
		/// </summary>
		[EnumTextValue("Events Involved")]
		[ColumnEnum("Events Involved", typeof(System.Boolean), System.Data.DbType.Boolean, false, false, false)]
		EventsInvolved = 9,
		/// <summary>
		/// FeaturesOfInterest : 
		/// </summary>
		[EnumTextValue("Features Of Interest")]
		[ColumnEnum("Features of Interest", typeof(System.String), System.Data.DbType.String, false, false, true, 255)]
		FeaturesOfInterest = 10,
		/// <summary>
		/// FirstName : 
		/// </summary>
		[EnumTextValue("First Name")]
		[ColumnEnum("First Name", typeof(System.String), System.Data.DbType.String, false, false, true, 255)]
		FirstName = 11,
		/// <summary>
		/// SafeNameFirstTimeCallerNewLead : 
		/// </summary>
		[EnumTextValue("First Time Caller(new Lead)")]
		[ColumnEnum("First Time Caller (new lead)", typeof(System.Boolean), System.Data.DbType.Boolean, false, false, false)]
		SafeNameFirstTimeCallerNewLead = 12,
		/// <summary>
		/// IfNoLongerInterested : 
		/// </summary>
		[EnumTextValue("If No Longer Interested")]
		[ColumnEnum("If No Longer Interested", typeof(System.String), System.Data.DbType.String, false, false, true, 255)]
		IfNoLongerInterested = 13,
		/// <summary>
		/// Industry : 
		/// </summary>
		[EnumTextValue("Industry")]
		[ColumnEnum("Industry", typeof(System.String), System.Data.DbType.String, false, false, true, 255)]
		Industry = 14,
		/// <summary>
		/// LastActivityTime : 
		/// </summary>
		[EnumTextValue("Last Activity Time")]
		[ColumnEnum("Last Activity Time", typeof(System.DateTime), System.Data.DbType.DateTime, false, false, true)]
		LastActivityTime = 15,
		/// <summary>
		/// LastName : 
		/// </summary>
		[EnumTextValue("Last Name")]
		[ColumnEnum("Last Name", typeof(System.String), System.Data.DbType.String, false, false, true, 255)]
		LastName = 16,
		/// <summary>
		/// LastVisitedTime : 
		/// </summary>
		[EnumTextValue("Last Visited Time")]
		[ColumnEnum("Last Visited Time", typeof(System.String), System.Data.DbType.String, false, false, true, 255)]
		LastVisitedTime = 17,
		/// <summary>
		/// LeadOwnerId : 
		/// </summary>
		[EnumTextValue("Lead Owner Id")]
		[ColumnEnum("Lead Owner Id", typeof(System.String), System.Data.DbType.String, false, false, true, 255)]
		LeadOwnerId = 18,
		/// <summary>
		/// LeadOwner : 
		/// </summary>
		[EnumTextValue("Lead Owner")]
		[ColumnEnum("Lead Owner", typeof(System.String), System.Data.DbType.String, false, false, true, 255)]
		LeadOwner = 19,
		/// <summary>
		/// LeadSource : 
		/// </summary>
		[EnumTextValue("Lead Source")]
		[ColumnEnum("Lead Source", typeof(System.String), System.Data.DbType.String, false, false, true, 255)]
		LeadSource = 20,
		/// <summary>
		/// LeadStatus : 
		/// </summary>
		[EnumTextValue("Lead Status")]
		[ColumnEnum("Lead Status", typeof(System.String), System.Data.DbType.String, false, false, true, 255)]
		LeadStatus = 21,
		/// <summary>
		/// Leadid : 
		/// </summary>
		[EnumTextValue("Leadid")]
		[ColumnEnum("LEADID", typeof(System.String), System.Data.DbType.String, false, false, true, 255)]
		Leadid = 22,
		/// <summary>
		/// Mobile : 
		/// </summary>
		[EnumTextValue("Mobile")]
		[ColumnEnum("Mobile", typeof(System.String), System.Data.DbType.String, false, false, true, 255)]
		Mobile = 23,
		/// <summary>
		/// ModifiedBy : 
		/// </summary>
		[EnumTextValue("Modified By")]
		[ColumnEnum("Modified By", typeof(System.String), System.Data.DbType.String, false, false, true, 255)]
		ModifiedBy = 24,
		/// <summary>
		/// ModifiedTime : 
		/// </summary>
		[EnumTextValue("Modified Time")]
		[ColumnEnum("Modified Time", typeof(System.DateTime), System.Data.DbType.DateTime, false, false, true)]
		ModifiedTime = 25,
		/// <summary>
		/// Phone : 
		/// </summary>
		[EnumTextValue("Phone")]
		[ColumnEnum("Phone", typeof(System.String), System.Data.DbType.String, false, false, true, 255)]
		Phone = 26,
		/// <summary>
		/// Rating : 
		/// </summary>
		[EnumTextValue("Rating")]
		[ColumnEnum("Rating", typeof(System.String), System.Data.DbType.String, false, false, true, 255)]
		Rating = 27,
		/// <summary>
		/// SecondaryEmail : 
		/// </summary>
		[EnumTextValue("Secondary Email")]
		[ColumnEnum("Secondary Email", typeof(System.String), System.Data.DbType.String, false, false, true, 255)]
		SecondaryEmail = 28,
		/// <summary>
		/// State : 
		/// </summary>
		[EnumTextValue("State")]
		[ColumnEnum("State", typeof(System.String), System.Data.DbType.String, false, false, true, 255)]
		State = 29,
		/// <summary>
		/// SubmissionTime : 
		/// </summary>
		[EnumTextValue("Submission Time")]
		[ColumnEnum("Submission Time", typeof(System.String), System.Data.DbType.String, false, false, true, 255)]
		SubmissionTime = 30,
		/// <summary>
		/// SubmittedOn : 
		/// </summary>
		[EnumTextValue("Submitted On")]
		[ColumnEnum("Submitted On", typeof(System.DateTime), System.Data.DbType.DateTime, false, false, true)]
		SubmittedOn = 31,
		/// <summary>
		/// TasksInvolved : 
		/// </summary>
		[EnumTextValue("Tasks Involved")]
		[ColumnEnum("Tasks Involved", typeof(System.Boolean), System.Data.DbType.Boolean, false, false, false)]
		TasksInvolved = 32,
		/// <summary>
		/// TimeZone : 
		/// </summary>
		[EnumTextValue("Time Zone")]
		[ColumnEnum("Time Zone", typeof(System.String), System.Data.DbType.String, false, false, true, 255)]
		TimeZone = 33,
		/// <summary>
		/// Url : 
		/// </summary>
		[EnumTextValue("Url")]
		[ColumnEnum("URL", typeof(System.String), System.Data.DbType.String, false, false, true, 255)]
		Url = 34,
		/// <summary>
		/// Website : 
		/// </summary>
		[EnumTextValue("Website")]
		[ColumnEnum("Website", typeof(System.String), System.Data.DbType.String, false, false, true, 255)]
		Website = 35,
		/// <summary>
		/// Worries : 
		/// </summary>
		[EnumTextValue("Worries")]
		[ColumnEnum("Worries", typeof(System.String), System.Data.DbType.String, false, false, true, 255)]
		Worries = 36,
		/// <summary>
		/// Leadpk : 
		/// </summary>
		[EnumTextValue("Leadpk")]
		[ColumnEnum("LEADPK", typeof(System.Int64), System.Data.DbType.Int64, true, true, false)]
		Leadpk = 37,
		/// <summary>
		/// Wday811 : 
		/// </summary>
		[EnumTextValue("Wday811")]
		[ColumnEnum("WDay8-11", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		Wday811 = 38,
		/// <summary>
		/// Wday112 : 
		/// </summary>
		[EnumTextValue("Wday112")]
		[ColumnEnum("WDay11-2", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		Wday112 = 39,
		/// <summary>
		/// Wday25 : 
		/// </summary>
		[EnumTextValue("Wday25")]
		[ColumnEnum("WDay2-5", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		Wday25 = 40,
		/// <summary>
		/// Wday58 : 
		/// </summary>
		[EnumTextValue("Wday58")]
		[ColumnEnum("WDay5-8", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		Wday58 = 41,
		/// <summary>
		/// Sat811 : 
		/// </summary>
		[EnumTextValue("Sat811")]
		[ColumnEnum("Sat8-11", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		Sat811 = 42,
		/// <summary>
		/// Sat112 : 
		/// </summary>
		[EnumTextValue("Sat112")]
		[ColumnEnum("Sat11-2", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		Sat112 = 43,
		/// <summary>
		/// Sat25 : 
		/// </summary>
		[EnumTextValue("Sat25")]
		[ColumnEnum("Sat2-5", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		Sat25 = 44,
		/// <summary>
		/// Sat58 : 
		/// </summary>
		[EnumTextValue("Sat58")]
		[ColumnEnum("Sat5-8", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		Sat58 = 45,
		/// <summary>
		/// Sun811 : 
		/// </summary>
		[EnumTextValue("Sun811")]
		[ColumnEnum("Sun8-11", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		Sun811 = 46,
		/// <summary>
		/// Sun112 : 
		/// </summary>
		[EnumTextValue("Sun112")]
		[ColumnEnum("Sun11-2", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		Sun112 = 47,
		/// <summary>
		/// Sun25 : 
		/// </summary>
		[EnumTextValue("Sun25")]
		[ColumnEnum("Sun2-5", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		Sun25 = 48,
		/// <summary>
		/// Sun58 : 
		/// </summary>
		[EnumTextValue("Sun58")]
		[ColumnEnum("Sun5-8", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		Sun58 = 49
	}//End enum

	#endregion ZohoLeadsColumn Enum

} // end namespace
