/*
	File generated by NetTiers templates [www.nettiers.net]
	Generated on : Thursday, May 12, 2016
	Important: Do not modify this file. Edit the file VwLeadsWithAllStatus.cs instead.
*/
#region Using Directives
using System;
using System.ComponentModel;
using System.Collections;
using System.Runtime.Serialization;
using System.Xml.Serialization;
#endregion

namespace SalesWorkflow.Entities
{
	///<summary>
	/// An object representation of the 'vw_LeadsWithAllStatus' view. [No description found in the database]	
	///</summary>
	[Serializable]
	[CLSCompliant(true)]
	[ToolboxItem("VwLeadsWithAllStatusBase")]
	public abstract partial class VwLeadsWithAllStatusBase : System.IComparable, System.ICloneable, INotifyPropertyChanged
	{
		
		#region Variable Declarations
		
		/// <summary>
		/// Lead Status : 
		/// </summary>
		private System.String		  _leadStatus = null;
		
		/// <summary>
		/// LEADID : 
		/// </summary>
		private System.String		  _leadid = null;
		
		/// <summary>
		/// Created Time : 
		/// </summary>
		private System.DateTime?		  _createdTime = null;
		
		/// <summary>
		/// Email : 
		/// </summary>
		private System.String		  _email = null;
		
		/// <summary>
		/// First Name : 
		/// </summary>
		private System.String		  _firstName = null;
		
		/// <summary>
		/// Last Name : 
		/// </summary>
		private System.String		  _lastName = null;
		
		/// <summary>
		/// If No Longer Interested : 
		/// </summary>
		private System.String		  _ifNoLongerInterested = null;
		
		/// <summary>
		/// Last Activity Time : 
		/// </summary>
		private System.DateTime?		  _lastActivityTime = null;
		
		/// <summary>
		/// Last Visited Time : 
		/// </summary>
		private System.String		  _lastVisitedTime = null;
		
		/// <summary>
		/// Lead Owner : 
		/// </summary>
		private System.String		  _leadOwner = null;
		
		/// <summary>
		/// Rating : 
		/// </summary>
		private System.String		  _rating = null;
		
		/// <summary>
		/// State : 
		/// </summary>
		private System.String		  _state = null;
		
		/// <summary>
		/// Time Zone : 
		/// </summary>
		private System.String		  _timeZone = null;
		
		/// <summary>
		/// Phone : 
		/// </summary>
		private System.String		  _phone = null;
		
		/// <summary>
		/// LeadHoldDts : 
		/// </summary>
		private System.DateTime?		  _leadHoldDts = null;
		
		/// <summary>
		/// LeadActionDts : 
		/// </summary>
		private System.DateTime?		  _leadActionDts = null;
		
		/// <summary>
		/// Object that contains data to associate with this object
		/// </summary>
		private object _tag;
		
		/// <summary>
		/// Suppresses Entity Events from Firing, 
		/// useful when loading the entities from the database.
		/// </summary>
	    [NonSerialized] 
		private bool suppressEntityEvents = false;
		
		#endregion Variable Declarations
		
		#region Constructors
		///<summary>
		/// Creates a new <see cref="VwLeadsWithAllStatusBase"/> instance.
		///</summary>
		public VwLeadsWithAllStatusBase()
		{
		}		
		
		///<summary>
		/// Creates a new <see cref="VwLeadsWithAllStatusBase"/> instance.
		///</summary>
		///<param name="_leadStatus"></param>
		///<param name="_leadid"></param>
		///<param name="_createdTime"></param>
		///<param name="_email"></param>
		///<param name="_firstName"></param>
		///<param name="_lastName"></param>
		///<param name="_ifNoLongerInterested"></param>
		///<param name="_lastActivityTime"></param>
		///<param name="_lastVisitedTime"></param>
		///<param name="_leadOwner"></param>
		///<param name="_rating"></param>
		///<param name="_state"></param>
		///<param name="_timeZone"></param>
		///<param name="_phone"></param>
		///<param name="_leadHoldDts"></param>
		///<param name="_leadActionDts"></param>
		public VwLeadsWithAllStatusBase(System.String _leadStatus, System.String _leadid, System.DateTime? _createdTime, System.String _email, System.String _firstName, System.String _lastName, System.String _ifNoLongerInterested, System.DateTime? _lastActivityTime, System.String _lastVisitedTime, System.String _leadOwner, System.String _rating, System.String _state, System.String _timeZone, System.String _phone, System.DateTime? _leadHoldDts, System.DateTime? _leadActionDts)
		{
			this._leadStatus = _leadStatus;
			this._leadid = _leadid;
			this._createdTime = _createdTime;
			this._email = _email;
			this._firstName = _firstName;
			this._lastName = _lastName;
			this._ifNoLongerInterested = _ifNoLongerInterested;
			this._lastActivityTime = _lastActivityTime;
			this._lastVisitedTime = _lastVisitedTime;
			this._leadOwner = _leadOwner;
			this._rating = _rating;
			this._state = _state;
			this._timeZone = _timeZone;
			this._phone = _phone;
			this._leadHoldDts = _leadHoldDts;
			this._leadActionDts = _leadActionDts;
		}
		
		///<summary>
		/// A simple factory method to create a new <see cref="VwLeadsWithAllStatus"/> instance.
		///</summary>
		///<param name="_leadStatus"></param>
		///<param name="_leadid"></param>
		///<param name="_createdTime"></param>
		///<param name="_email"></param>
		///<param name="_firstName"></param>
		///<param name="_lastName"></param>
		///<param name="_ifNoLongerInterested"></param>
		///<param name="_lastActivityTime"></param>
		///<param name="_lastVisitedTime"></param>
		///<param name="_leadOwner"></param>
		///<param name="_rating"></param>
		///<param name="_state"></param>
		///<param name="_timeZone"></param>
		///<param name="_phone"></param>
		///<param name="_leadHoldDts"></param>
		///<param name="_leadActionDts"></param>
		public static VwLeadsWithAllStatus CreateVwLeadsWithAllStatus(System.String _leadStatus, System.String _leadid, System.DateTime? _createdTime, System.String _email, System.String _firstName, System.String _lastName, System.String _ifNoLongerInterested, System.DateTime? _lastActivityTime, System.String _lastVisitedTime, System.String _leadOwner, System.String _rating, System.String _state, System.String _timeZone, System.String _phone, System.DateTime? _leadHoldDts, System.DateTime? _leadActionDts)
		{
			VwLeadsWithAllStatus newVwLeadsWithAllStatus = new VwLeadsWithAllStatus();
			newVwLeadsWithAllStatus.LeadStatus = _leadStatus;
			newVwLeadsWithAllStatus.Leadid = _leadid;
			newVwLeadsWithAllStatus.CreatedTime = _createdTime;
			newVwLeadsWithAllStatus.Email = _email;
			newVwLeadsWithAllStatus.FirstName = _firstName;
			newVwLeadsWithAllStatus.LastName = _lastName;
			newVwLeadsWithAllStatus.IfNoLongerInterested = _ifNoLongerInterested;
			newVwLeadsWithAllStatus.LastActivityTime = _lastActivityTime;
			newVwLeadsWithAllStatus.LastVisitedTime = _lastVisitedTime;
			newVwLeadsWithAllStatus.LeadOwner = _leadOwner;
			newVwLeadsWithAllStatus.Rating = _rating;
			newVwLeadsWithAllStatus.State = _state;
			newVwLeadsWithAllStatus.TimeZone = _timeZone;
			newVwLeadsWithAllStatus.Phone = _phone;
			newVwLeadsWithAllStatus.LeadHoldDts = _leadHoldDts;
			newVwLeadsWithAllStatus.LeadActionDts = _leadActionDts;
			return newVwLeadsWithAllStatus;
		}
				
		#endregion Constructors
		
		#region Properties	
		/// <summary>
		/// 	Gets or Sets the Lead Status property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String LeadStatus
		{
			get
			{
				return this._leadStatus; 
			}
			set
			{
				if (_leadStatus == value)
					return;
					
				this._leadStatus = value;
				this._isDirty = true;
				
				OnPropertyChanged("LeadStatus");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the LEADID property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String Leadid
		{
			get
			{
				return this._leadid; 
			}
			set
			{
				if (_leadid == value)
					return;
					
				this._leadid = value;
				this._isDirty = true;
				
				OnPropertyChanged("Leadid");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the Created Time property. 
		///		
		/// </summary>
		/// <value>This type is datetime</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return DateTime.MinValue. It is up to the developer
		/// to check the value of IsCreatedTimeNull() and perform business logic appropriately.
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.DateTime? CreatedTime
		{
			get
			{
				return this._createdTime; 
			}
			set
			{
				if (_createdTime == value && CreatedTime != null )
					return;
					
				this._createdTime = value;
				this._isDirty = true;
				
				OnPropertyChanged("CreatedTime");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the Email property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String Email
		{
			get
			{
				return this._email; 
			}
			set
			{
				if (_email == value)
					return;
					
				this._email = value;
				this._isDirty = true;
				
				OnPropertyChanged("Email");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the First Name property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String FirstName
		{
			get
			{
				return this._firstName; 
			}
			set
			{
				if (_firstName == value)
					return;
					
				this._firstName = value;
				this._isDirty = true;
				
				OnPropertyChanged("FirstName");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the Last Name property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String LastName
		{
			get
			{
				return this._lastName; 
			}
			set
			{
				if (_lastName == value)
					return;
					
				this._lastName = value;
				this._isDirty = true;
				
				OnPropertyChanged("LastName");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the If No Longer Interested property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String IfNoLongerInterested
		{
			get
			{
				return this._ifNoLongerInterested; 
			}
			set
			{
				if (_ifNoLongerInterested == value)
					return;
					
				this._ifNoLongerInterested = value;
				this._isDirty = true;
				
				OnPropertyChanged("IfNoLongerInterested");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the Last Activity Time property. 
		///		
		/// </summary>
		/// <value>This type is datetime</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return DateTime.MinValue. It is up to the developer
		/// to check the value of IsLastActivityTimeNull() and perform business logic appropriately.
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.DateTime? LastActivityTime
		{
			get
			{
				return this._lastActivityTime; 
			}
			set
			{
				if (_lastActivityTime == value && LastActivityTime != null )
					return;
					
				this._lastActivityTime = value;
				this._isDirty = true;
				
				OnPropertyChanged("LastActivityTime");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the Last Visited Time property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String LastVisitedTime
		{
			get
			{
				return this._lastVisitedTime; 
			}
			set
			{
				if (_lastVisitedTime == value)
					return;
					
				this._lastVisitedTime = value;
				this._isDirty = true;
				
				OnPropertyChanged("LastVisitedTime");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the Lead Owner property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String LeadOwner
		{
			get
			{
				return this._leadOwner; 
			}
			set
			{
				if (_leadOwner == value)
					return;
					
				this._leadOwner = value;
				this._isDirty = true;
				
				OnPropertyChanged("LeadOwner");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the Rating property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String Rating
		{
			get
			{
				return this._rating; 
			}
			set
			{
				if (_rating == value)
					return;
					
				this._rating = value;
				this._isDirty = true;
				
				OnPropertyChanged("Rating");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the State property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String State
		{
			get
			{
				return this._state; 
			}
			set
			{
				if (_state == value)
					return;
					
				this._state = value;
				this._isDirty = true;
				
				OnPropertyChanged("State");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the Time Zone property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String TimeZone
		{
			get
			{
				return this._timeZone; 
			}
			set
			{
				if (_timeZone == value)
					return;
					
				this._timeZone = value;
				this._isDirty = true;
				
				OnPropertyChanged("TimeZone");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the Phone property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String Phone
		{
			get
			{
				return this._phone; 
			}
			set
			{
				if (_phone == value)
					return;
					
				this._phone = value;
				this._isDirty = true;
				
				OnPropertyChanged("Phone");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the LeadHoldDts property. 
		///		
		/// </summary>
		/// <value>This type is datetime</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return DateTime.MinValue. It is up to the developer
		/// to check the value of IsLeadHoldDtsNull() and perform business logic appropriately.
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.DateTime? LeadHoldDts
		{
			get
			{
				return this._leadHoldDts; 
			}
			set
			{
				if (_leadHoldDts == value && LeadHoldDts != null )
					return;
					
				this._leadHoldDts = value;
				this._isDirty = true;
				
				OnPropertyChanged("LeadHoldDts");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the LeadActionDts property. 
		///		
		/// </summary>
		/// <value>This type is datetime</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return DateTime.MinValue. It is up to the developer
		/// to check the value of IsLeadActionDtsNull() and perform business logic appropriately.
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.DateTime? LeadActionDts
		{
			get
			{
				return this._leadActionDts; 
			}
			set
			{
				if (_leadActionDts == value && LeadActionDts != null )
					return;
					
				this._leadActionDts = value;
				this._isDirty = true;
				
				OnPropertyChanged("LeadActionDts");
			}
		}
		
		
		/// <summary>
		///     Gets or sets the object that contains supplemental data about this object.
		/// </summary>
		/// <value>Object</value>
		[System.ComponentModel.Bindable(false)]
		[LocalizableAttribute(false)]
		[DescriptionAttribute("Object containing data to be associated with this object")]
		public virtual object Tag
		{
			get
			{
				return this._tag;
			}
			set
			{
				if (this._tag == value)
					return;
		
				this._tag = value;
			}
		}
	
		/// <summary>
		/// Determines whether this entity is to suppress events while set to true.
		/// </summary>
		[System.ComponentModel.Bindable(false)]
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public bool SuppressEntityEvents
		{	
			get
			{
				return suppressEntityEvents;
			}
			set
			{
				suppressEntityEvents = value;
			}	
		}

		private bool _isDeleted = false;
		/// <summary>
		/// Gets a value indicating if object has been <see cref="MarkToDelete"/>. ReadOnly.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public virtual bool IsDeleted
		{
			get { return this._isDeleted; }
		}


		private bool _isDirty = false;
		/// <summary>
		///	Gets a value indicating  if the object has been modified from its original state.
		/// </summary>
		///<value>True if object has been modified from its original state; otherwise False;</value>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public virtual bool IsDirty
		{
			get { return this._isDirty; }
		}
		

		private bool _isNew = true;
		/// <summary>
		///	Gets a value indicating if the object is new.
		/// </summary>
		///<value>True if objectis new; otherwise False;</value>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public virtual bool IsNew
		{
			get { return this._isNew; }
			set { this._isNew = value; }
		}

		/// <summary>
		///		The name of the underlying database table.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public string ViewName
		{
			get { return "vw_LeadsWithAllStatus"; }
		}

		
		#endregion
		
		#region Methods	
		
		/// <summary>
		/// Accepts the changes made to this object by setting each flags to false.
		/// </summary>
		public virtual void AcceptChanges()
		{
			this._isDeleted = false;
			this._isDirty = false;
			this._isNew = false;
			OnPropertyChanged(string.Empty);
		}
		
		
		///<summary>
		///  Revert all changes and restore original values.
		///  Currently not supported.
		///</summary>
		/// <exception cref="NotSupportedException">This method is not currently supported and always throws this exception.</exception>
		public virtual void CancelChanges()
		{
			throw new NotSupportedException("Method currently not Supported.");
		}
		
		///<summary>
		///   Marks entity to be deleted.
		///</summary>
		public virtual void MarkToDelete()
		{
			this._isDeleted = true;
		}
		
		#region ICloneable Members
		///<summary>
		///  Returns a Typed VwLeadsWithAllStatusBase Entity 
		///</summary>
		public virtual VwLeadsWithAllStatusBase Copy()
		{
			//shallow copy entity
			VwLeadsWithAllStatus copy = new VwLeadsWithAllStatus();
				copy.LeadStatus = this.LeadStatus;
				copy.Leadid = this.Leadid;
				copy.CreatedTime = this.CreatedTime;
				copy.Email = this.Email;
				copy.FirstName = this.FirstName;
				copy.LastName = this.LastName;
				copy.IfNoLongerInterested = this.IfNoLongerInterested;
				copy.LastActivityTime = this.LastActivityTime;
				copy.LastVisitedTime = this.LastVisitedTime;
				copy.LeadOwner = this.LeadOwner;
				copy.Rating = this.Rating;
				copy.State = this.State;
				copy.TimeZone = this.TimeZone;
				copy.Phone = this.Phone;
				copy.LeadHoldDts = this.LeadHoldDts;
				copy.LeadActionDts = this.LeadActionDts;
			copy.AcceptChanges();
			return (VwLeadsWithAllStatus)copy;
		}
		
		///<summary>
		/// ICloneable.Clone() Member, returns the Deep Copy of this entity.
		///</summary>
		public object Clone(){
			return this.Copy();
		}
		
		///<summary>
		/// Returns a deep copy of the child collection object passed in.
		///</summary>
		public static object MakeCopyOf(object x)
		{
			if (x is ICloneable)
			{
				// Return a deep copy of the object
				return ((ICloneable)x).Clone();
			}
			else
				throw new System.NotSupportedException("Object Does Not Implement the ICloneable Interface.");
		}
		#endregion
		
		
		///<summary>
		/// Returns a value indicating whether this instance is equal to a specified object.
		///</summary>
		///<param name="toObject">An object to compare to this instance.</param>
		///<returns>true if toObject is a <see cref="VwLeadsWithAllStatusBase"/> and has the same value as this instance; otherwise, false.</returns>
		public virtual bool Equals(VwLeadsWithAllStatusBase toObject)
		{
			if (toObject == null)
				return false;
			return Equals(this, toObject);
		}
		
		
		///<summary>
		/// Determines whether the specified <see cref="VwLeadsWithAllStatusBase"/> instances are considered equal.
		///</summary>
		///<param name="Object1">The first <see cref="VwLeadsWithAllStatusBase"/> to compare.</param>
		///<param name="Object2">The second <see cref="VwLeadsWithAllStatusBase"/> to compare. </param>
		///<returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
		public static bool Equals(VwLeadsWithAllStatusBase Object1, VwLeadsWithAllStatusBase Object2)
		{
			// both are null
			if (Object1 == null && Object2 == null)
				return true;

			// one or the other is null, but not both
			if (Object1 == null ^ Object2 == null)
				return false;

			bool equal = true;
			if (Object1.LeadStatus != null && Object2.LeadStatus != null )
			{
				if (Object1.LeadStatus != Object2.LeadStatus)
					equal = false;
			}
			else if (Object1.LeadStatus == null ^ Object1.LeadStatus == null )
			{
				equal = false;
			}
			if (Object1.Leadid != null && Object2.Leadid != null )
			{
				if (Object1.Leadid != Object2.Leadid)
					equal = false;
			}
			else if (Object1.Leadid == null ^ Object1.Leadid == null )
			{
				equal = false;
			}
			if (Object1.CreatedTime != null && Object2.CreatedTime != null )
			{
				if (Object1.CreatedTime != Object2.CreatedTime)
					equal = false;
			}
			else if (Object1.CreatedTime == null ^ Object1.CreatedTime == null )
			{
				equal = false;
			}
			if (Object1.Email != null && Object2.Email != null )
			{
				if (Object1.Email != Object2.Email)
					equal = false;
			}
			else if (Object1.Email == null ^ Object1.Email == null )
			{
				equal = false;
			}
			if (Object1.FirstName != null && Object2.FirstName != null )
			{
				if (Object1.FirstName != Object2.FirstName)
					equal = false;
			}
			else if (Object1.FirstName == null ^ Object1.FirstName == null )
			{
				equal = false;
			}
			if (Object1.LastName != null && Object2.LastName != null )
			{
				if (Object1.LastName != Object2.LastName)
					equal = false;
			}
			else if (Object1.LastName == null ^ Object1.LastName == null )
			{
				equal = false;
			}
			if (Object1.IfNoLongerInterested != null && Object2.IfNoLongerInterested != null )
			{
				if (Object1.IfNoLongerInterested != Object2.IfNoLongerInterested)
					equal = false;
			}
			else if (Object1.IfNoLongerInterested == null ^ Object1.IfNoLongerInterested == null )
			{
				equal = false;
			}
			if (Object1.LastActivityTime != null && Object2.LastActivityTime != null )
			{
				if (Object1.LastActivityTime != Object2.LastActivityTime)
					equal = false;
			}
			else if (Object1.LastActivityTime == null ^ Object1.LastActivityTime == null )
			{
				equal = false;
			}
			if (Object1.LastVisitedTime != null && Object2.LastVisitedTime != null )
			{
				if (Object1.LastVisitedTime != Object2.LastVisitedTime)
					equal = false;
			}
			else if (Object1.LastVisitedTime == null ^ Object1.LastVisitedTime == null )
			{
				equal = false;
			}
			if (Object1.LeadOwner != null && Object2.LeadOwner != null )
			{
				if (Object1.LeadOwner != Object2.LeadOwner)
					equal = false;
			}
			else if (Object1.LeadOwner == null ^ Object1.LeadOwner == null )
			{
				equal = false;
			}
			if (Object1.Rating != null && Object2.Rating != null )
			{
				if (Object1.Rating != Object2.Rating)
					equal = false;
			}
			else if (Object1.Rating == null ^ Object1.Rating == null )
			{
				equal = false;
			}
			if (Object1.State != null && Object2.State != null )
			{
				if (Object1.State != Object2.State)
					equal = false;
			}
			else if (Object1.State == null ^ Object1.State == null )
			{
				equal = false;
			}
			if (Object1.TimeZone != null && Object2.TimeZone != null )
			{
				if (Object1.TimeZone != Object2.TimeZone)
					equal = false;
			}
			else if (Object1.TimeZone == null ^ Object1.TimeZone == null )
			{
				equal = false;
			}
			if (Object1.Phone != null && Object2.Phone != null )
			{
				if (Object1.Phone != Object2.Phone)
					equal = false;
			}
			else if (Object1.Phone == null ^ Object1.Phone == null )
			{
				equal = false;
			}
			if (Object1.LeadHoldDts != null && Object2.LeadHoldDts != null )
			{
				if (Object1.LeadHoldDts != Object2.LeadHoldDts)
					equal = false;
			}
			else if (Object1.LeadHoldDts == null ^ Object1.LeadHoldDts == null )
			{
				equal = false;
			}
			if (Object1.LeadActionDts != null && Object2.LeadActionDts != null )
			{
				if (Object1.LeadActionDts != Object2.LeadActionDts)
					equal = false;
			}
			else if (Object1.LeadActionDts == null ^ Object1.LeadActionDts == null )
			{
				equal = false;
			}
			return equal;
		}
		
		#endregion
		
		#region IComparable Members
		///<summary>
		/// Compares this instance to a specified object and returns an indication of their relative values.
		///<param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
		///</summary>
		///<returns>A signed integer that indicates the relative order of this instance and obj.</returns>
		public virtual int CompareTo(object obj)
		{
			throw new NotImplementedException();
		}
	
		#endregion
		
		#region INotifyPropertyChanged Members
		
		/// <summary>
      /// Event to indicate that a property has changed.
      /// </summary>
		[field:NonSerialized]
		public event PropertyChangedEventHandler PropertyChanged;

		/// <summary>
      /// Called when a property is changed
      /// </summary>
      /// <param name="propertyName">The name of the property that has changed.</param>
		protected virtual void OnPropertyChanged(string propertyName)
		{ 
			OnPropertyChanged(new PropertyChangedEventArgs(propertyName));
		}
		
		/// <summary>
      /// Called when a property is changed
      /// </summary>
      /// <param name="e">PropertyChangedEventArgs</param>
		protected virtual void OnPropertyChanged(PropertyChangedEventArgs e)
		{
			if (!SuppressEntityEvents)
			{
				if (null != PropertyChanged)
				{
					PropertyChanged(this, e);
				}
			}
		}
		
		#endregion
				
		/// <summary>
		/// Gets the property value by name.
		/// </summary>
		/// <param name="entity">The entity.</param>
		/// <param name="propertyName">Name of the property.</param>
		/// <returns></returns>
		public static object GetPropertyValueByName(VwLeadsWithAllStatus entity, string propertyName)
		{
			switch (propertyName)
			{
				case "LeadStatus":
					return entity.LeadStatus;
				case "Leadid":
					return entity.Leadid;
				case "CreatedTime":
					return entity.CreatedTime;
				case "Email":
					return entity.Email;
				case "FirstName":
					return entity.FirstName;
				case "LastName":
					return entity.LastName;
				case "IfNoLongerInterested":
					return entity.IfNoLongerInterested;
				case "LastActivityTime":
					return entity.LastActivityTime;
				case "LastVisitedTime":
					return entity.LastVisitedTime;
				case "LeadOwner":
					return entity.LeadOwner;
				case "Rating":
					return entity.Rating;
				case "State":
					return entity.State;
				case "TimeZone":
					return entity.TimeZone;
				case "Phone":
					return entity.Phone;
				case "LeadHoldDts":
					return entity.LeadHoldDts;
				case "LeadActionDts":
					return entity.LeadActionDts;
			}
			return null;
		}
				
		/// <summary>
		/// Gets the property value by name.
		/// </summary>
		/// <param name="propertyName">Name of the property.</param>
		/// <returns></returns>
		public object GetPropertyValueByName(string propertyName)
		{			
			return GetPropertyValueByName(this as VwLeadsWithAllStatus, propertyName);
		}
		
		///<summary>
		/// Returns a String that represents the current object.
		///</summary>
		public override string ToString()
		{
			return string.Format(System.Globalization.CultureInfo.InvariantCulture,
				"{17}{16}- LeadStatus: {0}{16}- Leadid: {1}{16}- CreatedTime: {2}{16}- Email: {3}{16}- FirstName: {4}{16}- LastName: {5}{16}- IfNoLongerInterested: {6}{16}- LastActivityTime: {7}{16}- LastVisitedTime: {8}{16}- LeadOwner: {9}{16}- Rating: {10}{16}- State: {11}{16}- TimeZone: {12}{16}- Phone: {13}{16}- LeadHoldDts: {14}{16}- LeadActionDts: {15}{16}", 
				(this.LeadStatus == null) ? string.Empty : this.LeadStatus.ToString(),
			     
				(this.Leadid == null) ? string.Empty : this.Leadid.ToString(),
			     
				(this.CreatedTime == null) ? string.Empty : this.CreatedTime.ToString(),
			     
				(this.Email == null) ? string.Empty : this.Email.ToString(),
			     
				(this.FirstName == null) ? string.Empty : this.FirstName.ToString(),
			     
				(this.LastName == null) ? string.Empty : this.LastName.ToString(),
			     
				(this.IfNoLongerInterested == null) ? string.Empty : this.IfNoLongerInterested.ToString(),
			     
				(this.LastActivityTime == null) ? string.Empty : this.LastActivityTime.ToString(),
			     
				(this.LastVisitedTime == null) ? string.Empty : this.LastVisitedTime.ToString(),
			     
				(this.LeadOwner == null) ? string.Empty : this.LeadOwner.ToString(),
			     
				(this.Rating == null) ? string.Empty : this.Rating.ToString(),
			     
				(this.State == null) ? string.Empty : this.State.ToString(),
			     
				(this.TimeZone == null) ? string.Empty : this.TimeZone.ToString(),
			     
				(this.Phone == null) ? string.Empty : this.Phone.ToString(),
			     
				(this.LeadHoldDts == null) ? string.Empty : this.LeadHoldDts.ToString(),
			     
				(this.LeadActionDts == null) ? string.Empty : this.LeadActionDts.ToString(),
			     
				System.Environment.NewLine, 
				this.GetType());
		}
	
	}//End Class
	
	
	/// <summary>
	/// Enumerate the VwLeadsWithAllStatus columns.
	/// </summary>
	[Serializable]
	public enum VwLeadsWithAllStatusColumn
	{
		/// <summary>
		/// Lead Status : 
		/// </summary>
		[EnumTextValue("Lead Status")]
		[ColumnEnum("Lead Status", typeof(System.String), System.Data.DbType.String, false, false, true, 255)]
		LeadStatus,
		/// <summary>
		/// LEADID : 
		/// </summary>
		[EnumTextValue("LEADID")]
		[ColumnEnum("LEADID", typeof(System.String), System.Data.DbType.String, false, false, true, 255)]
		Leadid,
		/// <summary>
		/// Created Time : 
		/// </summary>
		[EnumTextValue("Created Time")]
		[ColumnEnum("Created Time", typeof(System.DateTime), System.Data.DbType.DateTime, false, false, true)]
		CreatedTime,
		/// <summary>
		/// Email : 
		/// </summary>
		[EnumTextValue("Email")]
		[ColumnEnum("Email", typeof(System.String), System.Data.DbType.String, false, false, true, 255)]
		Email,
		/// <summary>
		/// First Name : 
		/// </summary>
		[EnumTextValue("First Name")]
		[ColumnEnum("First Name", typeof(System.String), System.Data.DbType.String, false, false, true, 255)]
		FirstName,
		/// <summary>
		/// Last Name : 
		/// </summary>
		[EnumTextValue("Last Name")]
		[ColumnEnum("Last Name", typeof(System.String), System.Data.DbType.String, false, false, true, 255)]
		LastName,
		/// <summary>
		/// If No Longer Interested : 
		/// </summary>
		[EnumTextValue("If No Longer Interested")]
		[ColumnEnum("If No Longer Interested", typeof(System.String), System.Data.DbType.String, false, false, true, 255)]
		IfNoLongerInterested,
		/// <summary>
		/// Last Activity Time : 
		/// </summary>
		[EnumTextValue("Last Activity Time")]
		[ColumnEnum("Last Activity Time", typeof(System.DateTime), System.Data.DbType.DateTime, false, false, true)]
		LastActivityTime,
		/// <summary>
		/// Last Visited Time : 
		/// </summary>
		[EnumTextValue("Last Visited Time")]
		[ColumnEnum("Last Visited Time", typeof(System.String), System.Data.DbType.String, false, false, true, 255)]
		LastVisitedTime,
		/// <summary>
		/// Lead Owner : 
		/// </summary>
		[EnumTextValue("Lead Owner")]
		[ColumnEnum("Lead Owner", typeof(System.String), System.Data.DbType.String, false, false, true, 255)]
		LeadOwner,
		/// <summary>
		/// Rating : 
		/// </summary>
		[EnumTextValue("Rating")]
		[ColumnEnum("Rating", typeof(System.String), System.Data.DbType.String, false, false, true, 255)]
		Rating,
		/// <summary>
		/// State : 
		/// </summary>
		[EnumTextValue("State")]
		[ColumnEnum("State", typeof(System.String), System.Data.DbType.String, false, false, true, 255)]
		State,
		/// <summary>
		/// Time Zone : 
		/// </summary>
		[EnumTextValue("Time Zone")]
		[ColumnEnum("Time Zone", typeof(System.String), System.Data.DbType.String, false, false, true, 255)]
		TimeZone,
		/// <summary>
		/// Phone : 
		/// </summary>
		[EnumTextValue("Phone")]
		[ColumnEnum("Phone", typeof(System.String), System.Data.DbType.String, false, false, true, 255)]
		Phone,
		/// <summary>
		/// LeadHoldDts : 
		/// </summary>
		[EnumTextValue("LeadHoldDts")]
		[ColumnEnum("LeadHoldDts", typeof(System.DateTime), System.Data.DbType.DateTime, false, false, true)]
		LeadHoldDts,
		/// <summary>
		/// LeadActionDts : 
		/// </summary>
		[EnumTextValue("LeadActionDts")]
		[ColumnEnum("LeadActionDts", typeof(System.DateTime), System.Data.DbType.DateTime, false, false, true)]
		LeadActionDts
	}//End enum

} // end namespace
