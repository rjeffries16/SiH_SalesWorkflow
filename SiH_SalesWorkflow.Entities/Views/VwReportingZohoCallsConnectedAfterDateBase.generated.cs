/*
	File generated by NetTiers templates [www.nettiers.net]
	Generated on : Thursday, May 12, 2016
	Important: Do not modify this file. Edit the file VwReportingZohoCallsConnectedAfterDate.cs instead.
*/
#region Using Directives
using System;
using System.ComponentModel;
using System.Collections;
using System.Runtime.Serialization;
using System.Xml.Serialization;
#endregion

namespace SiH_SalesWorkflow.Entities
{
	///<summary>
	/// An object representation of the 'vw_REPORTING_ZohoCallsConnectedAfterDate' view. [No description found in the database]	
	///</summary>
	[Serializable]
	[CLSCompliant(true)]
	[ToolboxItem("VwReportingZohoCallsConnectedAfterDateBase")]
	public abstract partial class VwReportingZohoCallsConnectedAfterDateBase : System.IComparable, System.ICloneable, INotifyPropertyChanged
	{
		
		#region Variable Declarations
		
		/// <summary>
		/// ACCOUNTID : 
		/// </summary>
		private System.String		  _accountid = null;
		
		/// <summary>
		/// Billable : 
		/// </summary>
		private System.String		  _billable = null;
		
		/// <summary>
		/// Call Duration : 
		/// </summary>
		private System.String		  _callDuration = null;
		
		/// <summary>
		/// Call Duration (in minutes) : 
		/// </summary>
		private System.Double?		  _safeNameCallDurationInMinutes = null;
		
		/// <summary>
		/// Call Duration (in seconds) : 
		/// </summary>
		private System.Double?		  _safeNameCallDurationInSeconds = null;
		
		/// <summary>
		/// Call Owner : 
		/// </summary>
		private System.String		  _callOwner = null;
		
		/// <summary>
		/// Call Owner Id : 
		/// </summary>
		private System.String		  _callOwnerId = null;
		
		/// <summary>
		/// Call Purpose : 
		/// </summary>
		private System.String		  _callPurpose = null;
		
		/// <summary>
		/// Call Result : 
		/// </summary>
		private System.String		  _callResult = null;
		
		/// <summary>
		/// Call Start Time : 
		/// </summary>
		private System.DateTime?		  _callStartTime = null;
		
		/// <summary>
		/// Call Type : 
		/// </summary>
		private System.String		  _callType = null;
		
		/// <summary>
		/// ContactID : 
		/// </summary>
		private System.String		  _contactId = null;
		
		/// <summary>
		/// CreatedBy : 
		/// </summary>
		private System.String		  _createdBy = null;
		
		/// <summary>
		/// Created Time : 
		/// </summary>
		private System.DateTime?		  _createdTime = null;
		
		/// <summary>
		/// LEADID : 
		/// </summary>
		private System.String		  _leadid = null;
		
		/// <summary>
		/// Modified Time : 
		/// </summary>
		private System.DateTime?		  _modifiedTime = null;
		
		/// <summary>
		/// POTENTIALID : 
		/// </summary>
		private System.String		  _potentialid = null;
		
		/// <summary>
		/// RELATED To : 
		/// </summary>
		private System.String		  _relatedTo = null;
		
		/// <summary>
		/// SEMODULE : 
		/// </summary>
		private System.String		  _semodule = null;
		
		/// <summary>
		/// Subject : 
		/// </summary>
		private System.String		  _subject = null;
		
		/// <summary>
		/// TASKID : 
		/// </summary>
		private System.String		  _taskid = null;
		
		/// <summary>
		/// Who Id Id : 
		/// </summary>
		private System.String		  _whoIdId = null;
		
		/// <summary>
		/// CallPK : 
		/// </summary>
		private System.Int64		  _callPk = (long)0;
		
		/// <summary>
		/// Object that contains data to associate with this object
		/// </summary>
		private object _tag;
		
		/// <summary>
		/// Suppresses Entity Events from Firing, 
		/// useful when loading the entities from the database.
		/// </summary>
	    [NonSerialized] 
		private bool suppressEntityEvents = false;
		
		#endregion Variable Declarations
		
		#region Constructors
		///<summary>
		/// Creates a new <see cref="VwReportingZohoCallsConnectedAfterDateBase"/> instance.
		///</summary>
		public VwReportingZohoCallsConnectedAfterDateBase()
		{
		}		
		
		///<summary>
		/// Creates a new <see cref="VwReportingZohoCallsConnectedAfterDateBase"/> instance.
		///</summary>
		///<param name="_accountid"></param>
		///<param name="_billable"></param>
		///<param name="_callDuration"></param>
		///<param name="_safeNameCallDurationInMinutes"></param>
		///<param name="_safeNameCallDurationInSeconds"></param>
		///<param name="_callOwner"></param>
		///<param name="_callOwnerId"></param>
		///<param name="_callPurpose"></param>
		///<param name="_callResult"></param>
		///<param name="_callStartTime"></param>
		///<param name="_callType"></param>
		///<param name="_contactId"></param>
		///<param name="_createdBy"></param>
		///<param name="_createdTime"></param>
		///<param name="_leadid"></param>
		///<param name="_modifiedTime"></param>
		///<param name="_potentialid"></param>
		///<param name="_relatedTo"></param>
		///<param name="_semodule"></param>
		///<param name="_subject"></param>
		///<param name="_taskid"></param>
		///<param name="_whoIdId"></param>
		///<param name="_callPk"></param>
		public VwReportingZohoCallsConnectedAfterDateBase(System.String _accountid, System.String _billable, System.String _callDuration, System.Double? _safeNameCallDurationInMinutes, System.Double? _safeNameCallDurationInSeconds, System.String _callOwner, System.String _callOwnerId, System.String _callPurpose, System.String _callResult, System.DateTime? _callStartTime, System.String _callType, System.String _contactId, System.String _createdBy, System.DateTime? _createdTime, System.String _leadid, System.DateTime? _modifiedTime, System.String _potentialid, System.String _relatedTo, System.String _semodule, System.String _subject, System.String _taskid, System.String _whoIdId, System.Int64 _callPk)
		{
			this._accountid = _accountid;
			this._billable = _billable;
			this._callDuration = _callDuration;
			this._safeNameCallDurationInMinutes = _safeNameCallDurationInMinutes;
			this._safeNameCallDurationInSeconds = _safeNameCallDurationInSeconds;
			this._callOwner = _callOwner;
			this._callOwnerId = _callOwnerId;
			this._callPurpose = _callPurpose;
			this._callResult = _callResult;
			this._callStartTime = _callStartTime;
			this._callType = _callType;
			this._contactId = _contactId;
			this._createdBy = _createdBy;
			this._createdTime = _createdTime;
			this._leadid = _leadid;
			this._modifiedTime = _modifiedTime;
			this._potentialid = _potentialid;
			this._relatedTo = _relatedTo;
			this._semodule = _semodule;
			this._subject = _subject;
			this._taskid = _taskid;
			this._whoIdId = _whoIdId;
			this._callPk = _callPk;
		}
		
		///<summary>
		/// A simple factory method to create a new <see cref="VwReportingZohoCallsConnectedAfterDate"/> instance.
		///</summary>
		///<param name="_accountid"></param>
		///<param name="_billable"></param>
		///<param name="_callDuration"></param>
		///<param name="_safeNameCallDurationInMinutes"></param>
		///<param name="_safeNameCallDurationInSeconds"></param>
		///<param name="_callOwner"></param>
		///<param name="_callOwnerId"></param>
		///<param name="_callPurpose"></param>
		///<param name="_callResult"></param>
		///<param name="_callStartTime"></param>
		///<param name="_callType"></param>
		///<param name="_contactId"></param>
		///<param name="_createdBy"></param>
		///<param name="_createdTime"></param>
		///<param name="_leadid"></param>
		///<param name="_modifiedTime"></param>
		///<param name="_potentialid"></param>
		///<param name="_relatedTo"></param>
		///<param name="_semodule"></param>
		///<param name="_subject"></param>
		///<param name="_taskid"></param>
		///<param name="_whoIdId"></param>
		///<param name="_callPk"></param>
		public static VwReportingZohoCallsConnectedAfterDate CreateVwReportingZohoCallsConnectedAfterDate(System.String _accountid, System.String _billable, System.String _callDuration, System.Double? _safeNameCallDurationInMinutes, System.Double? _safeNameCallDurationInSeconds, System.String _callOwner, System.String _callOwnerId, System.String _callPurpose, System.String _callResult, System.DateTime? _callStartTime, System.String _callType, System.String _contactId, System.String _createdBy, System.DateTime? _createdTime, System.String _leadid, System.DateTime? _modifiedTime, System.String _potentialid, System.String _relatedTo, System.String _semodule, System.String _subject, System.String _taskid, System.String _whoIdId, System.Int64 _callPk)
		{
			VwReportingZohoCallsConnectedAfterDate newVwReportingZohoCallsConnectedAfterDate = new VwReportingZohoCallsConnectedAfterDate();
			newVwReportingZohoCallsConnectedAfterDate.Accountid = _accountid;
			newVwReportingZohoCallsConnectedAfterDate.Billable = _billable;
			newVwReportingZohoCallsConnectedAfterDate.CallDuration = _callDuration;
			newVwReportingZohoCallsConnectedAfterDate.SafeNameCallDurationInMinutes = _safeNameCallDurationInMinutes;
			newVwReportingZohoCallsConnectedAfterDate.SafeNameCallDurationInSeconds = _safeNameCallDurationInSeconds;
			newVwReportingZohoCallsConnectedAfterDate.CallOwner = _callOwner;
			newVwReportingZohoCallsConnectedAfterDate.CallOwnerId = _callOwnerId;
			newVwReportingZohoCallsConnectedAfterDate.CallPurpose = _callPurpose;
			newVwReportingZohoCallsConnectedAfterDate.CallResult = _callResult;
			newVwReportingZohoCallsConnectedAfterDate.CallStartTime = _callStartTime;
			newVwReportingZohoCallsConnectedAfterDate.CallType = _callType;
			newVwReportingZohoCallsConnectedAfterDate.ContactId = _contactId;
			newVwReportingZohoCallsConnectedAfterDate.CreatedBy = _createdBy;
			newVwReportingZohoCallsConnectedAfterDate.CreatedTime = _createdTime;
			newVwReportingZohoCallsConnectedAfterDate.Leadid = _leadid;
			newVwReportingZohoCallsConnectedAfterDate.ModifiedTime = _modifiedTime;
			newVwReportingZohoCallsConnectedAfterDate.Potentialid = _potentialid;
			newVwReportingZohoCallsConnectedAfterDate.RelatedTo = _relatedTo;
			newVwReportingZohoCallsConnectedAfterDate.Semodule = _semodule;
			newVwReportingZohoCallsConnectedAfterDate.Subject = _subject;
			newVwReportingZohoCallsConnectedAfterDate.Taskid = _taskid;
			newVwReportingZohoCallsConnectedAfterDate.WhoIdId = _whoIdId;
			newVwReportingZohoCallsConnectedAfterDate.CallPk = _callPk;
			return newVwReportingZohoCallsConnectedAfterDate;
		}
				
		#endregion Constructors
		
		#region Properties	
		/// <summary>
		/// 	Gets or Sets the ACCOUNTID property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String Accountid
		{
			get
			{
				return this._accountid; 
			}
			set
			{
				if (_accountid == value)
					return;
					
				this._accountid = value;
				this._isDirty = true;
				
				OnPropertyChanged("Accountid");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the Billable property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String Billable
		{
			get
			{
				return this._billable; 
			}
			set
			{
				if (_billable == value)
					return;
					
				this._billable = value;
				this._isDirty = true;
				
				OnPropertyChanged("Billable");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the Call Duration property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String CallDuration
		{
			get
			{
				return this._callDuration; 
			}
			set
			{
				if (_callDuration == value)
					return;
					
				this._callDuration = value;
				this._isDirty = true;
				
				OnPropertyChanged("CallDuration");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the Call Duration (in minutes) property. 
		///		
		/// </summary>
		/// <value>This type is float</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0f. It is up to the developer
		/// to check the value of IsSafeNameCallDurationInMinutesNull() and perform business logic appropriately.
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Double? SafeNameCallDurationInMinutes
		{
			get
			{
				return this._safeNameCallDurationInMinutes; 
			}
			set
			{
				if (_safeNameCallDurationInMinutes == value && SafeNameCallDurationInMinutes != null )
					return;
					
				this._safeNameCallDurationInMinutes = value;
				this._isDirty = true;
				
				OnPropertyChanged("SafeNameCallDurationInMinutes");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the Call Duration (in seconds) property. 
		///		
		/// </summary>
		/// <value>This type is float</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0f. It is up to the developer
		/// to check the value of IsSafeNameCallDurationInSecondsNull() and perform business logic appropriately.
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Double? SafeNameCallDurationInSeconds
		{
			get
			{
				return this._safeNameCallDurationInSeconds; 
			}
			set
			{
				if (_safeNameCallDurationInSeconds == value && SafeNameCallDurationInSeconds != null )
					return;
					
				this._safeNameCallDurationInSeconds = value;
				this._isDirty = true;
				
				OnPropertyChanged("SafeNameCallDurationInSeconds");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the Call Owner property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String CallOwner
		{
			get
			{
				return this._callOwner; 
			}
			set
			{
				if (_callOwner == value)
					return;
					
				this._callOwner = value;
				this._isDirty = true;
				
				OnPropertyChanged("CallOwner");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the Call Owner Id property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String CallOwnerId
		{
			get
			{
				return this._callOwnerId; 
			}
			set
			{
				if (_callOwnerId == value)
					return;
					
				this._callOwnerId = value;
				this._isDirty = true;
				
				OnPropertyChanged("CallOwnerId");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the Call Purpose property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String CallPurpose
		{
			get
			{
				return this._callPurpose; 
			}
			set
			{
				if (_callPurpose == value)
					return;
					
				this._callPurpose = value;
				this._isDirty = true;
				
				OnPropertyChanged("CallPurpose");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the Call Result property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String CallResult
		{
			get
			{
				return this._callResult; 
			}
			set
			{
				if (_callResult == value)
					return;
					
				this._callResult = value;
				this._isDirty = true;
				
				OnPropertyChanged("CallResult");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the Call Start Time property. 
		///		
		/// </summary>
		/// <value>This type is datetime</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return DateTime.MinValue. It is up to the developer
		/// to check the value of IsCallStartTimeNull() and perform business logic appropriately.
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.DateTime? CallStartTime
		{
			get
			{
				return this._callStartTime; 
			}
			set
			{
				if (_callStartTime == value && CallStartTime != null )
					return;
					
				this._callStartTime = value;
				this._isDirty = true;
				
				OnPropertyChanged("CallStartTime");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the Call Type property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String CallType
		{
			get
			{
				return this._callType; 
			}
			set
			{
				if (_callType == value)
					return;
					
				this._callType = value;
				this._isDirty = true;
				
				OnPropertyChanged("CallType");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the ContactID property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String ContactId
		{
			get
			{
				return this._contactId; 
			}
			set
			{
				if (_contactId == value)
					return;
					
				this._contactId = value;
				this._isDirty = true;
				
				OnPropertyChanged("ContactId");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the CreatedBy property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String CreatedBy
		{
			get
			{
				return this._createdBy; 
			}
			set
			{
				if (_createdBy == value)
					return;
					
				this._createdBy = value;
				this._isDirty = true;
				
				OnPropertyChanged("CreatedBy");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the Created Time property. 
		///		
		/// </summary>
		/// <value>This type is datetime</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return DateTime.MinValue. It is up to the developer
		/// to check the value of IsCreatedTimeNull() and perform business logic appropriately.
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.DateTime? CreatedTime
		{
			get
			{
				return this._createdTime; 
			}
			set
			{
				if (_createdTime == value && CreatedTime != null )
					return;
					
				this._createdTime = value;
				this._isDirty = true;
				
				OnPropertyChanged("CreatedTime");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the LEADID property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String Leadid
		{
			get
			{
				return this._leadid; 
			}
			set
			{
				if (_leadid == value)
					return;
					
				this._leadid = value;
				this._isDirty = true;
				
				OnPropertyChanged("Leadid");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the Modified Time property. 
		///		
		/// </summary>
		/// <value>This type is datetime</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return DateTime.MinValue. It is up to the developer
		/// to check the value of IsModifiedTimeNull() and perform business logic appropriately.
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.DateTime? ModifiedTime
		{
			get
			{
				return this._modifiedTime; 
			}
			set
			{
				if (_modifiedTime == value && ModifiedTime != null )
					return;
					
				this._modifiedTime = value;
				this._isDirty = true;
				
				OnPropertyChanged("ModifiedTime");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the POTENTIALID property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String Potentialid
		{
			get
			{
				return this._potentialid; 
			}
			set
			{
				if (_potentialid == value)
					return;
					
				this._potentialid = value;
				this._isDirty = true;
				
				OnPropertyChanged("Potentialid");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the RELATED To property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String RelatedTo
		{
			get
			{
				return this._relatedTo; 
			}
			set
			{
				if (_relatedTo == value)
					return;
					
				this._relatedTo = value;
				this._isDirty = true;
				
				OnPropertyChanged("RelatedTo");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the SEMODULE property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String Semodule
		{
			get
			{
				return this._semodule; 
			}
			set
			{
				if (_semodule == value)
					return;
					
				this._semodule = value;
				this._isDirty = true;
				
				OnPropertyChanged("Semodule");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the Subject property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String Subject
		{
			get
			{
				return this._subject; 
			}
			set
			{
				if (_subject == value)
					return;
					
				this._subject = value;
				this._isDirty = true;
				
				OnPropertyChanged("Subject");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the TASKID property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String Taskid
		{
			get
			{
				return this._taskid; 
			}
			set
			{
				if (_taskid == value)
					return;
					
				this._taskid = value;
				this._isDirty = true;
				
				OnPropertyChanged("Taskid");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the Who Id Id property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String WhoIdId
		{
			get
			{
				return this._whoIdId; 
			}
			set
			{
				if (_whoIdId == value)
					return;
					
				this._whoIdId = value;
				this._isDirty = true;
				
				OnPropertyChanged("WhoIdId");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the CallPK property. 
		///		
		/// </summary>
		/// <value>This type is bigint</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Int64 CallPk
		{
			get
			{
				return this._callPk; 
			}
			set
			{
				if (_callPk == value)
					return;
					
				this._callPk = value;
				this._isDirty = true;
				
				OnPropertyChanged("CallPk");
			}
		}
		
		
		/// <summary>
		///     Gets or sets the object that contains supplemental data about this object.
		/// </summary>
		/// <value>Object</value>
		[System.ComponentModel.Bindable(false)]
		[LocalizableAttribute(false)]
		[DescriptionAttribute("Object containing data to be associated with this object")]
		public virtual object Tag
		{
			get
			{
				return this._tag;
			}
			set
			{
				if (this._tag == value)
					return;
		
				this._tag = value;
			}
		}
	
		/// <summary>
		/// Determines whether this entity is to suppress events while set to true.
		/// </summary>
		[System.ComponentModel.Bindable(false)]
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public bool SuppressEntityEvents
		{	
			get
			{
				return suppressEntityEvents;
			}
			set
			{
				suppressEntityEvents = value;
			}	
		}

		private bool _isDeleted = false;
		/// <summary>
		/// Gets a value indicating if object has been <see cref="MarkToDelete"/>. ReadOnly.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public virtual bool IsDeleted
		{
			get { return this._isDeleted; }
		}


		private bool _isDirty = false;
		/// <summary>
		///	Gets a value indicating  if the object has been modified from its original state.
		/// </summary>
		///<value>True if object has been modified from its original state; otherwise False;</value>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public virtual bool IsDirty
		{
			get { return this._isDirty; }
		}
		

		private bool _isNew = true;
		/// <summary>
		///	Gets a value indicating if the object is new.
		/// </summary>
		///<value>True if objectis new; otherwise False;</value>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public virtual bool IsNew
		{
			get { return this._isNew; }
			set { this._isNew = value; }
		}

		/// <summary>
		///		The name of the underlying database table.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public string ViewName
		{
			get { return "vw_REPORTING_ZohoCallsConnectedAfterDate"; }
		}

		
		#endregion
		
		#region Methods	
		
		/// <summary>
		/// Accepts the changes made to this object by setting each flags to false.
		/// </summary>
		public virtual void AcceptChanges()
		{
			this._isDeleted = false;
			this._isDirty = false;
			this._isNew = false;
			OnPropertyChanged(string.Empty);
		}
		
		
		///<summary>
		///  Revert all changes and restore original values.
		///  Currently not supported.
		///</summary>
		/// <exception cref="NotSupportedException">This method is not currently supported and always throws this exception.</exception>
		public virtual void CancelChanges()
		{
			throw new NotSupportedException("Method currently not Supported.");
		}
		
		///<summary>
		///   Marks entity to be deleted.
		///</summary>
		public virtual void MarkToDelete()
		{
			this._isDeleted = true;
		}
		
		#region ICloneable Members
		///<summary>
		///  Returns a Typed VwReportingZohoCallsConnectedAfterDateBase Entity 
		///</summary>
		public virtual VwReportingZohoCallsConnectedAfterDateBase Copy()
		{
			//shallow copy entity
			VwReportingZohoCallsConnectedAfterDate copy = new VwReportingZohoCallsConnectedAfterDate();
				copy.Accountid = this.Accountid;
				copy.Billable = this.Billable;
				copy.CallDuration = this.CallDuration;
				copy.SafeNameCallDurationInMinutes = this.SafeNameCallDurationInMinutes;
				copy.SafeNameCallDurationInSeconds = this.SafeNameCallDurationInSeconds;
				copy.CallOwner = this.CallOwner;
				copy.CallOwnerId = this.CallOwnerId;
				copy.CallPurpose = this.CallPurpose;
				copy.CallResult = this.CallResult;
				copy.CallStartTime = this.CallStartTime;
				copy.CallType = this.CallType;
				copy.ContactId = this.ContactId;
				copy.CreatedBy = this.CreatedBy;
				copy.CreatedTime = this.CreatedTime;
				copy.Leadid = this.Leadid;
				copy.ModifiedTime = this.ModifiedTime;
				copy.Potentialid = this.Potentialid;
				copy.RelatedTo = this.RelatedTo;
				copy.Semodule = this.Semodule;
				copy.Subject = this.Subject;
				copy.Taskid = this.Taskid;
				copy.WhoIdId = this.WhoIdId;
				copy.CallPk = this.CallPk;
			copy.AcceptChanges();
			return (VwReportingZohoCallsConnectedAfterDate)copy;
		}
		
		///<summary>
		/// ICloneable.Clone() Member, returns the Deep Copy of this entity.
		///</summary>
		public object Clone(){
			return this.Copy();
		}
		
		///<summary>
		/// Returns a deep copy of the child collection object passed in.
		///</summary>
		public static object MakeCopyOf(object x)
		{
			if (x is ICloneable)
			{
				// Return a deep copy of the object
				return ((ICloneable)x).Clone();
			}
			else
				throw new System.NotSupportedException("Object Does Not Implement the ICloneable Interface.");
		}
		#endregion
		
		
		///<summary>
		/// Returns a value indicating whether this instance is equal to a specified object.
		///</summary>
		///<param name="toObject">An object to compare to this instance.</param>
		///<returns>true if toObject is a <see cref="VwReportingZohoCallsConnectedAfterDateBase"/> and has the same value as this instance; otherwise, false.</returns>
		public virtual bool Equals(VwReportingZohoCallsConnectedAfterDateBase toObject)
		{
			if (toObject == null)
				return false;
			return Equals(this, toObject);
		}
		
		
		///<summary>
		/// Determines whether the specified <see cref="VwReportingZohoCallsConnectedAfterDateBase"/> instances are considered equal.
		///</summary>
		///<param name="Object1">The first <see cref="VwReportingZohoCallsConnectedAfterDateBase"/> to compare.</param>
		///<param name="Object2">The second <see cref="VwReportingZohoCallsConnectedAfterDateBase"/> to compare. </param>
		///<returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
		public static bool Equals(VwReportingZohoCallsConnectedAfterDateBase Object1, VwReportingZohoCallsConnectedAfterDateBase Object2)
		{
			// both are null
			if (Object1 == null && Object2 == null)
				return true;

			// one or the other is null, but not both
			if (Object1 == null ^ Object2 == null)
				return false;

			bool equal = true;
			if (Object1.Accountid != null && Object2.Accountid != null )
			{
				if (Object1.Accountid != Object2.Accountid)
					equal = false;
			}
			else if (Object1.Accountid == null ^ Object1.Accountid == null )
			{
				equal = false;
			}
			if (Object1.Billable != null && Object2.Billable != null )
			{
				if (Object1.Billable != Object2.Billable)
					equal = false;
			}
			else if (Object1.Billable == null ^ Object1.Billable == null )
			{
				equal = false;
			}
			if (Object1.CallDuration != null && Object2.CallDuration != null )
			{
				if (Object1.CallDuration != Object2.CallDuration)
					equal = false;
			}
			else if (Object1.CallDuration == null ^ Object1.CallDuration == null )
			{
				equal = false;
			}
			if (Object1.SafeNameCallDurationInMinutes != null && Object2.SafeNameCallDurationInMinutes != null )
			{
				if (Object1.SafeNameCallDurationInMinutes != Object2.SafeNameCallDurationInMinutes)
					equal = false;
			}
			else if (Object1.SafeNameCallDurationInMinutes == null ^ Object1.SafeNameCallDurationInMinutes == null )
			{
				equal = false;
			}
			if (Object1.SafeNameCallDurationInSeconds != null && Object2.SafeNameCallDurationInSeconds != null )
			{
				if (Object1.SafeNameCallDurationInSeconds != Object2.SafeNameCallDurationInSeconds)
					equal = false;
			}
			else if (Object1.SafeNameCallDurationInSeconds == null ^ Object1.SafeNameCallDurationInSeconds == null )
			{
				equal = false;
			}
			if (Object1.CallOwner != null && Object2.CallOwner != null )
			{
				if (Object1.CallOwner != Object2.CallOwner)
					equal = false;
			}
			else if (Object1.CallOwner == null ^ Object1.CallOwner == null )
			{
				equal = false;
			}
			if (Object1.CallOwnerId != null && Object2.CallOwnerId != null )
			{
				if (Object1.CallOwnerId != Object2.CallOwnerId)
					equal = false;
			}
			else if (Object1.CallOwnerId == null ^ Object1.CallOwnerId == null )
			{
				equal = false;
			}
			if (Object1.CallPurpose != null && Object2.CallPurpose != null )
			{
				if (Object1.CallPurpose != Object2.CallPurpose)
					equal = false;
			}
			else if (Object1.CallPurpose == null ^ Object1.CallPurpose == null )
			{
				equal = false;
			}
			if (Object1.CallResult != null && Object2.CallResult != null )
			{
				if (Object1.CallResult != Object2.CallResult)
					equal = false;
			}
			else if (Object1.CallResult == null ^ Object1.CallResult == null )
			{
				equal = false;
			}
			if (Object1.CallStartTime != null && Object2.CallStartTime != null )
			{
				if (Object1.CallStartTime != Object2.CallStartTime)
					equal = false;
			}
			else if (Object1.CallStartTime == null ^ Object1.CallStartTime == null )
			{
				equal = false;
			}
			if (Object1.CallType != null && Object2.CallType != null )
			{
				if (Object1.CallType != Object2.CallType)
					equal = false;
			}
			else if (Object1.CallType == null ^ Object1.CallType == null )
			{
				equal = false;
			}
			if (Object1.ContactId != null && Object2.ContactId != null )
			{
				if (Object1.ContactId != Object2.ContactId)
					equal = false;
			}
			else if (Object1.ContactId == null ^ Object1.ContactId == null )
			{
				equal = false;
			}
			if (Object1.CreatedBy != null && Object2.CreatedBy != null )
			{
				if (Object1.CreatedBy != Object2.CreatedBy)
					equal = false;
			}
			else if (Object1.CreatedBy == null ^ Object1.CreatedBy == null )
			{
				equal = false;
			}
			if (Object1.CreatedTime != null && Object2.CreatedTime != null )
			{
				if (Object1.CreatedTime != Object2.CreatedTime)
					equal = false;
			}
			else if (Object1.CreatedTime == null ^ Object1.CreatedTime == null )
			{
				equal = false;
			}
			if (Object1.Leadid != null && Object2.Leadid != null )
			{
				if (Object1.Leadid != Object2.Leadid)
					equal = false;
			}
			else if (Object1.Leadid == null ^ Object1.Leadid == null )
			{
				equal = false;
			}
			if (Object1.ModifiedTime != null && Object2.ModifiedTime != null )
			{
				if (Object1.ModifiedTime != Object2.ModifiedTime)
					equal = false;
			}
			else if (Object1.ModifiedTime == null ^ Object1.ModifiedTime == null )
			{
				equal = false;
			}
			if (Object1.Potentialid != null && Object2.Potentialid != null )
			{
				if (Object1.Potentialid != Object2.Potentialid)
					equal = false;
			}
			else if (Object1.Potentialid == null ^ Object1.Potentialid == null )
			{
				equal = false;
			}
			if (Object1.RelatedTo != null && Object2.RelatedTo != null )
			{
				if (Object1.RelatedTo != Object2.RelatedTo)
					equal = false;
			}
			else if (Object1.RelatedTo == null ^ Object1.RelatedTo == null )
			{
				equal = false;
			}
			if (Object1.Semodule != null && Object2.Semodule != null )
			{
				if (Object1.Semodule != Object2.Semodule)
					equal = false;
			}
			else if (Object1.Semodule == null ^ Object1.Semodule == null )
			{
				equal = false;
			}
			if (Object1.Subject != null && Object2.Subject != null )
			{
				if (Object1.Subject != Object2.Subject)
					equal = false;
			}
			else if (Object1.Subject == null ^ Object1.Subject == null )
			{
				equal = false;
			}
			if (Object1.Taskid != null && Object2.Taskid != null )
			{
				if (Object1.Taskid != Object2.Taskid)
					equal = false;
			}
			else if (Object1.Taskid == null ^ Object1.Taskid == null )
			{
				equal = false;
			}
			if (Object1.WhoIdId != null && Object2.WhoIdId != null )
			{
				if (Object1.WhoIdId != Object2.WhoIdId)
					equal = false;
			}
			else if (Object1.WhoIdId == null ^ Object1.WhoIdId == null )
			{
				equal = false;
			}
			if (Object1.CallPk != Object2.CallPk)
				equal = false;
			return equal;
		}
		
		#endregion
		
		#region IComparable Members
		///<summary>
		/// Compares this instance to a specified object and returns an indication of their relative values.
		///<param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
		///</summary>
		///<returns>A signed integer that indicates the relative order of this instance and obj.</returns>
		public virtual int CompareTo(object obj)
		{
			throw new NotImplementedException();
		}
	
		#endregion
		
		#region INotifyPropertyChanged Members
		
		/// <summary>
      /// Event to indicate that a property has changed.
      /// </summary>
		[field:NonSerialized]
		public event PropertyChangedEventHandler PropertyChanged;

		/// <summary>
      /// Called when a property is changed
      /// </summary>
      /// <param name="propertyName">The name of the property that has changed.</param>
		protected virtual void OnPropertyChanged(string propertyName)
		{ 
			OnPropertyChanged(new PropertyChangedEventArgs(propertyName));
		}
		
		/// <summary>
      /// Called when a property is changed
      /// </summary>
      /// <param name="e">PropertyChangedEventArgs</param>
		protected virtual void OnPropertyChanged(PropertyChangedEventArgs e)
		{
			if (!SuppressEntityEvents)
			{
				if (null != PropertyChanged)
				{
					PropertyChanged(this, e);
				}
			}
		}
		
		#endregion
				
		/// <summary>
		/// Gets the property value by name.
		/// </summary>
		/// <param name="entity">The entity.</param>
		/// <param name="propertyName">Name of the property.</param>
		/// <returns></returns>
		public static object GetPropertyValueByName(VwReportingZohoCallsConnectedAfterDate entity, string propertyName)
		{
			switch (propertyName)
			{
				case "Accountid":
					return entity.Accountid;
				case "Billable":
					return entity.Billable;
				case "CallDuration":
					return entity.CallDuration;
				case "SafeNameCallDurationInMinutes":
					return entity.SafeNameCallDurationInMinutes;
				case "SafeNameCallDurationInSeconds":
					return entity.SafeNameCallDurationInSeconds;
				case "CallOwner":
					return entity.CallOwner;
				case "CallOwnerId":
					return entity.CallOwnerId;
				case "CallPurpose":
					return entity.CallPurpose;
				case "CallResult":
					return entity.CallResult;
				case "CallStartTime":
					return entity.CallStartTime;
				case "CallType":
					return entity.CallType;
				case "ContactId":
					return entity.ContactId;
				case "CreatedBy":
					return entity.CreatedBy;
				case "CreatedTime":
					return entity.CreatedTime;
				case "Leadid":
					return entity.Leadid;
				case "ModifiedTime":
					return entity.ModifiedTime;
				case "Potentialid":
					return entity.Potentialid;
				case "RelatedTo":
					return entity.RelatedTo;
				case "Semodule":
					return entity.Semodule;
				case "Subject":
					return entity.Subject;
				case "Taskid":
					return entity.Taskid;
				case "WhoIdId":
					return entity.WhoIdId;
				case "CallPk":
					return entity.CallPk;
			}
			return null;
		}
				
		/// <summary>
		/// Gets the property value by name.
		/// </summary>
		/// <param name="propertyName">Name of the property.</param>
		/// <returns></returns>
		public object GetPropertyValueByName(string propertyName)
		{			
			return GetPropertyValueByName(this as VwReportingZohoCallsConnectedAfterDate, propertyName);
		}
		
		///<summary>
		/// Returns a String that represents the current object.
		///</summary>
		public override string ToString()
		{
			return string.Format(System.Globalization.CultureInfo.InvariantCulture,
				"{24}{23}- Accountid: {0}{23}- Billable: {1}{23}- CallDuration: {2}{23}- SafeNameCallDurationInMinutes: {3}{23}- SafeNameCallDurationInSeconds: {4}{23}- CallOwner: {5}{23}- CallOwnerId: {6}{23}- CallPurpose: {7}{23}- CallResult: {8}{23}- CallStartTime: {9}{23}- CallType: {10}{23}- ContactId: {11}{23}- CreatedBy: {12}{23}- CreatedTime: {13}{23}- Leadid: {14}{23}- ModifiedTime: {15}{23}- Potentialid: {16}{23}- RelatedTo: {17}{23}- Semodule: {18}{23}- Subject: {19}{23}- Taskid: {20}{23}- WhoIdId: {21}{23}- CallPk: {22}{23}", 
				(this.Accountid == null) ? string.Empty : this.Accountid.ToString(),
			     
				(this.Billable == null) ? string.Empty : this.Billable.ToString(),
			     
				(this.CallDuration == null) ? string.Empty : this.CallDuration.ToString(),
			     
				(this.SafeNameCallDurationInMinutes == null) ? string.Empty : this.SafeNameCallDurationInMinutes.ToString(),
			     
				(this.SafeNameCallDurationInSeconds == null) ? string.Empty : this.SafeNameCallDurationInSeconds.ToString(),
			     
				(this.CallOwner == null) ? string.Empty : this.CallOwner.ToString(),
			     
				(this.CallOwnerId == null) ? string.Empty : this.CallOwnerId.ToString(),
			     
				(this.CallPurpose == null) ? string.Empty : this.CallPurpose.ToString(),
			     
				(this.CallResult == null) ? string.Empty : this.CallResult.ToString(),
			     
				(this.CallStartTime == null) ? string.Empty : this.CallStartTime.ToString(),
			     
				(this.CallType == null) ? string.Empty : this.CallType.ToString(),
			     
				(this.ContactId == null) ? string.Empty : this.ContactId.ToString(),
			     
				(this.CreatedBy == null) ? string.Empty : this.CreatedBy.ToString(),
			     
				(this.CreatedTime == null) ? string.Empty : this.CreatedTime.ToString(),
			     
				(this.Leadid == null) ? string.Empty : this.Leadid.ToString(),
			     
				(this.ModifiedTime == null) ? string.Empty : this.ModifiedTime.ToString(),
			     
				(this.Potentialid == null) ? string.Empty : this.Potentialid.ToString(),
			     
				(this.RelatedTo == null) ? string.Empty : this.RelatedTo.ToString(),
			     
				(this.Semodule == null) ? string.Empty : this.Semodule.ToString(),
			     
				(this.Subject == null) ? string.Empty : this.Subject.ToString(),
			     
				(this.Taskid == null) ? string.Empty : this.Taskid.ToString(),
			     
				(this.WhoIdId == null) ? string.Empty : this.WhoIdId.ToString(),
			     
				this.CallPk,
				System.Environment.NewLine, 
				this.GetType());
		}
	
	}//End Class
	
	
	/// <summary>
	/// Enumerate the VwReportingZohoCallsConnectedAfterDate columns.
	/// </summary>
	[Serializable]
	public enum VwReportingZohoCallsConnectedAfterDateColumn
	{
		/// <summary>
		/// ACCOUNTID : 
		/// </summary>
		[EnumTextValue("ACCOUNTID")]
		[ColumnEnum("ACCOUNTID", typeof(System.String), System.Data.DbType.String, false, false, true, 255)]
		Accountid,
		/// <summary>
		/// Billable : 
		/// </summary>
		[EnumTextValue("Billable")]
		[ColumnEnum("Billable", typeof(System.String), System.Data.DbType.String, false, false, true, 255)]
		Billable,
		/// <summary>
		/// Call Duration : 
		/// </summary>
		[EnumTextValue("Call Duration")]
		[ColumnEnum("Call Duration", typeof(System.String), System.Data.DbType.String, false, false, true, 255)]
		CallDuration,
		/// <summary>
		/// Call Duration (in minutes) : 
		/// </summary>
		[EnumTextValue("Call Duration (in minutes)")]
		[ColumnEnum("Call Duration (in minutes)", typeof(System.Double), System.Data.DbType.Double, false, false, true)]
		SafeNameCallDurationInMinutes,
		/// <summary>
		/// Call Duration (in seconds) : 
		/// </summary>
		[EnumTextValue("Call Duration (in seconds)")]
		[ColumnEnum("Call Duration (in seconds)", typeof(System.Double), System.Data.DbType.Double, false, false, true)]
		SafeNameCallDurationInSeconds,
		/// <summary>
		/// Call Owner : 
		/// </summary>
		[EnumTextValue("Call Owner")]
		[ColumnEnum("Call Owner", typeof(System.String), System.Data.DbType.String, false, false, true, 255)]
		CallOwner,
		/// <summary>
		/// Call Owner Id : 
		/// </summary>
		[EnumTextValue("Call Owner Id")]
		[ColumnEnum("Call Owner Id", typeof(System.String), System.Data.DbType.String, false, false, true, 255)]
		CallOwnerId,
		/// <summary>
		/// Call Purpose : 
		/// </summary>
		[EnumTextValue("Call Purpose")]
		[ColumnEnum("Call Purpose", typeof(System.String), System.Data.DbType.String, false, false, true, 255)]
		CallPurpose,
		/// <summary>
		/// Call Result : 
		/// </summary>
		[EnumTextValue("Call Result")]
		[ColumnEnum("Call Result", typeof(System.String), System.Data.DbType.String, false, false, true, 255)]
		CallResult,
		/// <summary>
		/// Call Start Time : 
		/// </summary>
		[EnumTextValue("Call Start Time")]
		[ColumnEnum("Call Start Time", typeof(System.DateTime), System.Data.DbType.DateTime, false, false, true)]
		CallStartTime,
		/// <summary>
		/// Call Type : 
		/// </summary>
		[EnumTextValue("Call Type")]
		[ColumnEnum("Call Type", typeof(System.String), System.Data.DbType.String, false, false, true, 255)]
		CallType,
		/// <summary>
		/// ContactID : 
		/// </summary>
		[EnumTextValue("ContactID")]
		[ColumnEnum("ContactID", typeof(System.String), System.Data.DbType.String, false, false, true, 255)]
		ContactId,
		/// <summary>
		/// CreatedBy : 
		/// </summary>
		[EnumTextValue("CreatedBy")]
		[ColumnEnum("CreatedBy", typeof(System.String), System.Data.DbType.String, false, false, true, 255)]
		CreatedBy,
		/// <summary>
		/// Created Time : 
		/// </summary>
		[EnumTextValue("Created Time")]
		[ColumnEnum("Created Time", typeof(System.DateTime), System.Data.DbType.DateTime, false, false, true)]
		CreatedTime,
		/// <summary>
		/// LEADID : 
		/// </summary>
		[EnumTextValue("LEADID")]
		[ColumnEnum("LEADID", typeof(System.String), System.Data.DbType.String, false, false, true, 255)]
		Leadid,
		/// <summary>
		/// Modified Time : 
		/// </summary>
		[EnumTextValue("Modified Time")]
		[ColumnEnum("Modified Time", typeof(System.DateTime), System.Data.DbType.DateTime, false, false, true)]
		ModifiedTime,
		/// <summary>
		/// POTENTIALID : 
		/// </summary>
		[EnumTextValue("POTENTIALID")]
		[ColumnEnum("POTENTIALID", typeof(System.String), System.Data.DbType.String, false, false, true, 255)]
		Potentialid,
		/// <summary>
		/// RELATED To : 
		/// </summary>
		[EnumTextValue("RELATED To")]
		[ColumnEnum("RELATED To", typeof(System.String), System.Data.DbType.String, false, false, true, 255)]
		RelatedTo,
		/// <summary>
		/// SEMODULE : 
		/// </summary>
		[EnumTextValue("SEMODULE")]
		[ColumnEnum("SEMODULE", typeof(System.String), System.Data.DbType.String, false, false, true, 255)]
		Semodule,
		/// <summary>
		/// Subject : 
		/// </summary>
		[EnumTextValue("Subject")]
		[ColumnEnum("Subject", typeof(System.String), System.Data.DbType.String, false, false, true, 255)]
		Subject,
		/// <summary>
		/// TASKID : 
		/// </summary>
		[EnumTextValue("TASKID")]
		[ColumnEnum("TASKID", typeof(System.String), System.Data.DbType.String, false, false, true, 255)]
		Taskid,
		/// <summary>
		/// Who Id Id : 
		/// </summary>
		[EnumTextValue("Who Id Id")]
		[ColumnEnum("Who Id Id", typeof(System.String), System.Data.DbType.String, false, false, true, 255)]
		WhoIdId,
		/// <summary>
		/// CallPK : 
		/// </summary>
		[EnumTextValue("CallPK")]
		[ColumnEnum("CallPK", typeof(System.Int64), System.Data.DbType.Int64, false, false, false)]
		CallPk
	}//End enum

} // end namespace
